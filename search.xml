<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>礼为上</title>
    <url>/2019/12/21/%E7%A4%BC%E4%B8%BA%E4%B8%8A/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>少年曾是少年</title>
    <url>/2019/12/21/%E5%B0%91%E5%B9%B4%E6%9B%BE%E6%98%AF%E5%B0%91%E5%B9%B4/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>今天看了《少年的你》，觉得还挺有意思的。</p>
<p>虽然我觉得有些剧情接受不了，但是整部剧还是有很多的闪光点。</p>
<p>我就谈谈我内心的一点点想法吧。</p>
<a id="more"></a>
<h1 id="关于校园欺凌"><a href="#关于校园欺凌" class="headerlink" title="关于校园欺凌"></a>关于校园欺凌</h1><p>虽然我知道校园欺凌一直都在，但是我确实没有这样的经历。</p>
<p>我的高中同学，大家都很和谐，都没啥问题。</p>
<p>在我初中的时候，会因为口角和同学打起来，但是这样的经历也不多。老师们很负责，该镇压的镇压，该教育的教育，大部分情况在老师的把控之中，同学们也尊重学习成绩好的同学，不太能搞起来。最关键的是，我打了两三顿之后，边哭边打，就没人敢和我这么搞了。</p>
<p>其实校园欺凌不仅仅只包括电影里面的剧情，校园冷暴力也是算的。</p>
<p>我可能也遭受过校园冷暴力，但是我是一个没心没肺的人，冷暴力算什么，是什么东西。我不是很在乎。</p>
<p>只能说校园欺凌，得老师和大家一起去共同努力，多管管，就会少很多这样的事情。</p>
<h1 id="关于替罪"><a href="#关于替罪" class="headerlink" title="关于替罪"></a>关于替罪</h1><p>替罪这个东西说出来，可能是一个很神奇的现象。</p>
<p>我的认知里面，除非利益大过天，咬牙认罪。</p>
<p>不太可能有一个人为了别人牺牲自己。</p>
<p>但出现了这样的剧情，也真的是情有可原。小北和陈念都还没长大，在情感的作用下，能出现这样的情况。</p>
<p>但是代价真的很大，小北几十年牢，陈念上北大。假设20年过去，他们的感情真的还能这么牢吗？时间能冲淡一切。</p>
<p>我不支持这样的行为。我在面对这个情况的时候，可能就会自然而然退缩。</p>
<p>我果然是一个利益向的动物，很现实呀。</p>
<h1 id="关于长大"><a href="#关于长大" class="headerlink" title="关于长大"></a>关于长大</h1><p>剧中老是说，只要高考完，我们就可以长大，我们就会变成大人。</p>
<p>他这样的目的是想说，只要高考了，我们就可以摆脱现在的处境，我们就能做自己的决定。</p>
<p>但现实真的是这样的吗？</p>
<p>是，也不是。</p>
<p>对于大多人来说，上大学只是一个固有步骤，上完学，还是找不到工作，还是不知道干什么。仍然是随波逐流，上班，考公务员，为各种各样的事情发愁。</p>
<p>对少部分人来说，能在大学里面，开阔自己的视野，找到自己的目标。他们也愿意为了自己的目标，不断去付出努力，拼搏。再之后，通过上各种各样的途径，改变自己的阶层，接触到在自己生活环境里面接触不到的人，做不上学之前永远不可能做的事情。</p>
<p>但是长大不是一蹴而就的，长大是自己有能力去解决生活里面出现的各种各样的问题，有能力去追求自己想要的生活。</p>
<p>有高考，这是一个公平又明显的渠道；但是就算没有高考，也要有这样的决心和努力，我觉得一样能行。</p>
<p>自己的态度，永远比什么都关键。</p>
<h1 id="一点想法"><a href="#一点想法" class="headerlink" title="一点想法"></a>一点想法</h1><p>不管怎么说，抛弃我吐槽的剧情，这句剧是一部好剧。</p>
<p>突然就粉了周冬雨，有点厉害。</p>
]]></content>
      <tags>
        <tag>电影观后感</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第14题</title>
    <url>/2019/12/21/leetcode%E7%AC%AC14%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第14题"><a href="#leetcode第14题" class="headerlink" title="leetcode第14题"></a>leetcode第14题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>编写一个函数来查找字符串数组中的最长公共前缀。</p>
<p>如果不存在公共前缀，返回空字符串 <code>&quot;&quot;</code>。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</span><br><span class="line">输出: &quot;fl&quot;</span><br></pre></td></tr></table></figure>
<p>示例 2:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]</span><br><span class="line">输出: &quot;&quot;</span><br><span class="line">解释: 输入不存在公共前缀。</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>我能想到的就是比较每个开始的地方，出现不同就结束。</p>
<p>其他或多或少都和这个有关系，时间复杂度是一致的。</p>
<p>还有一种很神奇的做法，写在解法2，使用index来进行比较。</p>
<p>还翻到一个非常非常神奇的解法，写在解法3。</p>
<h1 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def longestCommonPrefix(self, strs: List[str]) -&gt; str:</span><br><span class="line">        if strs==None or len(strs)==0:</span><br><span class="line">            return &quot;&quot;</span><br><span class="line">        minLength=9999999999</span><br><span class="line">        for i in range(len(strs)):</span><br><span class="line">            minLength=min(minLength,len(strs[i]))</span><br><span class="line">        for i in range(minLength):</span><br><span class="line">            x=strs[0][i]</span><br><span class="line">            for j in range(1,len(strs)):</span><br><span class="line">                if x!=strs[j][i]:</span><br><span class="line">                    return strs[0][0:i]</span><br><span class="line">        return strs[0][0:minLength]</span><br></pre></td></tr></table></figure>
<h1 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def longestCommonPrefix(self, strs: List[str]) -&gt; str:</span><br><span class="line">        if strs==None or len(strs)==0:</span><br><span class="line">            return &quot;&quot;</span><br><span class="line">        prefix=strs[0]</span><br><span class="line">        for i in range(1,len(strs)):</span><br><span class="line">            while strs[i].find(prefix)!=0:</span><br><span class="line">                prefix=prefix[0:len(prefix)-1]</span><br><span class="line">                if len(prefix)==0:</span><br><span class="line">                    return &quot;&quot;</span><br><span class="line">        return prefix</span><br></pre></td></tr></table></figure>
<h1 id="解法3"><a href="#解法3" class="headerlink" title="解法3"></a>解法3</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def longestCommonPrefix(self, strs: List[str]) -&gt; str:</span><br><span class="line">        s = &quot;&quot;</span><br><span class="line">        for i in zip(*strs):</span><br><span class="line">            if len(set(i)) == 1:</span><br><span class="line">                s += i[0]</span><br><span class="line">            else:</span><br><span class="line">                break           </span><br><span class="line">        return s</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p> 这道题适合增强自信。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第13题</title>
    <url>/2019/12/21/leetcode%E7%AC%AC13%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第13题"><a href="#leetcode第13题" class="headerlink" title="leetcode第13题"></a>leetcode第13题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字符          数值</span><br><span class="line">I             1</span><br><span class="line">V             5</span><br><span class="line">X             10</span><br><span class="line">L             50</span><br><span class="line">C             100</span><br><span class="line">D             500</span><br><span class="line">M             1000</span><br></pre></td></tr></table></figure>
<p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p>
<p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p>
<p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。</p>
<p>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 </p>
<p>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。</p>
<p>给定一个整数，将其转为罗马数字。输入确保在 1 到 3999 的范围内。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;III&quot;</span><br><span class="line">输出: 3</span><br></pre></td></tr></table></figure>
<p>示例 2:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;IV&quot;</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></figure>
<p>示例 3:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;IX&quot;</span><br><span class="line">输出: 9</span><br></pre></td></tr></table></figure>
<p>示例 4:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;LVIII&quot;</span><br><span class="line">输出: 58</span><br><span class="line">解释: L = 50, V= 5, III = 3.</span><br></pre></td></tr></table></figure></p>
<p>示例 5:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;MCMXCIV&quot;</span><br><span class="line">输出: 1994</span><br><span class="line">解释: M = 1000, CM = 900, XC = 90, IV = 4.</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>解法1是我能想到的比较Low的解法。</p>
<p>解法2是比较规则，比别人那学了。</p>
<p>规则就是：每次比较后一个和前一个的值的大小关系即可：</p>
<ul>
<li>前值小于后值，减去前值</li>
<li>前值大于或等于后值，加上前值</li>
<li>最后一个值必然是加上的</li>
</ul>
<p>具体得看解法1和解法2就行了。</p>
<h1 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def romanToInt(self, s: str) -&gt; int:</span><br><span class="line">        nums = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]</span><br><span class="line">        romans = [&quot;M&quot;, &quot;CM&quot;, &quot;D&quot;, &quot;CD&quot;, &quot;C&quot;, &quot;XC&quot;, &quot;L&quot;, &quot;XL&quot;, &quot;X&quot;, &quot;IX&quot;, &quot;V&quot;, &quot;IV&quot;, &quot;I&quot;]</span><br><span class="line"></span><br><span class="line">        lenS=len(s)</span><br><span class="line">        count=0</span><br><span class="line">        tmp=&apos;&apos;</span><br><span class="line">        result=0</span><br><span class="line">        while count&lt;lenS:</span><br><span class="line">            tmp=s[count]</span><br><span class="line">            count+=1</span><br><span class="line">            if count&lt;(lenS):</span><br><span class="line">                if tmp==&apos;I&apos; and (s[count]==&apos;X&apos; or s[count]==&apos;V&apos;):</span><br><span class="line">                    tmp+=s[count]</span><br><span class="line">                    count+=1</span><br><span class="line">                if tmp==&apos;X&apos; and (s[count]==&apos;C&apos; or s[count]==&apos;L&apos;):</span><br><span class="line">                    tmp+=s[count]</span><br><span class="line">                    count+=1</span><br><span class="line">                if tmp==&apos;C&apos; and (s[count]==&apos;M&apos; or s[count]==&apos;D&apos;):</span><br><span class="line">                    tmp+=s[count]</span><br><span class="line">                    count+=1</span><br><span class="line">            tmpIndex=romans.index(tmp)</span><br><span class="line"></span><br><span class="line">            result+=nums[tmpIndex]</span><br><span class="line">        return result</span><br></pre></td></tr></table></figure>
<h1 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def romanToInt(self, s: str) -&gt; int:</span><br><span class="line">        nums = [1000, 500, 100, 50,  10, 5, 1]</span><br><span class="line">        romans = [&quot;M&quot;, &quot;D&quot;, &quot;C&quot;, &quot;L&quot;,  &quot;X&quot;, &quot;V&quot;, &quot;I&quot;]</span><br><span class="line"></span><br><span class="line">        lenS=len(s)</span><br><span class="line">        count=0</span><br><span class="line">        tmp=&apos;&apos;</span><br><span class="line">        result=0</span><br><span class="line">        while count&lt;lenS:</span><br><span class="line">            tmp=s[count]</span><br><span class="line">            count+=1</span><br><span class="line">            tmpIndex=romans.index(tmp)</span><br><span class="line">            if count&lt;(lenS):</span><br><span class="line">                tmpIndex2=romans.index(s[count])</span><br><span class="line">                if nums[tmpIndex]&gt;=nums[tmpIndex2]:</span><br><span class="line">                    result+=nums[tmpIndex]</span><br><span class="line">                else:</span><br><span class="line">                    result-=nums[tmpIndex]</span><br><span class="line">            if count==lenS:</span><br><span class="line">                result+=nums[tmpIndex]</span><br><span class="line">        return result</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>掌握规则比暴力破解好，因为规则可以在范围变大的时候继续使用。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第12题</title>
    <url>/2019/12/21/leetcode%E7%AC%AC12%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第12题"><a href="#leetcode第12题" class="headerlink" title="leetcode第12题"></a>leetcode第12题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字符          数值</span><br><span class="line">I             1</span><br><span class="line">V             5</span><br><span class="line">X             10</span><br><span class="line">L             50</span><br><span class="line">C             100</span><br><span class="line">D             500</span><br><span class="line">M             1000</span><br></pre></td></tr></table></figure>
<p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p>
<p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p>
<p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。</p>
<p>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 </p>
<p>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。</p>
<p>给定一个整数，将其转为罗马数字。输入确保在 1 到 3999 的范围内。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 3</span><br><span class="line">输出: &quot;III&quot;</span><br></pre></td></tr></table></figure>
<p>示例 2:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 4</span><br><span class="line">输出: &quot;IV&quot;</span><br></pre></td></tr></table></figure>
<p>示例 3:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 9</span><br><span class="line">输出: &quot;IX&quot;</span><br></pre></td></tr></table></figure>
<p>示例 4:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 58</span><br><span class="line">输出: &quot;LVIII&quot;</span><br><span class="line">解释: L = 50, V = 5, III = 3.</span><br></pre></td></tr></table></figure></p>
<p>示例 5:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 1994</span><br><span class="line">输出: &quot;MCMXCIV&quot;</span><br><span class="line">解释: M = 1000, CM = 900, XC = 90, IV = 4.</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>这里使用了贪心算法。</p>
<p>首先根据题目的特例，把所有有罗马数字的情况列举出来。</p>
<p>每一步只要数字比一种情况大就减去它，只要最后值等于0，就得到了最后的结果。</p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def intToRoman(self, num: int) -&gt; str:</span><br><span class="line">        # 把阿拉伯数字与罗马数字可能出现的所有情况和对应关系，放在两个数组中</span><br><span class="line">        # 并且按照阿拉伯数字的大小降序排列，这是贪心选择思想</span><br><span class="line">        nums = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]</span><br><span class="line">        romans = [&quot;M&quot;, &quot;CM&quot;, &quot;D&quot;, &quot;CD&quot;, &quot;C&quot;, &quot;XC&quot;, &quot;L&quot;, &quot;XL&quot;, &quot;X&quot;, &quot;IX&quot;, &quot;V&quot;, &quot;IV&quot;, &quot;I&quot;]</span><br><span class="line"></span><br><span class="line">        index = 0</span><br><span class="line">        res = &apos;&apos;</span><br><span class="line">        while index &lt; 13:</span><br><span class="line">            # 注意：这里是等于号，表示尽量使用大的&quot;面值&quot;</span><br><span class="line">            while num &gt;= nums[index]:</span><br><span class="line">                res += romans[index]</span><br><span class="line">                num -= nums[index]</span><br><span class="line">            index += 1</span><br><span class="line">        return res</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>贪心算法不太懂具体什么意思，只说是每一步最优，能得到最后结果。</p>
<p>本题中题目有限制，所以这么干没啥问题。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>目标管理之2019-12-21</title>
    <url>/2019/12/21/%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E4%B9%8B2019-12-21/</url>
    <content><![CDATA[<h1 id="做事之前要定下目标"><a href="#做事之前要定下目标" class="headerlink" title="做事之前要定下目标"></a>做事之前要定下目标</h1><p>心理学小实验进行中。</p>
<a id="more"></a>
<h1 id="每周任务"><a href="#每周任务" class="headerlink" title="每周任务"></a>每周任务</h1><table>
<thead>
<tr>
<th style="text-align:center">任务</th>
<th style="text-align:center">截止日期</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">计算机网络考试</td>
<td style="text-align:center">周六早上</td>
</tr>
<tr>
<td style="text-align:center">八段锦考试</td>
<td style="text-align:center">周六中午</td>
</tr>
<tr>
<td style="text-align:center">论文上交</td>
<td style="text-align:center">周五晚上</td>
</tr>
</tbody>
</table>
<h1 id="周六总结"><a href="#周六总结" class="headerlink" title="周六总结"></a>周六总结</h1><p>论文是彻底没做，得抓紧时间了。</p>
<p>八段锦考试今天应该能行，练得差不多了。</p>
<p>计算机网络考试应该是不行的，没咋看书的内容。</p>
<p>周六应该看一部电影，争取把看直播替换成看书或者看电影。</p>
<h1 id="下一阶段工作目标"><a href="#下一阶段工作目标" class="headerlink" title="下一阶段工作目标"></a>下一阶段工作目标</h1><p>下个阶段工作的目标在于提交论文，刷leetcode，学习计算机网络和看资治通鉴。</p>
]]></content>
      <tags>
        <tag>每日目标管理</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔之2019-12-20</title>
    <url>/2019/12/20/%E9%9A%8F%E7%AC%94%E4%B9%8B2019-12-20/</url>
    <content><![CDATA[<p>不知道为什么，老感觉自己像个废物，干什么事情都像缺少点自信。</p>
<p>从道理上讲，可能是因为自己太多次的放弃，感觉自己说的话，从来都没有完成过。</p>
<p>其实自己真的是这样的一个人，缺乏意志，缺少自信，还喜欢做梦。</p>
<p>现在说是一步一步做起，但很多事情开了头又忘记了。</p>
<a id="more"></a>
<h1 id="关于自我"><a href="#关于自我" class="headerlink" title="关于自我"></a>关于自我</h1><p>最近不知道为什么，老是有一种自我怀疑的状态。</p>
<p>我想追求的和我在做的，好像是两种截然不同的状态。</p>
<p>关于这个方面，是一个老生常谈的问题了，就不多说了。</p>
<p>就是现在自己缺少点自信，缺少点执行力。</p>
<p>每天想的都挺好，但是自然而然的就放松了警惕。</p>
<h1 id="渣男标签"><a href="#渣男标签" class="headerlink" title="渣男标签"></a>渣男标签</h1><p>我肯定是一个渣男，喜新厌旧。</p>
<p>我还是一个痴汉，喜欢围观和偷看。我觉得我的社会工程学学的真的挺好。</p>
<p>但是在讲话和落落大方这方面，就失去了一些味道。</p>
<p>我有点拘泥自身，不敢直接面对一些现实，对现实还有一丢丢的幻想。</p>
<p>不知道为什么，觉得女生漂亮的，都想馋别人身子，但是其实我和他们并没有交际。</p>
<p>我真正能控制的只有我自己。</p>
<p>最近又想追冯夏凝，但是我真的那么喜欢她吗？我觉得未必是，喜欢的是一个幻想，喜欢的是一个念想。</p>
<p>我并没有觉得那么好，我只是不太愿意去接触新的人。再说，这样真的有好结果吗？未必。</p>
<p>但求问心无愧吧。</p>
<h1 id="设定一个目标"><a href="#设定一个目标" class="headerlink" title="设定一个目标"></a>设定一个目标</h1><p>我现在缺少自信，我得通过一件一件事情增强自己的目标。</p>
<p>有两个想法，其一是看资治通鉴，看故事、学古文、写感想。其二就是刷leetcode，重复重复再重复。</p>
<p>不会写没关系，第二次能再弄懂就行。</p>
<p>这么一来，小目标就能搞定了。</p>
<h1 id="七天小目标"><a href="#七天小目标" class="headerlink" title="七天小目标"></a>七天小目标</h1><p>资治通鉴的七篇小短文，弄明白，讲清楚，不要求字数。</p>
<p>leetcode大概30道吧。一天三道，不难。</p>
<p>一步一步挑战自己。</p>
<h1 id="做事不需要太考虑后果"><a href="#做事不需要太考虑后果" class="headerlink" title="做事不需要太考虑后果"></a>做事不需要太考虑后果</h1><p>想做就去做，不用太担心后果。</p>
<p>自己心安就行。</p>
<p>别太考虑别人感受。</p>
<p>都是过客，自己的成长才是真真的。</p>
]]></content>
      <tags>
        <tag>myself</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第10题</title>
    <url>/2019/12/20/leetcode%E7%AC%AC10%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第10题"><a href="#leetcode第10题" class="headerlink" title="leetcode第10题"></a>leetcode第10题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>暂时看不懂，先跳过，回头再来做。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第11题</title>
    <url>/2019/12/20/leetcode%E7%AC%AC11%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第11题"><a href="#leetcode第11题" class="headerlink" title="leetcode第11题"></a>leetcode第11题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p>
<p>说明：你不能倾斜容器，且 n 的值至少为 2。</p>
<p><img src="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/07/25/question_11.jpg" alt="img"></p>
<p>图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,8,6,2,5,4,8,3,7]</span><br><span class="line">输出: 49</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>双指针法，第一次接触。</p>
<p>思路就在于先确定左右两个端点，计算面积。</p>
<p>现在求最大面积。</p>
<p>当长边靠近时，面积受限于短边，不会发生变化。</p>
<p>与之相反，短边靠近，虽然距离变小，但是短边可能变长，面积有可能增大。</p>
<p>所以只要移动短边，一直比较就好了。</p>
<p>解法在下面。</p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def maxArea(self, height: List[int]) -&gt; int:</span><br><span class="line">        #双指针法</span><br><span class="line">        l=0</span><br><span class="line">        r=len(height)-1</span><br><span class="line">        maxArea=0</span><br><span class="line">        while l&lt;=r:</span><br><span class="line">            tempArea=min(height[l],height[r])*(r-l)</span><br><span class="line">            maxArea=max(maxArea,tempArea)</span><br><span class="line">            if height[l]&lt;=height[r]:</span><br><span class="line">                l=l+1</span><br><span class="line">            else:</span><br><span class="line">                r=r-1</span><br><span class="line">        return maxArea</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>认识了双指针法，左右移动，可以大大减少工资量。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第9题</title>
    <url>/2019/12/20/leetcode%E7%AC%AC9%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第9题"><a href="#leetcode第9题" class="headerlink" title="leetcode第9题"></a>leetcode第9题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 121</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure>
<p>示例2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: -121</span><br><span class="line">输出: false</span><br><span class="line">解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</span><br></pre></td></tr></table></figure>
<p>示例3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 10</span><br><span class="line">输出: false</span><br><span class="line">解释: 从右向左读, 为 01 。因此它不是一个回文数。</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>简单题，增强信心专用。</p>
<p>直接看解法就好。</p>
<p>解法在下面。</p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def isPalindrome(self, x: int) -&gt; bool:</span><br><span class="line">        if x&lt;0:</span><br><span class="line">            return False</span><br><span class="line">        y=str(x)</span><br><span class="line">        for i in range(0,(int)(len(y)/2)+1):</span><br><span class="line">            if y[i]!=y[len(y)-i-1]:</span><br><span class="line">                return False</span><br><span class="line">        return True</span><br></pre></td></tr></table></figure>
<h1 id="高端解法"><a href="#高端解法" class="headerlink" title="高端解法"></a>高端解法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def isPalindrome(self, x: int) -&gt; bool:</span><br><span class="line">        if str(x)==str(x)[::-1]:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>拿来增强自信使用。</p>
<p>我的做法不太对，应该直接用列表的倒置比较就行了。比我使用一个循环高端。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第8题</title>
    <url>/2019/12/20/leetcode%E7%AC%AC8%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第8题"><a href="#leetcode第8题" class="headerlink" title="leetcode第8题"></a>leetcode第8题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>请你来实现一个 atoi 函数，使其能将字符串转换成整数。</p>
<p>首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。</p>
<p>当我们寻找到的第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字组合起来，作为该整数的正负号；假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成整数。</p>
<p>该字符串除了有效的整数部分之后也可能会存在多余的字符，这些字符可以被忽略，它们对于函数不应该造成影响。</p>
<p>注意：假如该字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，则你的函数不需要进行转换。</p>
<p>在任何情况下，若函数不能进行有效的转换时，请返回 0。</p>
<p>说明：</p>
<p>假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−2^31,  2^31 − 1]。如果数值超过这个范围，请返回  INT_MAX (2^31 − 1) 或 INT_MIN (−2^31) 。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;42&quot;</span><br><span class="line">输出: 42</span><br></pre></td></tr></table></figure>
<p>示例2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;   -42&quot;</span><br><span class="line">输出: -42</span><br><span class="line">解释: 第一个非空白字符为 &apos;-&apos;, 它是一个负号。</span><br><span class="line">     我们尽可能将负号与后面所有连续出现的数字组合起来，最后得到 -42 。</span><br></pre></td></tr></table></figure>
<p>示例3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;4193 with words&quot;</span><br><span class="line">输出: 4193</span><br><span class="line">解释: 转换截止于数字 &apos;3&apos; ，因为它的下一个字符不为数字。</span><br></pre></td></tr></table></figure>
<p>示例4</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;words and 987&quot;</span><br><span class="line">输出: 0</span><br><span class="line">解释: 第一个非空字符是 &apos;w&apos;, 但它不是数字或正、负号。</span><br><span class="line">     因此无法执行有效的转换。</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>被这道题的各种各样的边界条件搞晕了，出现了一系列问题。</p>
<p>首先，就是没看清题意，就在瞎做，导致测试用例的时候出现一堆问题；</p>
<p>其次，就是python切片用的不好，发现这些操作不改变本身的值的。</p>
<p>比如str=str.strip(),str=str[1:]，想的挺美，可它不行。</p>
<p>最后就是其实这道题可以拿来增强自信，结果被我搞砸了。</p>
<p>解法在下面。</p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def myAtoi(self, str: str) -&gt; int:</span><br><span class="line"></span><br><span class="line">        tmp2=&apos;&apos;</span><br><span class="line">        tmp1=str.strip()</span><br><span class="line">        if tmp1==&apos;&apos;:</span><br><span class="line">            return 0</span><br><span class="line">        minusLabel=False</span><br><span class="line">        if tmp1[0]==&apos;-&apos;:</span><br><span class="line">            minusLabel=True</span><br><span class="line">            tmp2=tmp1[1:]</span><br><span class="line">        elif tmp1[0]==&apos;+&apos;:</span><br><span class="line">            tmp2=tmp1[1:]</span><br><span class="line">        else:</span><br><span class="line">            tmp2=tmp1</span><br><span class="line">        result=0</span><br><span class="line">        count=0</span><br><span class="line">        lenS=len(tmp2)</span><br><span class="line">        while count&lt;lenS:</span><br><span class="line">            if not tmp2[count].isdigit():</span><br><span class="line">                break</span><br><span class="line">            result=result*10+(int)(tmp2[count])</span><br><span class="line">            count=count+1</span><br><span class="line">        if minusLabel:</span><br><span class="line">            result=result*(-1)</span><br><span class="line">        if result&gt;2147483647:</span><br><span class="line">            return 2147483647</span><br><span class="line">        if result &lt;-2147483648:</span><br><span class="line">            return -2147483648</span><br><span class="line">        return result</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>细心一点，就可以拿来增强自信。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>目标管理之2019-12-20</title>
    <url>/2019/12/20/%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E4%B9%8B2019-12-20/</url>
    <content><![CDATA[<h1 id="做事之前要定下目标"><a href="#做事之前要定下目标" class="headerlink" title="做事之前要定下目标"></a>做事之前要定下目标</h1><p>看一本小说到凌晨三点半，价值观很正确，我的做法不正确。</p>
<p>比你努力聪明的人都在认真学，凭什么自己在划水。</p>
<p>任务一天天都没干，做不完永远比没做要强。</p>
<a id="more"></a>
<h1 id="每周任务"><a href="#每周任务" class="headerlink" title="每周任务"></a>每周任务</h1><table>
<thead>
<tr>
<th style="text-align:center">任务</th>
<th style="text-align:center">截止日期</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">计算机网络考试</td>
<td style="text-align:center">周六早上</td>
</tr>
<tr>
<td style="text-align:center">八段锦考试</td>
<td style="text-align:center">周六中午</td>
</tr>
<tr>
<td style="text-align:center">论文上交</td>
<td style="text-align:center">周五晚上</td>
</tr>
</tbody>
</table>
<h1 id="每日待办"><a href="#每日待办" class="headerlink" title="每日待办"></a>每日待办</h1><table>
<thead>
<tr>
<th style="text-align:center">优先级</th>
<th style="text-align:center">任务</th>
<th style="text-align:center">完成打卡</th>
<th style="text-align:center">评分</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">重要且紧急</td>
<td style="text-align:center">阅读，写2000字</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要且紧急</td>
<td style="text-align:center">写引言和第一章</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">每天冥想三次</td>
<td style="text-align:center">√</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">阅读计算机网络</td>
<td style="text-align:center">√</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">刷leetcode</td>
<td style="text-align:center">√</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">练习八段锦</td>
<td style="text-align:center">√</td>
<td style="text-align:center">6</td>
</tr>
</tbody>
</table>
<h1 id="周五总结"><a href="#周五总结" class="headerlink" title="周五总结"></a>周五总结</h1><p>论文居然一点都没写。</p>
<p>看来生存的成本不够大，真的。</p>
<p>得想个办法控制自己。</p>
]]></content>
      <tags>
        <tag>每日目标管理</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第7题</title>
    <url>/2019/12/19/leetcode%E7%AC%AC7%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第7题"><a href="#leetcode第7题" class="headerlink" title="leetcode第7题"></a>leetcode第7题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。</p>
<p>注意:</p>
<p>假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−2^31,  2^31 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 123</span><br><span class="line">输出: 321</span><br></pre></td></tr></table></figure>
<p>示例2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: -123</span><br><span class="line">输出: -321</span><br></pre></td></tr></table></figure>
<p>示例3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 120</span><br><span class="line">输出: 21</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>这题的标签是easy,也真的很easy。</p>
<p>就正常加减计算好了。</p>
<p>但是得注意一下，边界条件，溢出归0的情况。第一次在这上面搞错了。</p>
<p>答案在解法里面，就贴一下看看就好了。</p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def reverse(self, x: int) -&gt; int:</span><br><span class="line">        minusLabel=False</span><br><span class="line">        if x&lt;0:</span><br><span class="line">            minusLabel=True</span><br><span class="line">        temp=abs(x)</span><br><span class="line">        result=0</span><br><span class="line">        while temp:</span><br><span class="line">            result=result*10+temp%10</span><br><span class="line">            temp=(int)(temp/10)</span><br><span class="line">        if minusLabel:</span><br><span class="line">            result*=-1</span><br><span class="line">        if result&gt;2147483647 or result&lt;-2147483648:</span><br><span class="line">            return 0</span><br><span class="line">        return result</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这题适合练手，拿来增强自信。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>目标管理之2019-12-19</title>
    <url>/2019/12/19/%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E4%B9%8B2019-12-19/</url>
    <content><![CDATA[<h1 id="做事之前要定下目标"><a href="#做事之前要定下目标" class="headerlink" title="做事之前要定下目标"></a>做事之前要定下目标</h1><p>昨晚失眠了，感觉今天状态有点不大好，不过还是得干呀。</p>
<a id="more"></a>
<h1 id="每周任务"><a href="#每周任务" class="headerlink" title="每周任务"></a>每周任务</h1><table>
<thead>
<tr>
<th style="text-align:center">任务</th>
<th style="text-align:center">截止日期</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">计算机网络考试</td>
<td style="text-align:center">周六早上</td>
</tr>
<tr>
<td style="text-align:center">八段锦考试</td>
<td style="text-align:center">周六中午</td>
</tr>
<tr>
<td style="text-align:center">论文上交</td>
<td style="text-align:center">周五晚上</td>
</tr>
</tbody>
</table>
<h1 id="每日待办"><a href="#每日待办" class="headerlink" title="每日待办"></a>每日待办</h1><table>
<thead>
<tr>
<th style="text-align:center">优先级</th>
<th style="text-align:center">任务</th>
<th style="text-align:center">完成打卡</th>
<th style="text-align:center">评分</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">重要且紧急</td>
<td style="text-align:center">阅读，写2000字</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要且紧急</td>
<td style="text-align:center">写引言和第一章</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">每天冥想三次</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">阅读计算机网络</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">刷leetcode</td>
<td style="text-align:center">√</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">练习八段锦</td>
<td style="text-align:center">√</td>
<td style="text-align:center">6</td>
</tr>
</tbody>
</table>
]]></content>
      <tags>
        <tag>每日目标管理</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第6题</title>
    <url>/2019/12/18/leetcode%E7%AC%AC6%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第6题"><a href="#leetcode第6题" class="headerlink" title="leetcode第6题"></a>leetcode第6题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。</p>
<p>比如输入字符串为 “LEETCODEISHIRING” 行数为 3 时，排列如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">L   C   I   R</span><br><span class="line">E T O E S I I G</span><br><span class="line">E   D   H   N</span><br></pre></td></tr></table></figure></p>
<p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：”LCIRETOESIIGEDHN”。</p>
<p>请你实现这个将字符串进行指定行数变换的函数：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">string convert(string s, int numRows);</span><br></pre></td></tr></table></figure></p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: s = &quot;LEETCODEISHIRING&quot;, numRows = 3</span><br><span class="line">输出: &quot;LCIRETOESIIGEDHN&quot;</span><br></pre></td></tr></table></figure>
<p>示例2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: s = &quot;LEETCODEISHIRING&quot;, numRows = 4</span><br><span class="line">输出: &quot;LDREOEIIECIHNTSG&quot;</span><br><span class="line">解释:</span><br><span class="line"></span><br><span class="line">L     D     R</span><br><span class="line">E   O E   I I</span><br><span class="line">E C   I H   N</span><br><span class="line">T     S     G</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>我一点思路都没有，直接看的解法。</p>
<p>看懂了就说一下。</p>
<p>第一个解法是遍历字符，通过将字母放到对应行，最后将全部行拼接起来。</p>
<p>那怎么实现呢？</p>
<p>通过一个行进方向来控制具体在哪一行。</p>
<p>如果是首行出发，就一直往下走；如果到达末尾行，就一直往上走。</p>
<p>仔细看，会发现其实题解的状态跟另外一种状态是一样的。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">L     D     R</span><br><span class="line">E   O E   I I</span><br><span class="line">E C   I H   N</span><br><span class="line">T     S     G</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">L   D   R</span><br><span class="line">E O E I I</span><br><span class="line">E C I H N</span><br><span class="line">T   S   G</span><br></pre></td></tr></table></figure>
<p>这两个其实是一样的，巧妙变换就没必要用二维数组解决了。</p>
<p>具体看解法1。</p>
<p>第二种解法就是找规律，找到对应位置的在第几行，然后每行一个列表拼接起来就好了。</p>
<p>首先访问 行 0 中的所有字符，接着访问 行 1，然后 行 2，依此类推…</p>
<p>分成两部分，<strong>首尾行</strong>及在<strong>Z字形上的行</strong>；</p>
<p>分成两种类型数据，第一种是位于i行，间隔为numRows*2-2的数据；第二种是位于Z字形上的数据。</p>
<p>第一种的表示方法为i+k*(numRows*2-2),意思就是第i行，加上间隔的位置，就是这一行的东西。</p>
<p>第二种的表示方法为(k+1)*(numRows*2-2)-i，意思是先找到后面的固定行，往回减就是对应位置。</p>
<p>首尾行只有第一种情况，另外的行则两部分都要考虑。</p>
<p>以示例2第2行举个例子。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: s = &quot;LEETCODEISHIRING&quot;, numRows = 4</span><br><span class="line">输出: &quot;LDREOEIIECIHNTSG&quot;</span><br><span class="line">解释:</span><br><span class="line"></span><br><span class="line">L     D     R</span><br><span class="line">E   O E   I I</span><br><span class="line">E C   I H   N</span><br><span class="line">T     S     G</span><br></pre></td></tr></table></figure>
<p>这里的E、E、I分别位于（0,1,2）*(6)+1的索引上，对应第一种情况。</p>
<p>这里的O、I分别位于5和11上，索引为（1,2）*(6)-1;</p>
<p>具体的就可以看解法2。</p>
<h1 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def convert(self, s: str, numRows: int) -&gt; str:</span><br><span class="line">        if numRows &lt;= 1:</span><br><span class="line">            return s</span><br><span class="line">        zigzag = [&apos;&apos; for i in range(numRows)]</span><br><span class="line">        row = 0</span><br><span class="line">        step = 1</span><br><span class="line">        for c in s:</span><br><span class="line">            if row == 0:</span><br><span class="line">                step = 1</span><br><span class="line">            if row == numRows - 1:</span><br><span class="line">                step = -1</span><br><span class="line">            zigzag[row] += c</span><br><span class="line">            row += step</span><br><span class="line">        return &apos;&apos;.join((zigzag))</span><br></pre></td></tr></table></figure>
<h1 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    def convert(self, s: str, numRows: int) -&gt; str:</span><br><span class="line">        lenS=len(s)</span><br><span class="line">        if numRows&lt;=1:</span><br><span class="line">            return s</span><br><span class="line">        cyclen=numRows*2-2</span><br><span class="line">        x=&apos;&apos;</span><br><span class="line">        for i in range(numRows):</span><br><span class="line">            for j in range(0,lenS,cyclen):</span><br><span class="line">                if j+i&gt;=lenS:</span><br><span class="line">                    break</span><br><span class="line">                x+=s[j+i]</span><br><span class="line">                if i!=0 and i!=(numRows-1) and (j+cyclen-i)&lt;lenS:</span><br><span class="line">                    x+=s[j+cyclen-i]</span><br><span class="line">        return x</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>玩了好久，突然回来刷leetcode，一点感觉都没有。</p>
<p>我选择了直接去看答案。</p>
<p>直接抄了一份解法看。</p>
<p>我想了想，第一遍的时候，不要有太多期望，能看懂就是很好的结果了。</p>
<p>要记得及时总结和反馈，才是最关键的。</p>
<p>当然最最关键的是，还是得坚持啊。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔之2019-12-18</title>
    <url>/2019/12/18/%E9%9A%8F%E7%AC%94%E4%B9%8B2019-12-18/</url>
    <content><![CDATA[<p>有一丢丢感悟，就来写一份随笔。</p>
<p>就记录一下最近自己的一点状态吧。</p>
<p>更加关键的是，我没有阅读，不知道什么内容可以写。</p>
<a id="more"></a>
<h1 id="关于定投"><a href="#关于定投" class="headerlink" title="关于定投"></a>关于定投</h1><p>最近开始定投，但是其实没咋学过系列知识，还是处于一问三不知的状态。</p>
<p>就看了几篇知乎、一两本书、还有公众号的一些说明，我就下场了。</p>
<p>小白鼠既视感，有没有。</p>
<p>先说一下我做这个的优点。</p>
<p>首先是培养财富观，这个是正面的。我觉得纯靠工资，大概率是只能当一个房奴的，我得努力挣钱。不做总比做好。</p>
<p>现在有点后悔。一年前有10W加的时候，没有好好训练，只知道放余额宝吃利息。现在手头没钱了，就得小心翼翼，慢慢攒钱。</p>
<p>第二个优点在于，可以倒逼我去了解投资的对应知识。我现在的状态就和盲人摸象差不多，不知道最后怎么样，也不知道赚还是亏。我得心里有个数。</p>
<p>其他好像就没优点了，那再来说一说缺点。</p>
<p>首要问题就是听风就是雨，直接下场了，没有在充分调研的情况下，直接投资，如果亏了，就是血本无归。</p>
<p>第二个问题就是我都是听别人说的，没有自己真的去了解，到底低盈利收益率，低市盈率，低市净率是不是低估值区域。因为价值理念是我习得的第一信念，在低估值的时候买进，总有一天它能涨起来。</p>
<p>第三个问题是我不清楚，如何计算一个公司的真正价值。它配在哪？我只知道它低估了，但是不知道什么时候跑路走人。并且，如何去找到自己真正满意的公司。我能不能用计算机爬虫区域为自己服务，把自己在意的数据爬下来。</p>
<p>第四个问题就是我钱太少了，我得有一个本金。现在的情况就和过家家是一样的，再怎么样，也改变不了我没钱的本质。</p>
<p>定投还是得尝试一下的，得用两三年时间摸个大概，了解基本的运行规律。</p>
<p>争取不当大白板。</p>
<h1 id="关于要事第一"><a href="#关于要事第一" class="headerlink" title="关于要事第一"></a>关于要事第一</h1><p>我根据要事第一的原则，然后按照优先级给自己的事情排序。</p>
<p>然后就出现问题了。</p>
<p>我只能做几件事情，想做的事情太多了，但是做完一件事情，就没精力做其他事情了。</p>
<p>其次，还有结果导向一说，这周末给自己制定了考试。</p>
<p>没想好，考试没做到应该怎么办。如果不进行惩罚，不就变成洒洒水，开玩笑了嘛。</p>
<p>现在的想法就是每天尽自己的全力，想办法多干一些事情。重要但紧急的事情得多干，多给自己充电。</p>
<p>然后重要且紧急的事情，就得老老实实干着，虽然会有各种各样的事情打扰自己。最好是每次进行都有一个固定的时间周期，比如一小时。</p>
<p>每天要干的事情那么多，自己没有那么上心，甚至还想直播、游戏，这是显然不对的，得尽量克服自己这样的心态。</p>
<h1 id="关于为人处世"><a href="#关于为人处世" class="headerlink" title="关于为人处世"></a>关于为人处世</h1><p>最近我在为人处世上出现问题了，简单地描述一下情况。</p>
<p>我经常被拉着帮这帮那，只是因为我好说话，不懂得拒绝。</p>
<p>但是其实我比较反感这样的情况，因为我现在意识到我的时间是宝贵的，不再是和以前那样，反正是拿来浪费的，多用用也没关系。</p>
<p>最近不知道拒绝这样的行为，很是苦恼。</p>
<p>第二个情况就是我今天中午睡觉被人叫醒了，只睡了18分钟。</p>
<p>这个事情呢，怎么说呢？我觉得还挺严重的。</p>
<p>我为什么要强调睡觉时间呢？因为我中午睡觉是一个高级深度睡眠，对下午的状态恢复非常关键。此外，如果睡不够30分钟，我的脑子就会缺氧，一直难受到睡觉。</p>
<p>其次，叫醒我的初衷，只是因为同学不想干这件事情，我才觉得气愤。因为我没有那种“不要随便给自己找事”的想法，我都是我能帮的，尽量去帮。但是今天中午本来说是1点半以后去做事情，结果就是找到他头上，就把我喊醒。我还是很心寒的。我的想法就是，又不是次次找你，临时跑一下又不会死。</p>
<p>感觉这个对我的影响还挺深的，我都可以给人贴标签了，不知道怎么办了，有点不太想搭理了那个同学了。。。。。本来关系还挺好的。</p>
<p>一般来说，这件事情过一天就过去了，但是我不太能放下，就会一直记在心上。因为我觉得这是心底的品质不行。</p>
<p>现在也不知道咋办好。</p>
<p>现在不知道，怎么样正确地表达自己的想法，我的想法就是整点资治通鉴看看，看看古人有没有这样的情况，能不能让我学习一下。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>生活里出现问题在所难免，我的想法还是积极应对。</p>
<p>想想办法解决一下这些问题。</p>
<p>如果解决了，就写一下总结。</p>
<p>人际关系的问题，冷处理就不写了，妥善处理就记录一下。</p>
]]></content>
      <tags>
        <tag>myself</tag>
      </tags>
  </entry>
  <entry>
    <title>写作的20个原则</title>
    <url>/2019/12/18/%E5%86%99%E4%BD%9C%E7%9A%8420%E4%B8%AA%E5%8E%9F%E5%88%99/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>这本书是我为了学习特意去借的书，告诉我写作应当有怎么样的原则。</p>
<p>看20个原则的名字就懂得了要干什么，最关键的部分在于积累经验，实践加以运用。</p>
<p>20个原则分成3个部分，从结构、风格、可读性来展开。</p>
<p>多写多用，才会有不断的提升。</p>
<a id="more"></a>
<h1 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h1><ol>
<li><strong>运用“自上而下”的写作法</strong>，开门见山，直接告诉全文的核心信息；</li>
<li><strong>分解事物</strong>,即将主题分解，并运用引导句进行过渡；</li>
<li><strong>使用转折词</strong>，告诉读者文章到了那个部分；</li>
<li>采用<strong>六大基本结构</strong>进行叙述，分为时间、比较、线性、范畴、评价、因果六大结构；</li>
<li><strong>整合相似事物</strong>。</li>
</ol>
<h1 id="风格"><a href="#风格" class="headerlink" title="风格"></a>风格</h1><p>采用示例<strong>支撑所说内容</strong>；</p>
<p>让<strong>例证个性化</strong>，增加个性化的例子，让文章难忘；</p>
<p><strong>保持简洁</strong>；</p>
<p><strong>砍断长句</strong>；</p>
<p><strong>删除不必要的词</strong>；</p>
<p><strong>使用主动语态</strong>；</p>
<p><strong>多用动词，少用名词</strong>；</p>
<p><strong>使用平行句式</strong>；</p>
<p><strong>利用句式变化</strong>；</p>
<p><strong>选择恰当的语气</strong>；</p>
<p><strong>保持文章性别中立</strong>；</p>
<h1 id="可读性"><a href="#可读性" class="headerlink" title="可读性"></a>可读性</h1><ol>
<li>利用<strong>排版和设计</strong>，页边距，段落间距等；</li>
<li>运用<strong>可读性工具</strong>，黑体、加粗等等；</li>
<li>使用<strong>标题</strong>或<strong>摘要</strong>；</li>
<li><strong>回顾和修改文章</strong>；</li>
</ol>
]]></content>
      <tags>
        <tag>阅读记录</tag>
      </tags>
  </entry>
  <entry>
    <title>目标管理之2019-12-18</title>
    <url>/2019/12/18/%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E4%B9%8B2019-12-18/</url>
    <content><![CDATA[<h1 id="做事之前要定下目标"><a href="#做事之前要定下目标" class="headerlink" title="做事之前要定下目标"></a>做事之前要定下目标</h1><p>荒废了一个星期，又重新开始了。</p>
<p>老是感觉自己走在开始、放弃、重新开始的路途上。</p>
<p>不过不管怎么样，习惯是习得的。</p>
<p>我今天重新开始了，还是一个好的继续。</p>
<a id="more"></a>
<h1 id="每周任务"><a href="#每周任务" class="headerlink" title="每周任务"></a>每周任务</h1><table>
<thead>
<tr>
<th style="text-align:center">任务</th>
<th style="text-align:center">截止日期</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">计算机网络考试</td>
<td style="text-align:center">周六早上</td>
</tr>
<tr>
<td style="text-align:center">八段锦考试</td>
<td style="text-align:center">周六中午</td>
</tr>
<tr>
<td style="text-align:center">论文上交</td>
<td style="text-align:center">周五晚上</td>
</tr>
</tbody>
</table>
<h1 id="每日待办"><a href="#每日待办" class="headerlink" title="每日待办"></a>每日待办</h1><table>
<thead>
<tr>
<th style="text-align:center">优先级</th>
<th style="text-align:center">任务</th>
<th style="text-align:center">完成打卡</th>
<th style="text-align:center">评分</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">重要且紧急</td>
<td style="text-align:center">写2000字</td>
<td style="text-align:center">√</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">重要且紧急</td>
<td style="text-align:center">写引言和第一章</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">每天冥想三次</td>
<td style="text-align:center">√</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">阅读计算机网络</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">刷leetcode</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">练习八段锦</td>
<td style="text-align:center">√</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">不重要但紧急</td>
<td style="text-align:center">做ppt</td>
<td style="text-align:center">√</td>
<td style="text-align:center">7</td>
</tr>
</tbody>
</table>
]]></content>
      <tags>
        <tag>每日目标管理</tag>
      </tags>
  </entry>
  <entry>
    <title>做自己想做的角色</title>
    <url>/2019/12/17/%E5%81%9A%E8%87%AA%E5%B7%B1%E6%83%B3%E5%81%9A%E7%9A%84%E8%A7%92%E8%89%B2/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>之前一周，我又中断了我坚持的习惯，选择了放纵自己。</p>
<p>然后每次想重新开始的时候，又有点不太敢动身，想着再玩一会吧。</p>
<p>这一会过去，一天就这么结束了。</p>
<p>真是应了那句话，“知道很多道理，但是就是过不好这一生”。</p>
<p>为什么哩？</p>
<p>这些道理，明明说的很对；但是不跟着执行，就永远不会对自己产生作用。</p>
<p>然后每天我都在羞愧和开始的双重想法中挣扎，这个直播（这局游戏）结束，我就开始学习。</p>
<p>但没有啥效果，再看一会（再玩一把）的想法一冒出来，就自然而然的成为了主旋律。</p>
<p>幸好我还有看书这个习惯，它可是我最后的遮羞布了。</p>
<p>每次看完书，我都能回到正确的轨道上，重新开始。</p>
<p>这次，我选择看《高效能人士的七个习惯》，我知道我的所作所为和高效能一点关系都没有，是放纵自己的典型代表。</p>
<p>他的目标和我的目标是一致，我想做一个高效能人士，想成为自己想成为的人。</p>
<a id="more"></a>
<h1 id="角色一说"><a href="#角色一说" class="headerlink" title="角色一说"></a>角色一说</h1><p>我们在生活中经常自觉或者不自觉的扮演了一些角色。比如说儿子、丈夫、学生、父亲这些角色，就是自然而然成为的。随着我们生活的进行，我们就自觉的成为了这样的人。但有些角色，就需要我们自己的努力和选择，比如说公务员、宇航员、学者、艺术家等。我们只能成为这些角色中的几个，甚至只能是一个。因为要成为这样的角色，就得我们付出努力，在这些行业耕耘，有所收获、有所成就，我们才能说自己是这样的一个角色。</p>
<p>对待不同角色的态度，也影响着我们的状态。比如说，作为一个父亲，想着是儿子就该听我的，我说的肯定是对的，只要照着做就行了。这样的结果，就是父子之间自然而然的出现了代沟，父亲想的是，我这么为你考虑，你咋这么不懂事，还要跟我对着干呢？儿子想的是，你说的这些东西，都什么时候的事情了，继续做不就是蠢吗？再举一个例子，称自己是一个画家，但是别人请你展示作品时，发现你的作品一文不值，根本配不上艺术家这个称号。多来几次，你就不好意思再说自己是一个画家了。与之相反的是，父亲换位思考，从儿子角度出发，聊共同话题，父子之间就会亲密无间，不存在代沟一说；画家技艺高超，如齐白石画虾、徐悲鸿奔马，能赢得观众的阵阵喝彩。</p>
<p>那为什么会这样呢？</p>
<p>其实，不同角色之间有共同属性，产能和产出。产能是自己内在的本领，是做好一个角色的保证；产出是自己在进行活动时，能收获的成果。产能低下，就好比拿着一把钝斧头去伐木，不管怎么样努力，基本没有什么收获，意味着没有产出。父亲想当然，没有从儿子角度去思考问题，自然而然就收获了代沟和隔阂。不管怎么努力，都不会拉近儿子与自己的距离。</p>
<p>那怎么样做一个好的角色呢？</p>
<p>首先，得明确自己的角色，自己想要什么？自己的目标是什么？自己想得到怎么样的结果？其次，得不断更新自己的本领，不断提升自己的产能；然后不断去实践，从实践中寻找问题，对标自己的目标，反思改进；最后，朝着自己的目标不断前进，直至达成自己的目标。</p>
<p>这是一个循环往复的过程，需要持之以恒的努力。</p>
<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><p>在做一件事情之前，先弄懂自己的定位，得明白自己在干什么？</p>
<p><strong><em>结果导向</em></strong>，能大幅提升自己的工作效率。</p>
<p>我就是一个典型的例子。刚开始干科研的时候，觉得自己啥也不会，基础不牢，花了一大段时间在打基础。学凸优化、学计算方法、学泛函分析，这些科目的教材都是大部头，难度也很高。因为是想补充自己的基础，但是内心又是想着速成，能马上用到自己的科研上，结果就是前面学着挺认真，后面发现根本不知道怎么样和科研结合，学了没啥用。学了一两百页，就放弃了。我这个阶段就是，基础得补，但这不是当前的主要目的，我的目的还是得把科研做出来。光补基础，但是不直接去科研，会发现时间很大程度上被浪费了。我只有两年半的时间，时间很短，又要科研，又要准备找工作的事情，没有那么多的时间。</p>
<p>现在，我在逐渐改变自己的工作方式，结果导向，就是朝着自己的目标前进。阅读文献，就是抓要点，思路上面可以给自己参考的，就多看看，搞清楚别人是怎么做的。学习的时候，先弄明白基本概念，在做一个整合，了解介绍了什么？是怎么介绍的？多写 笔记，少看书。</p>
<p>不以花了多少时间作为指标，以自己做出了怎么样的成果作为指标。</p>
<p>明白自己的动机，也能够给自己巨大的<strong><em>激励</em></strong>，能支持自己一路走下去。</p>
<p>这个话题来源于知乎用户硅谷IT胖子的回答，我觉得说的非常好。</p>
<p>很多LeetCode题做一道可以提升年薪300-500美元。假设400道Medium、Hard题可以拿到大厂Offer，那么很可能不刷题的人上限也就是不到20万，而大厂senior上限可以轻松35-40万。差不多20万的差距，除以400 等于 500美元。</p>
<p>所以一道Medium或是Hard题的价值大概是500美元年薪每年。而且这个可怕在于是累积的，每年500, 20年下来就是1万块一道题。这还不算大厂背景对个人的加分、对失业的强抵抗力等，只是单单年薪上的收入（当然，税后会少很多）。</p>
<p>这样计算，才有动力去学习LeetCode的算法，你就不会觉得它折磨人了。</p>
<p>LeetCode这么一看，简直跟金山一样，还不去挖？</p>
<p>入宝山而空手归，是不是很难受，是不是很想马上动起来？</p>
<p>所以，做事情之前得明白自己的定位，一是为了激励自己，二是为了以结果为导向，不要多花时间，空花时间，提升自己的效率。</p>
<h1 id="提升"><a href="#提升" class="headerlink" title="提升"></a>提升</h1><p>提升自己的产能不是一件一蹴而就的事情，但是有这几个原则可以使用。</p>
<p>首先是<strong><em>积极主动</em></strong>，就是做事情的时候，要把“我被迫做什么”变成“我想要做什么”。</p>
<p>经常能看到生活里很多人在抱怨，这件事情不是我想做的，是其他人让我做的；我不得不做；我不想干了，结果就是不得不继续干下去。</p>
<p>这样的人，在工作的时候，会有各种各样的怨念，也不会把所有心思放在心上。心态会一直处于失衡的边缘，还会把负面情绪传递给其他人。</p>
<p>我们很难改变我们自己的处境，我们有太多的无奈，我们有很多很多的不得不，但是生活不就是这样吗？</p>
<p>我们可以去拥抱我们不得不做的事情。因为再怎么不得不，我们也是必须要完成这样或那样的任务。</p>
<p>积极主动，就是告诉自己，是我选择了这项任务，我应该去主动地把这件事情做好。</p>
<p>其次是<strong><em>以始为终</em></strong>，它的意思很简单，就是告诉我们应该去找到自己的角色，找到自己的信仰，并且不断地坚持到底。</p>
<p>行百里者半九十，我们会在不知不觉间迷失了自己的方向。做了一段时间之后，因为没有起色，没有进步，就自然而然地放弃掉了。</p>
<p>自己内心一定要有强烈的情感，有不达目的不放手的意志。</p>
<p>这样的事例有很多，刘备三顾茅庐，请诸葛亮出手，才有鞠躬尽瘁死而后已的出现；祖逖闻鸡起舞，只为一心报效国家。</p>
<p>最后是一个简单的原则，可以用来指导我们的生活，那就是<strong><em>要事第一</em></strong>。我们每天都能遇到各种各样的事情，但很多事情对我们自身的价值是不一样的。一个简单的四象限法，按照重要和紧急程度进行分类，可以分为重要且紧急、重要但不紧急、不重要但紧急，不重要且不紧急。</p>
<p>重要且紧急的事情，是我们必须完成的事情，如果不做完，可能就会错过很多东西。</p>
<p>重要但不紧急的事情，是我们坚持要做的事情，如果一直不做，就会变成重要且紧急。</p>
<p>不重要但紧急，就可以先把它做完，然后下次争取不做这样紧急的事情。</p>
<p>不重要且不紧急，这样的事情，就不要去做，对我们的成长一点意义都没有。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在生活中，我们要想成为我们想成为的人，可以先朝着自己的目标前进，用结果导向来告诉自己，自己做的真的怎么样。</p>
<p>数据是不会欺骗人的，我们做得不行的，就是自己真的没有花力气在这上面。</p>
<p>我们的未来如何？</p>
<p>一切都在我们自己的心里。</p>
]]></content>
      <tags>
        <tag>阅读记录</tag>
      </tags>
  </entry>
  <entry>
    <title>目标管理之2019-12-17</title>
    <url>/2019/12/17/%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E4%B9%8B2019-12-17/</url>
    <content><![CDATA[<h1 id="做事之前要定下目标"><a href="#做事之前要定下目标" class="headerlink" title="做事之前要定下目标"></a>做事之前要定下目标</h1><p>荒废了一个星期，又重新开始了。</p>
<p>老是感觉自己走在开始、放弃、重新开始的路途上。</p>
<p>不过不管怎么样，习惯是习得的。</p>
<p>我今天重新开始了，还是一个好的继续。</p>
<a id="more"></a>
<h1 id="每周任务"><a href="#每周任务" class="headerlink" title="每周任务"></a>每周任务</h1><table>
<thead>
<tr>
<th style="text-align:center">任务</th>
<th style="text-align:center">截止日期</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">计算机网络考试</td>
<td style="text-align:center">周六早上</td>
</tr>
<tr>
<td style="text-align:center">八段锦考试</td>
<td style="text-align:center">周六中午</td>
</tr>
<tr>
<td style="text-align:center">论文上交</td>
<td style="text-align:center">周五晚上</td>
</tr>
</tbody>
</table>
<h1 id="每日待办"><a href="#每日待办" class="headerlink" title="每日待办"></a>每日待办</h1><table>
<thead>
<tr>
<th style="text-align:center">优先级</th>
<th style="text-align:center">任务</th>
<th style="text-align:center">完成打卡</th>
<th style="text-align:center">评分</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">重要且紧急</td>
<td style="text-align:center">写4000字</td>
<td style="text-align:center">√</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">重要且紧急</td>
<td style="text-align:center">写引言和第一章</td>
<td style="text-align:center"></td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">每天冥想三次</td>
<td style="text-align:center"></td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">阅读计算机网络</td>
<td style="text-align:center"></td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">刷leetcode</td>
<td style="text-align:center"></td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">重要但不紧急</td>
<td style="text-align:center">练习八段锦</td>
<td style="text-align:center">√</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">不重要但紧急</td>
<td style="text-align:center">给谢老师送发票</td>
<td style="text-align:center">√</td>
<td style="text-align:center">6</td>
</tr>
</tbody>
</table>
]]></content>
      <tags>
        <tag>每日目标管理</tag>
      </tags>
  </entry>
  <entry>
    <title>目标管理之2019-12-11</title>
    <url>/2019/12/11/%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E4%B9%8B2019-12-11/</url>
    <content><![CDATA[<h1 id="做事之前要定下目标"><a href="#做事之前要定下目标" class="headerlink" title="做事之前要定下目标"></a>做事之前要定下目标</h1><p>今天尝试做事之前定下目标，一天要有怎么样的收获，用目标导向来主导学习。</p>
<a id="more"></a>
<h1 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h1><table>
<thead>
<tr>
<th style="text-align:center">时间</th>
<th style="text-align:center">目标</th>
<th style="text-align:center">完成情况</th>
<th style="text-align:center">评分（满分10）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">10点</td>
<td style="text-align:center">查阅一下水力发电学报的要求</td>
<td style="text-align:center">查阅了，感觉难顶，方向上和师姐的太一致了，我决定还是找传感技术学报。<br>实在不行，时间拉长一点，比较好。</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">10点半</td>
<td style="text-align:center">写引言</td>
<td style="text-align:center">一直在看来看去，没有进行</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">13点</td>
<td style="text-align:center">引言</td>
<td style="text-align:center">没开动，第一句话不知道如何下手。<br>文献看来看去。。。。</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">14点</td>
<td style="text-align:center">引言</td>
<td style="text-align:center">在认真的写，但是只写了一句话。。</td>
<td style="text-align:center">5</td>
</tr>
</tbody>
</table>
]]></content>
      <tags>
        <tag>每日目标管理</tag>
      </tags>
  </entry>
  <entry>
    <title>目标管理之2019-12-10</title>
    <url>/2019/12/10/%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E4%B9%8B2019-12-10/</url>
    <content><![CDATA[<h1 id="做事之前要定下目标"><a href="#做事之前要定下目标" class="headerlink" title="做事之前要定下目标"></a>做事之前要定下目标</h1><p>今天尝试做事之前定下目标，一天要有怎么样的收获，用目标导向来主导学习。</p>
<a id="more"></a>
<h1 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h1><table>
<thead>
<tr>
<th style="text-align:center">目标</th>
<th style="text-align:center">完成情况</th>
<th style="text-align:center">评分（满分10）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">寻找超声波数据之间规律，将6个特征补充到10个特征；<br>适当修改，因为已经有10个特征了<br>直接进行下一步目标</td>
<td style="text-align:center">不用进行，重新找到了文件</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">实现单目标回归预测；</td>
<td style="text-align:center">完成了，效果很好</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">实现多目标回归预测</td>
<td style="text-align:center">完成了，效果还不错，有待于改进。</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">阅读《随机森林》综述</td>
<td style="text-align:center">没有进行，浪费了时间</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<h2 id="单目标回归预测"><a href="#单目标回归预测" class="headerlink" title="单目标回归预测"></a>单目标回归预测</h2><table>
<thead>
<tr>
<th style="text-align:center">目标</th>
<th style="text-align:center">完成情况</th>
<th style="text-align:center">评分（满分10）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">pycharm使用pandas读取数据</td>
<td style="text-align:center">完成了</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">数据归一化</td>
<td style="text-align:center">完成了</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">数据预处理</td>
<td style="text-align:center">完成了</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">预处理数据保存</td>
<td style="text-align:center">完成了</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">对label进行处理</td>
<td style="text-align:center">完成了</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">使用决策树进行预测单行结果</td>
<td style="text-align:center">完成了</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">使用随机森林进行预测单行结果</td>
<td style="text-align:center">完成了，精度还很高</td>
<td style="text-align:center">12（超额奖励）=^=</td>
</tr>
</tbody>
</table>
<h1 id="阅读随机森林综述"><a href="#阅读随机森林综述" class="headerlink" title="阅读随机森林综述"></a>阅读随机森林综述</h1><table>
<thead>
<tr>
<th>目标</th>
<th>完成情况</th>
<th style="text-align:center">评分（满分10）</th>
</tr>
</thead>
<tbody>
<tr>
<td>了解随机森林的思想，基本概念</td>
<td>没进行，浪费了时间</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
]]></content>
      <tags>
        <tag>每日目标管理</tag>
      </tags>
  </entry>
  <entry>
    <title>目标管理之2019-12-09</title>
    <url>/2019/12/09/%E7%9B%AE%E6%A0%87%E7%AE%A1%E7%90%86%E4%B9%8B2019-12-09/</url>
    <content><![CDATA[<h1 id="做事之前要定下目标"><a href="#做事之前要定下目标" class="headerlink" title="做事之前要定下目标"></a>做事之前要定下目标</h1><p>今天尝试做事之前定下目标，一天要有怎么样的收获，用目标导向来主导学习。</p>
<a id="more"></a>
<h1 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h1><table>
<thead>
<tr>
<th style="text-align:center">目标</th>
<th style="text-align:center">完成情况</th>
<th>评分（满分10）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">学习Fredholm积分方程的解法</td>
<td style="text-align:center">了解但是没看懂，需要专门补充知识</td>
<td>3</td>
</tr>
<tr>
<td style="text-align:center">了解随机森林算法</td>
<td style="text-align:center">在知乎找到一份微软研究院专门用于介绍随机森林的综述，可以研究随机森林发展</td>
<td>6</td>
</tr>
<tr>
<td style="text-align:center">阅读综述，了解发展历程，选择下一步的方向</td>
<td style="text-align:center">学习了决策树的基本原理,但是没有深入</td>
<td>1</td>
</tr>
<tr>
<td style="text-align:center">学习孤立森林，拿东西来跑一跑看看效果</td>
<td style="text-align:center">跑完了，图片效果还不错</td>
<td>8</td>
</tr>
<tr>
<td style="text-align:center">拿sklearn随机森林跑效果</td>
<td style="text-align:center">跑完了，下一步看看随机森林的适用范围</td>
<td>10</td>
</tr>
<tr>
<td style="text-align:center">研究sklearn的多回归问题</td>
<td style="text-align:center">找到了决策树多回归问题的两个例子</td>
<td>10</td>
</tr>
<tr>
<td style="text-align:center">研究决策树第一个例子的输入和输出</td>
<td style="text-align:center">输入和输出明白了，但是不懂它在干什么</td>
<td>10</td>
</tr>
<tr>
<td style="text-align:center">寻找随机森林实现多回归问题的例子</td>
<td style="text-align:center">好像没有，自己想办法实现吧</td>
<td>1</td>
</tr>
<tr>
<td style="text-align:center">设计明天工作思路，明日工作目标</td>
<td style="text-align:center">设计完成</td>
<td>10</td>
</tr>
</tbody>
</table>
]]></content>
      <tags>
        <tag>每日目标管理</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络概述</title>
    <url>/2019/12/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<p>这一篇是对计算机网络的简单介绍。</p>
<p>主要介绍什么是计算机网络？并用因特网为例进行说明。</p>
<p>介绍了因特网的软硬件构成和网络中的一些关键概念。</p>
<p>针对最关键的协议和层次模型进行了说明。</p>
 <a id="more"></a> 
<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><p>计算机网络是一个网络，它连接了全世界数十亿的计算设备。</p>
<p><strong>因特网</strong>就是它的一个典型代表。</p>
<p><strong>端系统</strong>（也称主机，直接与我们相连的设备，如电脑、手机、Pad、小黄车上的锁等等）通过通信链路和分组交换机连接在一起。</p>
<p>我们现在使用的就是端系统上的<strong>应用程序</strong>，它分布在各个设备上，学名叫做<strong>分布式应用程序</strong>。</p>
<h1 id="网络构成"><a href="#网络构成" class="headerlink" title="网络构成"></a>网络构成</h1><h2 id="网络边缘"><a href="#网络边缘" class="headerlink" title="网络边缘"></a>网络边缘</h2><p>根据不同接入方式，可以使用家庭接入、企业接入、无线接入这三种接入因特网。</p>
<p>家庭接入的方式有：数字用户线、电缆、光纤、拨号和卫星；</p>
<p>企业接入的方式有：以太网和wifi；</p>
<p>无线接入的方式有：4g和LTE。</p>
<p>根据接入的物理媒体分为导引型和非导引型。</p>
<h2 id="网络核心"><a href="#网络核心" class="headerlink" title="网络核心"></a>网络核心</h2><p>网络核心是指通过<strong>网络链路</strong>和<strong>分组交换机</strong>构成的网状网络。</p>
<p>主要的交换方式是<strong>分组交换</strong>和<strong>电路交换</strong>。</p>
<p>分组交换就是通过将<strong>报文</strong>划分成小数据块（<strong>分组</strong>）从而传递信息。</p>
<p>电路交换是指两个端系统间创建端到端连接交换数据。</p>
<p>二者的区别在于，分组交换是一直在交换数据，只不过进行的时候要排队，并且不用的时候，这个通道可以给其他传输使用；电路交换是创建专用通道，在进行传输的时候，不许其他数据通过。</p>
<h1 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h1><p>协议就是约定两个通信实体之间交换报文的格式和顺序，以及实体发送和接收报文要应该采取的动作。</p>
<p>根据网络的协议层次，对协议进行分层，称之为协议栈。</p>
<p>有两种比较普遍的协议栈，因特网协议栈和OSI模型。</p>
<h2 id="因特网协议栈"><a href="#因特网协议栈" class="headerlink" title="因特网协议栈"></a>因特网协议栈</h2><p>根据由上至下的书序，因特网分为应用层、运输层、网络层、链路层和物理层。</p>
<h2 id="OSI模型"><a href="#OSI模型" class="headerlink" title="OSI模型"></a>OSI模型</h2><p>这是在前者的基础上在应用层和运输层之间加入两层，分为应用层、表示层、会话层、运输层、网络层、链路层和物理层。</p>
<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>之后部分是对各层协议的充分介绍，本次还缺少对基础概念的补充，之后会分别说明的。</p>
]]></content>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>发挥主观能动性</title>
    <url>/2019/12/02/%E5%8F%91%E6%8C%A5%E4%B8%BB%E8%A7%82%E8%83%BD%E5%8A%A8%E6%80%A7/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>最近在豆瓣搜怎么做读书笔记的书，顺便看到一本书挺好的，叫做《如何学习》。</p>
<p>我觉着这本书挺好的，就顺便去图书馆借过来看一看。</p>
<p>在看书的时候，发现其实这里面很多说法之前都已经听过了，就花了一个小时把这本书翻完了。</p>
<p>翻完之后，我才发现我现在需要的不是技巧，而是执行。</p>
<p>我可能需要改变的是自己的心态，再改变自己的行动，别去想着速成，迅速地把书看完或者怎么样。</p>
<p>现在要做的，就是让时间慢下来，花更多时间去培养一个好的学习习惯。</p>
<p>简而言之，就是应该发挥自己的主观能动性，在学习的时候主动思考，与学习科目产生互动。</p>
 <a id="more"></a> 
<h1 id="几个问题"><a href="#几个问题" class="headerlink" title="几个问题"></a>几个问题</h1><p>学习和阅读其实是差不多的，得时时刻刻提醒自己，我要在学习中掌握什么？</p>
<p>因此，要发挥主观能动性，让自己积极主动地参与到学习的过程中。</p>
<p>在这里，首先提出几个问题？</p>
<ol>
<li>我学习这门课程的目的是是什么？</li>
<li>关于这门课程，我已经知道了什么？</li>
<li>这门课程的主要内容是什么？</li>
<li>作者接下来要说些什么?</li>
<li>“专业问题”是什么？</li>
<li>针对这些问题，我能提出什么问题？</li>
<li>这门课程最重要的主要信息是什么？</li>
<li>我如何用自己的话表述这些主要信息？</li>
<li>如何组织这些信息？</li>
<li>如何用图标表述这些信息？</li>
<li>这些信息的记忆点是什么？</li>
<li>如何将这些知识和我的已有的知识结合起来。</li>
<li>这些知识对我而言，有什么用呢？</li>
</ol>
<h1 id="为什么要积极主动"><a href="#为什么要积极主动" class="headerlink" title="为什么要积极主动"></a>为什么要积极主动</h1><p>在学习的时候，走上“阅读-记忆-重复”这条道路的时候，会发现学的特别累。</p>
<p>我记得我以前考研的时候，学数学就特别地没有效果。我会看好多遍同一道题的解法，只记得这道题应该是从这里到这里的。我不去想上下步骤之间的关系，而是在记忆题目到了这一步，就应该这么写，最后的结果就是，我遇到一道题，不知道怎么去讲，为什么它是这么做的。恰恰相反，为了应试，我拿到一道题，就完全凭本能去写，忘了就直接翻答案，重新记忆。</p>
<p>表面上看，这样的效果虽然辛苦一点、耗时间一点，效果还不错。遇到题目，都能写个七七八八，考研数学考的还挺好。</p>
<p>我当时以为自己找到了正确的学习方法，凭这样的方法，可以把理科的东西变成文科的东西，只要能记忆，就没问题了。但是实际上，我发现这样是有问题的。生活并不是一成不变的，我们没有时间精力像考研的时候，一门心思放在学习单门科目上。而我这样的方法，凭借的是重复性的记忆，对这些知识根本没有思考，时间过的越久，就越容易忘记。</p>
<p>而且，生活是由很多难题组合起来的。单独几门科目，是完全不够的。就像我现在来说，想找到一份好的互联网工作。而作为小白的我，要学的东西，可多了。数据结构、计算机组成、计算机网络、leetcode等等，这些东西，一门课就要折腾了我好久，而且我还不能忘记，要学会融会贯通。仅仅依靠重复性记忆，真的是太难了。我自己觉得一点也不现实。</p>
<p>这就是我一直在找学习方法的原因。我希望找一个方法，能够让我把相应的知识串起来，让我能从这里到那里，学会举一反三。</p>
<p>看了很多学习相关的书，发现他们之间，都有一个相同之处，就是要求在学习的时候，能够积极主动地思考问题。做一个有自我要求的人，比什么都重要。</p>
<h1 id="自身问题"><a href="#自身问题" class="headerlink" title="自身问题"></a>自身问题</h1><p>我现在的问题，我一直都知道。</p>
<p>最典型的问题，就是目的不够明确，意志不够坚定。</p>
<p>我还是在心底排斥阅读、学习，更加愿意把时间花在直播和小说上。每天都告诉自己这样是不对的，不能浑浑噩噩，一直看直播的自己是没有未来的。</p>
<p>但是每天仍然还是要看直播，每天还是要熬夜看小说到两点。</p>
<p>这就是不够明确，不知道忍耐带给自己的回报是远远超过现在的付出的。</p>
<p>其次，就是心态浮躁。</p>
<p>我在学习的时候，不太愿意按照问问题的方式去进行，更加愿意按自己的土方法进行。就是因为这个方法更加耗费时间，让我“看完”、“学完”的这个过程变慢了。</p>
<p>结果就是这种“看完”、“学完”是没有效果的，让我说相关知识，我是说不出口的。</p>
<h1 id="执行比什么都关键"><a href="#执行比什么都关键" class="headerlink" title="执行比什么都关键"></a>执行比什么都关键</h1><p>阅读、学习，如果不能和自身结合起来，是没有效果的。</p>
<p>我们学到了东西，要想一想，这个东西和我有什么关系。</p>
<p>孔子说：“择其善者而从之，择其不善者而改之”。我基本没有走出校园，但是身上也养成了各种各样的问题，我能意识到这些问题，我也能找找方法相关的书来给自己教导。</p>
<p>但是我最缺少的就是执行，缺少按照最好那个方向前进的动力。</p>
<p>我知道、我知道、我知道很多，但是我做不到、做不到、什么都做不到。这就是一个很讽刺的现实，这意味着我不愿意改变，只能躺在自己的舒适区。</p>
<p>我成不了大事。</p>
<p>我的未来不能没有起伏，我不想我没有进步的空间。</p>
]]></content>
      <tags>
        <tag>阅读记录</tag>
      </tags>
  </entry>
  <entry>
    <title>人间五十年</title>
    <url>/2019/11/30/%E4%BA%BA%E9%97%B4%E4%BA%94%E5%8D%81%E5%B9%B4/</url>
    <content><![CDATA[<p><center><font size="8">人间五十年，如梦亦如幻。</font></center></p>
<p><center><font size="8">有生斯有死，壮士复何憾。</font></center><br><a id="more"></a> </p>
<p>遇到这首诗的时候，是在读《织田信长》的时候。刚开始看见的时候，还没有什么感觉，后来就觉得越来越有味道。</p>
<p>一个人活在人世间五十年，能遇到各种各样的事情，有兴盛，有衰败，有奋斗，有颓废。一个人在自己的生活里面波荡起伏，永远都是自己的主角。所有一切就如梦一般，交织在一起。</p>
<p>死亡也是一个人不可避免的事情，既然在人世间经历了五十年，为了自己的理想和未来奋斗了。那么在去世的那一刻，又有什么值得遗憾的呢？</p>
<p>这只是我的一点点理解。从这首诗里面，我看到了人生的短暂、看到了为梦想奋进的力量、看到了面对结局时的不遗憾。</p>
<p>而这三点，都是我现在认识不太深刻的。</p>
<p>我是95年出生的，一直觉得自己很年轻，感觉自己一直在自己18岁的时候，那时候的无忧无虑和天真烂漫。我一直觉得时间还很多，我还有充足的时间来消耗，我可以做各种各样、我喜欢做的事情。</p>
<p>但是当身边出现越来越多零零后的时候、我的高中同学都逐渐开始结婚生娃的时候，我忽然意识到时间可能不是我以前想的那么多，我没有时间像我以前想的那样，随波逐流，慢慢成长。我得扛起属于我的胆子。</p>
<p>信长在唱《敦盛》的时候，想着是用自己的一生平定战国、结束乱世、重建秩序。他觉得五十年时间足够长，足够完成自己的梦想。而他也是一步步进行的，从尾张的大傻瓜；到桶狭间绝处逢生、击破今川义元；再从攻略美浓到天下布武；最后在一统战国的前夜，在本能寺黯然落幕。他的人生五十年，有种种绝境，但从不绝望；在实现梦想时，却又遭遇本能寺之变，黯然落幕，可以说是这首诗的完美写照了。</p>
<p>此刻，我在想我的人间五十年会怎么样？五十年已过半，剩下25年，我能不能像信长一样，朝着自己的梦想一步一步前进？现在的我并不是很确定，但是我明白人生其实很短暂，得抓住时间，朝着自己的目的地前进。</p>
<p>其实，在生活里面，我一直说自己是佛系玩家。当然，可能这和我个人的性格有原因，不愿意主动去追求。我有梦想吗？我想我是有的，我想财务自由，想爸爸妈妈不用再那么辛苦，但是我只是想过，我没有行动过。</p>
<p>最早，进入大学时，我没有意识到人与人是有区别的，工作和工作也是有区别的。我想的是早点毕业，早点进入社会，赚钱养家糊口，减轻父母的负担。但是刚刚进入大学就开始迷失了眼，到了一种颓废、堕落的环境，整天在床上躺着看小说，有课就去上，没课就回来继续躺着。当时的想法是，就等着毕业找工作了。</p>
<p>一直浑浑噩噩过了三年，成绩不上不下，没挂也说不上好。看到室友拿了奖学金，有学业奖学金、省政府奖学金，好几千块钱，心里还是很羡慕的。但是由于养成了惯性，已经不太能继续学习了，宁愿空耗时间，也不太愿意主动去学习。</p>
<p>当时其实是有很多比赛可以参加的，有很多提升自己的途径。我可以去参加电子竞赛，也可以去参加数模比赛，也可以走出去兼职，提前体验环境；也可以学习各类知识，为自己的职业生涯做帮助。</p>
<p>但是我什么也没有去做，我选择做了葛优，躺着就好了。其实是当时的我没有确定自己的目标，没有自己的梦想，不愿意为了梦想去奋斗。想着是水到渠成，自然而然地就能找工作了。没有梦想和行动，在日常生活里的很多时间是被空耗了的，没有意义也没有价值的。</p>
<p>至于面对结局时的不遗憾，我想我还是挺有体会到。因为在我觉得比较重要的时间节点上，我收获的都是失败，但是这些经历我一点也不遗憾。</p>
<p>其一是考浙大的研究生。</p>
<p>在大三下的时候，我发现我能找到的工作都只有三四千，当然这和我在学校里荒废了时间有很大的关系。先不说这个，当时学校里的宣传说法是，读了研究生之后，工资会高很多，起薪可以到七八千。</p>
<p>我相信了这个说法，想着去读研，多干点活，以后找工作可以好找一点。</p>
<p>当时考母校的研究生还很简单，简单到什么程度呢？只要过了国家线，就有书可以读。当时的我有点天真，也有点自命不凡，我觉得可以兜底，不如去考更加好的学校。我还想着，反正可以回来，就顺便找个离家近的学校考呗，然后就选择了浙大。</p>
<p>其实我成绩不是很好，也没有什么可以拿的出手的。但是我就是想考，有点不撞南墙不回头的感觉。</p>
<p>当时的我，为了考浙大，就改了自己很多毛病。感觉时间不太够，就天天六点起；感觉自己压力大，就天天去跑步，天天跑十公里；感觉考不上了，就安慰自己，先努力再说，你怎么知道自己不可以。</p>
<p>还记得当时的图书馆、当时的操场、当时的湖边，都有自己留下的痕迹。</p>
<p>在这个阶段，我想我是竭尽全力的，那么纯粹又简单，想着自己应该能行。</p>
<p>最后初试结果挺好的，分也挺高的。只要我复试到60分就应该被录取了，不用去和别人竞争，只要做好自己就没问题了。但结果就恰恰栽在了复试上。</p>
<p>又回到了起点，大学三年，没啥积累，没啥经验，没有去改变自己的一些坏习惯，就出问题了。当时在面试的时候，疯狂答非所问，然后说自己很弱，一个问题都没回答上来。</p>
<p>但是我还觉得当时老师们问的问题挺简单的，这些问题我都在书上见过，我在现场却说不出来。</p>
<p>最后就调剂回母校了，这个经历有点难受，但是我一点也不遗憾，因为在这个过程中，我付出了我的全部努力，我最后的失败，是我以前的积累不够所导致的。</p>
<p>如果我没有做这个选择，我可能不太会为此付出全力，我可能比现在的我还不如。</p>
<p>我接受这个结果，我能重新出发。</p>
<p>人生没有如果，人生就是由自己一个一个选择构成的，我们能做的，就是做好自己。</p>
]]></content>
      <tags>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔之2019-11-30</title>
    <url>/2019/11/30/%E9%9A%8F%E7%AC%94%E4%B9%8B2019-11-30/</url>
    <content><![CDATA[<p>其实很不想写这个随笔，因为昨晚熬夜了，然后今天的状态就有点不太对，感觉老是想着划水。</p>
<p>但是又想得记着自己的每日任务，又还是坚持着写写了。</p>
<p>也不知道写写什么东西，就写一写自己身上发生的一些事情了。</p>
<a id="more"></a> 
<h1 id="看论语"><a href="#看论语" class="headerlink" title="看论语"></a>看论语</h1><p>说实话，看论语我觉得我自己没有多少收获，因为我没有联系实际。</p>
<p>还是在像以前读语文书的时候，弄明白这句话是什么意思，也没有很多的体会，感觉最后有点像沦为形式。</p>
<p>看的那本书后面有写张居正写论语，我觉得还挺好的。结合自身的实际感受，体会这句话是什么意思，可能会有更加的体悟。</p>
<p>不过不管怎么说，在自己的博客里面挂点论语也没啥问题，方便自己以后再来看一遍，再来想一想。</p>
<h1 id="CSAPP"><a href="#CSAPP" class="headerlink" title="CSAPP"></a>CSAPP</h1><p>《java语言程序设计》学了前面的十章，然后我看后面有很多GUI界面的知识，但是我觉得不应该很机械地学，想着任务驱动。</p>
<p>但是我找项目找了好几天，不知道咋开始，就准备学《算法》第四版的那本书。</p>
<p>然后在这个地方卡了好几天，状态不太对。</p>
<p>重新找了一本书学习，叫做《CSAPP》。</p>
<p>看这本书就没啥问题了，赫赫有名，想着先看这本书总没有问题。</p>
<p>今天刚开看，统计了一下，700多页。我想着的是，在不考虑习题的情况下，先过一遍，弄懂大概。</p>
<p>习题作为补充，不然我容易在有习题的情况下卡死在习题这一块。从入门到放弃，就是这么来的。</p>
<p>这样的话，给自己的时间就很充裕了。每天三个小时的训练，在元旦前把这本书过一遍吧。</p>
<p>因为我学过单片机，我的汇编学的还挺好的，我觉着应该没啥难度。</p>
<p>我可是一个综合性人才，啥都学过，啥都不精通。</p>
<p>是时候把这些东西整合起来了。</p>
<h1 id="关于科研"><a href="#关于科研" class="headerlink" title="关于科研"></a>关于科研</h1><p>科研真的是我头疼的东西，老是提不起劲来搞科研。</p>
<p>但是毕业真的是一个摆在眼前的东西。</p>
<p>明天就是12月，得把小论文搞起来，真的真的不能在浪费一点时间了。</p>
<p>在元旦前得把论文投出去了。</p>
<p>权衡了一下时间，发现28号写的随笔和放屁一样。除了每天的两项基本任务在做以外，其他时间一律白给。</p>
<p>真的真的不能在这样了。</p>
<p>科研得有充分的时间，自己得挤一挤时间了。</p>
<p># </p>
<p>突然注意到一个人挺好看的，就忍不住多看了几眼，在这里写一写呗。</p>
<p>前几天注意到突然她的微博搞了点活动，相册不给看了。</p>
<p>当时还挺失落的，不能多看她照片了，过了一天才反应过来，原来是失恋了。</p>
<p>我就有点感慨了，现在小年轻真厉害，刚进大学，就有男朋友了。</p>
<p>我以前在干啥呢。</p>
<p>居然有点想追的冲动，但是现在一个人又很好。等到我毕业的时候，可能她就找到新男朋友了。</p>
<p>不管怎么样，就看呗。有个可爱、漂亮的女生愿意分享微博，就偷看呗。</p>
<h1 id="健身"><a href="#健身" class="headerlink" title="健身"></a>健身</h1><p>今天又下雨了，其实我还挺想跑步的，但是老是出不了门，迈不开步子。</p>
<p>想想自己以前考研的时候，天天十公里，还挺开心的。</p>
<p>现在出门跑个四五圈，就开始大喘气，想溜号了，真不应该呀。</p>
<p>得好好健身，好好穿着，做一个正常的一点的男孩子。</p>
<p>想想自己已经25了，现在还是这niao样，自己都有点脸红。</p>
<p>想要一个好身材，我得好好行动。</p>
<h1 id="end"><a href="#end" class="headerlink" title="end"></a>end</h1><p>今天就这样了，随便写点呗，不讲大道理，就写一写自己的心理状态吧。</p>
<p>有一说一，随便写写，还挺快乐的。</p>
<p>我为啥不愿意动笔呢？</p>
]]></content>
      <tags>
        <tag>myself</tag>
      </tags>
  </entry>
  <entry>
    <title>论语</title>
    <url>/2019/11/30/%E8%AE%BA%E8%AF%AD%E4%B9%8B%E5%AD%A6%E8%80%8C/</url>
    <content><![CDATA[<center><font size="8">学而</font></center><br> <a id="more"></a><br><br>　　子曰：“学而时习之，不亦说乎？有朋自远方来，不亦乐乎？人不知而不愠，不亦君子乎？”<br><br>　　有子曰：“其为人也孝弟，而好犯上者，鲜矣；不好犯上而好作乱者，未之有也。君子务本，本立而道生。孝弟也者，其为仁之本与！”<br><br>　　子曰：“巧言令色，鲜矣仁！”<br><br>　　曾子曰：“吾日三省吾身：为人谋而不忠乎？与朋友交而不信乎？传不习乎？”<br><br>　　子曰：“道千乘之国，敬事而信，节用而爱人，使民以时。”<br><br>　　子曰：“弟子入则孝，出则弟，谨而信，泛爱众，而亲仁，行有余力，则以学文。”<br><br>　　子夏曰：“贤贤易色；事父母，能竭其力；事君，能致其身；与朋友交，言而有信。虽曰未学，吾必谓之学矣。”<br><br>　　子曰：“君子不重则不威，学则不固。主忠信，无友不如己者，过，则勿惮改。”<br><br>　　曾子曰：“慎终追远，民德归厚矣。”<br><br>　　子禽问于子贡曰：“夫子至于是邦也，必闻其政，求之与，抑与之与？”子贡曰：“夫子温、良、恭、俭、让以得之。夫子之求之也，其诸异乎人之求之与？”<br><br>　　子曰：“父在，观其志；父没，观其行；三年无改于父之道，可谓孝矣。”<br><br>　　有子曰：“礼之用，和为贵。先王之道，斯为美。小大由之。有所不行。知和而和，不以礼节之，亦不可行也。”<br><br>　　有子曰：“信近于义，言可复也。恭近于礼，远耻辱也。因不失其亲，亦可宗也。”<br><br>　　子曰：“君子食无求饱，居无求安，敏于事而慎于言，就有道而正焉。可谓好学也已。”<br><br>　　子贡曰：“贫而无谄，富而无骄，何如？”子曰：“可也。未若贫而乐道，富而好礼者也。”子贡曰：“《诗》云：‘如切如磋，如琢如磨’，其斯之谓与？”子曰：“赐也，始可与言《诗》已矣，告诸往而知来者。”<br><br>　　子曰：“不患人之不己知，患不知人也。”<br><br><center><font size="8">为政</font></center>

<p>　　子曰：“为政以德，譬如北辰，居其所而众星共之。”</p>
<p>　　子曰：“《诗》三百，一言以蔽之，曰：‘思无邪’。”</p>
<p>　　子曰：“道之以政，齐之以刑，民免而无耻。道之以德，齐之以礼，有耻且格。”</p>
<p>　　子曰：“吾十有五而志于学，三十而立，四十而不惑，五十而知天命，六十而耳顺，七十而从心所欲，不逾矩。”</p>
<p>　　孟懿子问孝，子曰：“无违。”樊迟御，子告之曰：“孟孙问孝于我，我对曰‘无违’。”樊迟曰：“何谓也？”子曰：“生，事之以礼；死，葬之以礼，祭之以礼。”</p>
<p>　　孟武伯问孝。子曰：“父母唯其疾之忧。”</p>
<p>　　子游问孝。子曰：“今之孝者，是谓能养。至于犬马皆能有养；不敬，何以别乎？”</p>
<p>　　子夏问孝。子曰：“色难。有事，弟子服其劳；有酒食，先生馔，曾是以为孝乎？”</p>
<p>　　子曰：“吾与回言终日，不违，如愚。退而省其私，亦足以发，回也不愚。”</p>
<p>　　子曰：“视其所以，观其所由，察其所安，人焉廋哉？”</p>
<p>　　子曰：“温故而知新，可以为师矣。”</p>
<p>　　子曰：“君子不器。”</p>
<p>　　子贡问君子。子曰：“先行其言而后从之。”</p>
<p>　　子曰：“君子周而不比，小人比而不周。”</p>
<p>　　子曰：“学而不思则罔，思而不学则殆。”</p>
<p>　　子曰：“攻乎异端，斯害也已！”</p>
<p>　　子曰：“由，诲汝知之乎！知之为知之，不知为不知，是知也。”</p>
<p>　　子张学干禄。子曰：“多闻阙疑，慎言其余，则寡尤；多见阙殆，慎行其余，则寡悔。言寡尤，行寡悔，禄在其中矣。”</p>
<p>　　哀公问曰：“何为则民服？”孔子对曰：“举直错诸枉，则民服；举枉错诸直，则民不服。”</p>
<p>　　季康子问：“使民敬、忠以劝，如之何？”子曰：“临之以庄，则敬；孝慈，则忠；举善而教不能，则劝。”</p>
<p>　　或谓孔子曰：“子奚不为政？”子曰：“《书》云：‘孝乎惟孝，友于兄弟，施于有政。’是亦为政，奚其为为政？”</p>
<p>　　子曰：“人而无信，不知其可也。大车无輗，小车无軏，其何以行之哉？”</p>
<p>　　子张问：“十世可知也？”子曰：“殷因于夏礼，所损益，可知也；周因于殷礼，所损益，可知也。其或继周者，虽百世，可知也。”</p>
<p>　　子曰：“非其鬼而祭之，谄也；见义不为，无勇也。”</p>
<center><font size="8">八佾</font></center>

<p>　　孔子谓季氏:“八佾舞于庭，是可忍也，孰不可忍也?”</p>
<p>　　三家者以《雍》彻,子曰：“‘相维辟公，天子穆穆’，奚取于三家之堂？”</p>
<p>　　子曰：“人而不仁，如礼何？人而不仁，如乐何？”</p>
<p>　　林放问礼之本,子曰：“大哉问！礼，与其奢也，宁俭；丧，与其易也，宁戚。”</p>
<p>　　子曰：“夷狄之有君，不如诸夏之亡也。”</p>
<p>　　季氏旅于泰山。子谓冉有曰：“女弗能救与？”对曰：“不能。”子曰：“呜呼！曾谓泰山不如林放乎？”</p>
<p>　　子曰：“君子无所争，必也射乎！揖让而升，下而饮。其争也君子。”</p>
<p>　　子夏问曰：“‘巧笑倩兮，美目盼兮，素以为绚兮’何谓也？”子曰：“绘事后素。”曰：“礼后乎？”子曰：“起予者商也，始可与言《诗》已矣。”</p>
<p>　　子曰：“夏礼吾能言之，杞不足征也；殷礼吾能言之，宋不足征也。文献不足故也，足则吾能征之矣。”</p>
<p>　　子曰：“禘自既灌而往者，吾不欲观之矣。”</p>
<p>　　或问禘之说。子曰：“不知也。知其说者之于天下也，其如示诸斯乎！”指其掌。</p>
<p>　　祭如在，祭神如神在。子曰：“吾不与祭，如不祭。”</p>
<p>　　王孙贾问曰：“‘与其媚于奥，宁媚于灶’，何谓也？”子曰：“不然，获罪于天，无所祷也。”</p>
<p>　　子曰：“周监于二代，郁郁乎文哉！吾从周。”</p>
<p>　　子入太庙，每事问。或曰：“孰谓鄹人之子知礼乎？入太庙，每事问。”子闻之，曰：“是礼也。”</p>
<p>　　子曰：“射不主皮，为力不同科，古之道也。”</p>
<p>　　子贡欲去告朔之饩羊，子曰：“赐也！尔爱其羊，我爱其礼。”</p>
<p>　　子曰：“事君尽礼，人以为谄也。”</p>
<p>　　定公问：“君使臣，臣事君，如之何？”孔子对曰：“君使臣以礼，臣事君以忠。”</p>
<p>　　子曰：“《关雎》，乐而不淫，哀而不伤。”</p>
<p>　　哀公问社于宰我，宰我对曰：“夏后氏以松，殷人以柏，周人以栗，曰使民战栗。”子闻之，曰：“成事不说，遂事不谏，既往不咎。”</p>
<p>　　子曰：“管仲之器小哉！”或曰：“管仲俭乎？”曰：“管氏有三归，官事不摄，焉得俭？”“然则管仲知礼乎？”曰：“邦君树塞门，管氏亦树塞门；邦君为两君之好，有反坫。管氏亦有反坫，管氏而知礼，孰不知礼？”</p>
<p>　　子语鲁大师乐，曰：“乐其可知也。始作，翕如也；从之，纯如也，皦如也，绎如也，以成。”</p>
<p>　　仪封人请见，曰：“君子之至于斯也，吾未尝不得见也。”从者见之。出曰：“二三子何患于丧乎？天下之无道也久矣，天将以夫子为木铎。”</p>
<p>　　子谓《韶》：“尽美矣，又尽善也。”谓《武》：“尽美矣，未尽善也。”</p>
<p>　　子曰：“居上不宽，为礼不敬，临丧不哀，吾何以观之哉？”</p>
<center><font size="8">里仁</font></center>

<p>　　子曰：“里仁为美，择不处仁，焉得知？”</p>
<p>　　子曰：“不仁者不可以久处约，不可以长处乐。仁者安仁，知者利仁。”</p>
<p>　　子曰：“唯仁者能好人，能恶人。”</p>
<p>　　子曰：“苟志于仁矣，无恶也。”</p>
<p>　　子曰：“富与贵，是人之所欲也；不以其道得之，不处也。贫与贱，是人之所恶也；不以其道得之，不去也。君子去仁，恶乎成名？君子无终食之间违仁，造次必于是，颠沛必于是。”</p>
<p>　　子曰：“我未见好仁者，恶不仁者。好仁者，无以尚之；恶不仁者，其为仁矣，不使不仁者加乎其身。有能一日用其力于仁矣乎？我未见力不足者。盖有之矣，我未之见也。”</p>
<p>　　子曰：“人之过也，各于其党。观过，斯知仁矣。”</p>
<p>　　子曰：“朝闻道，夕死可矣。”</p>
<p>　　子曰：“士志于道，而耻恶衣恶食者，未足与议也。”</p>
<p>　　子曰：“君子之于天下也，无适也，无莫也，义之与比。”</p>
<p>　　子曰：“君子怀德，小人怀土；君子怀刑，小人怀惠。”</p>
<p>　　子曰：“放于利而行，多怨。”</p>
<p>　　子曰：“能以礼让为国乎？何有？不能以礼让为国，如礼何？”</p>
<p>　　子曰：“不患无位，患所以立；不患莫己知，求为可知也。”</p>
<p>　　子曰：“参乎！吾道一以贯之。”曾子曰：“唯。”子出，门人问曰：“何谓也？”曾子曰：“夫子之道，忠恕而已矣。”</p>
<p>　　子曰：“君子喻于义，小人喻于利。”</p>
<p>　　子曰：“见贤思齐焉，见不贤而内自省也。”</p>
<p>　　子曰：“事父母几谏，见志不从，又敬不违，劳而不怨。”</p>
<p>　　子曰：“父母在，不远游，游必有方。”</p>
<p>　　子曰：“三年无改于父之道，可谓孝矣。”</p>
<p>　　子曰：“父母之年，不可不知也。一则以喜，一则以惧。”</p>
<p>　　子曰：“古者言之不出，耻躬之不逮也。”</p>
<p>　　子曰：“以约失之者鲜矣。”</p>
<p>　　子曰：“君子欲讷于言而敏于行。”</p>
<p>　　子曰：“德不孤，必有邻。”</p>
<p>　　子游曰：“事君数，斯辱矣；朋友数，斯疏矣。”</p>
<center><font size="8">公冶长</font></center>

<p>　　子谓公冶长：“可妻也，虽在缧绁之中，非其罪也！”以其子妻之。</p>
<p>　　子谓南容：“邦有道不废；邦无道免于刑戮。”以其兄之子妻之。</p>
<p>　　子谓子贱：“君子哉若人！鲁无君子者，斯焉取斯？”</p>
<p>　　子贡问曰：“赐也何如？”子曰：“女器也。”曰：“何器也？”曰：“瑚琏也。”</p>
<p>　　或曰：“雍也仁而不佞。”子曰：“焉用佞？御人以口给，屡憎于人。不知其仁，焉用佞？”</p>
<p>　　子使漆雕开仕，对曰：“吾斯之未能信。”子说。</p>
<p>　　子曰：“道不行，乘桴浮于海，从我者其由与？”子路闻之喜，子曰：“由也好勇过我，无所取材。”</p>
<p>　　孟武伯问：“子路仁乎？”子曰：“不知也。”又问，子曰：“由也，千乘之国，可使治其赋也，不知其仁也。”“求也何如？”子曰：“求也，千室之邑、百乘之家，可使为之宰也，不知其仁也。”“赤也何如？”子曰：“赤也，束带立于朝，可使与宾客言也，不知其仁也。”</p>
<p>　　子谓子贡曰：“女与回也孰愈？”对曰：“赐也何敢望回？回也闻一以知十，赐也闻一以知二。”子曰：“弗如也，吾与女弗如也！”</p>
<p>　　宰予昼寝，子曰：“朽木不可雕也，粪土之墙不可杇也，于予与何诛？”子曰：“始吾于人也，听其言而信其行；今吾于人也，听其言而观其行。于予与改是。”</p>
<p>　　子曰：“吾未见刚者。”或对曰：“申枨。”子曰：“枨也欲，焉得刚。”</p>
<p>　　子贡曰：“我不欲人之加诸我也，吾亦欲无加诸人。”子曰：“赐也，非尔所及也。”</p>
<p>　　子贡曰：“夫子之文章，可得而闻也；夫子之言性与天道，不可得而闻也。”</p>
<p>　　子路有闻，未之能行，唯恐有闻。</p>
<p>　　子贡问曰：“孔文子何以谓之文也？”子曰：“敏而好学，不耻下问，是以谓之文也。”</p>
<p>　　子谓子产：“有君子之道四焉：其行己也恭，其事上也敬，其养民也惠，其使民也义。”</p>
<p>　　子曰：“晏平仲善与人交，久而敬之。”</p>
<p>　　子曰：“臧文仲居蔡，山节藻棁，何如其知也？”</p>
<p>　　子张问曰：“令尹子文三仕为令尹，无喜色，三已之无愠色，旧令尹之政必以告新令尹，何如？”子曰：“忠矣。”曰：“仁矣乎？”曰：“未知，焉得仁？”“崔子弑齐君，陈文子有马十乘，弃而违之。至于他邦，则曰：‘犹吾大夫崔子也。’违之。之一邦，则又曰：‘犹吾大夫崔子也。’违之，何如？”子曰：“清矣。”曰：“仁矣乎？”曰：“未知，焉得仁？”</p>
<p>　　季文子三思而后行，子闻之曰：“再斯可矣。”</p>
<p>　　子曰：“宁武子，邦有道则知，邦无道则愚。其知可及也，其愚不可及也。”</p>
<p>　　子在陈，曰：“归与！归与！吾党之小子狂简，斐然成章，不知所以裁之。”</p>
<p>　　子曰：“伯夷、叔齐不念旧恶，怨是用希。”</p>
<p>　　子曰：“孰谓微生高直？或乞醯焉，乞诸其邻而与之。”</p>
<p>　　子曰：“巧言、令色、足恭，左丘明耻之，丘亦耻之。匿怨而友其人，左丘明耻之，丘亦耻之。”</p>
<p>　　颜渊、季路侍，子曰：“盍各言尔志？”子路曰：“愿车马、衣轻裘与朋友共，敝之而无憾。”颜渊曰：“愿无伐善，无施劳。”子路曰：“愿闻子之志。”子曰：“老者安之，朋友信之，少者怀之。”</p>
<p>　　子曰：“已矣乎！吾未见能见其过而内自讼者也。”</p>
<p>　　子曰：“十室之邑，必有忠信如丘者焉，不如丘之好学也。”</p>
<center><font size="8">雍也</font></center>

<p>　　子曰：“雍也可使南面。”</p>
<p>　　仲弓问子桑伯子，子曰：“可也简。”仲弓曰：“居敬而行简，以临其民，不亦可乎？居简而行简，无乃大简乎？”子曰：“雍之言然。”</p>
<p>　　哀公问：“弟子孰为好学？”孔子对曰：“有颜回者好学，不迁怒，不贰过，不幸短命死矣，今也则亡，未闻好学者也。”</p>
<p>　　子华使于齐，冉子为其母请粟，子曰：“与之釜。”请益，曰：“与之庾。”冉子与之粟五秉。子曰：“赤之适齐也，乘肥马，衣轻裘。吾闻之也，君子周急不继富。”</p>
<p>　　原思为之宰，与之粟九百，辞。子曰：“毋，以与尔邻里乡党乎！”</p>
<p>　　子谓仲弓曰：“犁牛之子骍且角，虽欲勿用，山川其舍诸？”</p>
<p>　　子曰：“回也，其心三月不违仁，其余则日月至焉而已矣。”</p>
<p>　　季康子问：“仲由可使从政也与？”子曰：“由也果，于从政乎何有？”曰：“赐也可使从政也与？”曰：“赐也达，于从政乎何有？”曰：“求也可使从政也与？”曰：“求也艺，于从政乎何有？”</p>
<p>　　季氏使闵子骞为费宰，闵子骞曰：“善为我辞焉。如有复我者，则吾必在汶上矣。”</p>
<p>　　伯牛有疾，子问之，自牖执其手，曰：“亡之，命矣夫！斯人也而有斯疾也！斯人也而有斯疾也！”</p>
<p>　　子曰：“贤哉回也！一箪食，一瓢饮，在陋巷，人不堪其忧，回也不改其乐。贤哉，回也！”</p>
<p>　　冉求曰：“非不说子之道，力不足也。”子曰：“力不足者，中道而废，今女画。”</p>
<p>　　子谓子夏曰：“女为君子儒，无为小人儒。”</p>
<p>　　子游为武城宰，子曰：“女得人焉尔乎？”曰：“有澹台灭明者，行不由径，非公事，未尝至于偃之室也。”</p>
<p>　　子曰：“孟之反不伐，奔而殿，将入门，策其马曰：‘非敢后也，马不进也。’”</p>
<p>　　子曰：“不有祝鮀之佞，而有宋朝之美，难乎免于今之世矣。”</p>
<p>　　子曰：“谁能出不由户？何莫由斯道也？”</p>
<p>　　子曰：“质胜文则野，文胜质则史。文质彬彬，然后君子。”</p>
<p>　　子曰：“人之生也直，罔之生也幸而免。”</p>
<p>　　子曰：“知之者不如好之者；好之者不如乐之者。”</p>
<p>　　子曰：“中人以上，可以语上也；中人以下，不可以语上也。”</p>
<p>　　樊迟问知，子曰：“务民之义，敬鬼神而远之，可谓知矣。”问仁，曰：“仁者先难而后获，可谓仁矣。”</p>
<p>　　子曰：“知者乐水，仁者乐山。知者动，仁者静。知者乐，仁者寿。”</p>
<p>　　子曰：“齐一变至于鲁，鲁一变至于道。”</p>
<p>　　子曰：“觚不觚，觚哉！觚哉！”</p>
<p>　　宰我问曰：“仁者，虽告之曰：‘井有仁焉。’其从之也？”子曰：“何为其然也？君子可逝也，不可陷也；可欺也，不可罔也。”</p>
<p>　　子曰：“君子博学于文，约之以礼，亦可以弗畔矣夫。”</p>
<p>　　子见南子，子路不说，夫子矢之曰：“予所否者，天厌之！天厌之！”</p>
<p>　　子曰：“中庸之为德也，其至矣乎！民鲜久矣。”</p>
<p>　　子贡曰：“如有博施于民而能济众，何如？可谓仁乎？”子曰：“何事于仁，必也圣乎！尧、舜其犹病诸！夫仁者，己欲立而立人，己欲达而达人。能近取譬，可谓仁之方也已。”</p>
<center><font size="8">述而</font></center>

<p>子曰：“述而不作，信而好古，窃比于我老彭。”</p>
<p>子曰：“默而识之，学而不厌，诲人不倦，何有于我哉？”</p>
<p>子曰：“德之不修，学之不讲，闻义不能徙，不善不能改，是吾忧也。”</p>
<p>子之燕居，申申如也，夭夭如也。</p>
<p>子曰：“甚矣吾衰也！久矣吾不复梦见周公。”</p>
<p>子曰：“志于道，据于德，依于仁，游于艺。”</p>
<p>子曰：“自行束修以上，吾未尝无诲焉。”</p>
<p>子曰：“不愤不启，不悱不发，举一隅不以三隅反，则不复也。”</p>
<p>子食于有丧者之侧，未尝饱也。</p>
<p>子于是日哭，则不歌。</p>
<p>子谓颜渊曰：“用之则行，舍之则藏，惟我与尔有是夫！”子路曰：“子行三军，则谁与？”子曰：“暴虎冯河，死而无悔者，吾不与也。必也临事而惧，好谋而成者也。”</p>
<p>子曰：“富而可求也，虽执鞭之士，吾亦为之。如不可求，从吾所好。”</p>
<p>子之所慎：齐，战，疾。</p>
<p>子在齐闻《韶》，三月不知肉味，曰：“不图为乐之至于斯也。”</p>
<p>冉有曰：“夫子为卫君乎？”子贡曰：“诺，吾将问之。”入，曰：“伯夷、叔齐何人也？”曰：“古之贤人也。”曰：“怨乎？”曰：“求仁而得仁，又何怨？”出，曰：“夫子不为也。”</p>
<p>子曰：“饭疏食饮水，曲肱而枕之，乐亦在其中矣。不义而富且贵，于我如浮云。”</p>
<p>子曰：“加我数年，五十以学《易》，可以无大过矣。”</p>
<p>子所雅言，《诗》、《书》、执礼，皆雅言也。</p>
<p>叶公问孔子于子路，子路不对。子曰：“女奚不曰：其为人也，发愤忘食，乐以忘忧，不知老之将至云尔。”</p>
<p>子曰：“我非生而知之者，好古，敏以求之者也。”</p>
<p>子不语怪、力、乱、神。</p>
<p>子曰：“三人行，必有我师焉。择其善者而从之，其不善者而改之。”</p>
<p>子曰：“天生德于予，桓魋其如予何？”</p>
<p>子曰：“二三子以我为隐乎？吾无隐乎尔！吾无行而不与二三子者，是丘也。”</p>
<p>子以四教：文，行，忠，信。</p>
<p>子曰：“圣人，吾不得而见之矣；得见君子者斯可矣。”子曰：“善人，吾不得而见之矣，得见有恒者斯可矣。亡而为有，虚而为盈，约而为泰，难乎有恒乎。”</p>
<p>子钓而不纲，弋不射宿。</p>
<p>子曰：“盖有不知而作之者，我无是也。多闻，择其善者而从之；多见而识之，知之次也。”</p>
<p>互乡难与言，童子见，门人惑。子曰：“与其进也，不与其退也，唯何甚？人洁己以进，与其洁也，不保其往也。”</p>
<p>子曰：“仁远乎哉？我欲仁，斯仁至矣。”</p>
<p>陈司败问：“昭公知礼乎？”孔子曰：“知礼。”孔子退，揖巫马期而进之，曰：“吾闻君子不党，君子亦党乎？君取于吴，为同姓，谓之吴孟子。君而知礼，孰不知礼？”巫马期以告，子曰：“丘也幸，苟有过，人必知之。”</p>
<p>子与人歌而善，必使反之，而后和之。</p>
<p>子曰：“文，莫吾犹人也。躬行君子，则吾未之有得。”</p>
<p>子曰：“若圣与仁，则吾岂敢？抑为之不厌，诲人不倦，则可谓云尔已矣。”公西华曰：“正唯弟子不能学也。”</p>
<p>子疾病，子路请祷。子曰：“有诸？”子路对曰：“有之。《诔》曰：‘祷尔于上下神祇。’”子曰：“丘之祷久矣。”</p>
<p>子曰：“奢则不孙，俭则固。与其不孙也，宁固。”</p>
<p>子曰：“君子坦荡荡，小人长戚戚。”</p>
<p>子温而厉，威而不猛，恭而安。</p>
<center><font size="8">泰伯</font></center>

<p>子曰：“泰伯，其可谓至德也已矣。三以天下让，民无得而称焉。”</p>
<p>子曰：“恭而无礼则劳；慎而无礼则葸；勇而无礼则乱；直而无礼则绞。君子笃于亲，则民兴于仁；故旧不遗，则民不偷。”</p>
<p>曾子有疾，召门弟子曰：“启予足，启予手。《诗》云：‘战战兢兢，如临深渊，如履薄冰。’而今而后，吾知免夫，小子！”</p>
<p>曾子有疾，孟敬子问之。曾子言曰：“鸟之将死，其鸣也哀；人之将死，其言也善。君子所贵乎道者三：动容貌，斯远暴慢矣；正颜色，斯近信矣；出辞气，斯远鄙倍矣。笾豆之事，则有司存。”</p>
<p>曾子曰：“以能问于不能；以多问于寡；有若无，实若虚，犯而不校。昔者吾友尝从事于斯矣。”</p>
<p>曾子曰：“可以托六尺之孤，可以寄百里之命，临大节而不可夺也。君子人与？君子人也。”</p>
<p>曾子曰：“士不可以不弘毅，任重而道远。仁以为己任，不亦重乎？死而后已，不亦远乎？”</p>
<p>子曰：“兴于《诗》，立于礼，成于乐。”</p>
<p>子曰：“民可使由之，不可使知之。”</p>
<p>子曰：“好勇疾贫，乱也。人而不仁，疾之已甚，乱也。”</p>
<p>子曰：“如有周公之才之美，使骄且吝，其余不足观也已。”</p>
<p>子曰：“三年学，不至于谷，不易得也。”</p>
<p>子曰：“笃信好学，守死善道。危邦不入，乱邦不居。天下有道则见，无道则隐。邦有道，贫且贱焉，耻也；邦无道，富且贵焉，耻也。”</p>
<p>子曰：“不在其位，不谋其政。”</p>
<p>子曰：“师挚之始，《关雎》之乱，洋洋乎盈耳哉！”</p>
<p>子曰：“狂而不直，侗而不愿，悾悾而不信，吾不知之矣。”</p>
<p>子曰：“学如不及，犹恐失之。”</p>
<p>子曰：“巍巍乎！舜、禹之有天下也而不与焉。”</p>
<p>子曰：“大哉尧之为君也！巍巍乎，唯天为大，唯尧则之。荡荡乎，民无能名焉。巍巍乎其有成功也，焕乎其有文章！”</p>
<p>舜有臣五人而天下治。武王曰：“予有乱臣十人。”孔子曰：“才难，不其然乎？唐虞之际，于斯为盛；有妇人焉，九人而已。三分天下有其二，以服事殷。周之德，其可谓至德也已矣。”</p>
<p>子曰：“禹，吾无间然矣。菲饮食而致孝乎鬼神，恶衣服而致美乎黼冕，卑宫室而尽力乎沟洫。禹，吾无间然矣。”</p>
<center><font size="8">子罕</font></center>

<p>子罕言利与命与仁。</p>
<p>达巷党人曰：“大哉孔子！博学而无所成名。”子闻之，谓门弟子曰：“吾何执？执御乎，执射乎？吾执御矣。”</p>
<p>子曰：“麻冕，礼也；今也纯，俭，吾从众。拜下，礼也；今拜乎上，泰也；虽违众，吾从下。”</p>
<p>子绝四：毋意、毋必、毋固、毋我。</p>
<p>子畏于匡，曰：“文王既没，文不在兹乎？天之将丧斯文也，后死者不得与于斯文也；天之未丧斯文也，匡人其如予何？”</p>
<p>太宰问于子贡曰：“夫子圣者与，何其多能也？”子贡曰：“固天纵之将圣，又多能也。”子闻之，曰：“太宰知我乎？吾少也贱，故多能鄙事。君子多乎哉？不多也。”</p>
<p>牢曰：“子云：‘吾不试，故艺。’”</p>
<p>子曰：“吾有知乎哉？无知也。有鄙夫问于我，空空如也。我叩其两端而竭焉。”</p>
<p>子曰：“凤鸟不至，河不出图，吾已矣夫！”</p>
<p>子见齐衰者、冕衣裳者与瞽者，见之，虽少，必作，过之必趋。</p>
<p>颜渊喟然叹曰：“仰之弥高，钻之弥坚。瞻之在前，忽焉在后。夫子循循然善诱人，博我以文，约我以礼，欲罢不能。既竭吾才，如有所立卓尔，虽欲从之，末由也已。”</p>
<p>子疾病，子路使门人为臣。病间，曰：“久矣哉，由之行诈也！无臣而为有臣，吾谁欺？欺天乎？且予与其死于臣之手也，无宁死于二三子之手乎！且予纵不得大葬，予死于道路乎？”</p>
<p>子贡曰：“有美玉于斯，韫椟而藏诸？求善贾而沽诸？”子曰：“沽之哉，沽之哉！我待贾者也。”</p>
<p>子欲居九夷。或曰：“陋，如之何？”子曰：“君子居之，何陋之有！”</p>
<p>子曰：“吾自卫反鲁，然后乐正，《雅》、《颂》各得其所。”</p>
<p>子曰：“出则事公卿，入则事父兄，丧事不敢不勉，不为酒困，何有于我哉？”</p>
<p>子在川上曰：“逝者如斯夫！不舍昼夜。”</p>
<p>子曰：“吾未见好德如好色者也。”</p>
<p>子曰：“譬如为山，未成一篑，止，吾止也；譬如平地，虽覆一篑，进，吾往也。”</p>
<p>子曰：“语之而不惰者，其回也与！”</p>
<p>子谓颜渊，曰：“惜乎！吾见其进也，未见其止也。”</p>
<p>子曰：“苗而不秀者有矣夫，秀而不实者有矣夫。”</p>
<p>子曰：“后生可畏，焉知来者之不如今也？四十、五十而无闻焉，斯亦不足畏也已。”</p>
<p>子曰：“法语之言，能无从乎？改之为贵。巽与之言，能无说乎？绎之为贵。说而不绎，从而不改，吾末如之何也已矣。”</p>
<p>子曰：“主忠信。毋友不如己者，过，则勿惮改。”</p>
<p>子曰：“三军可夺帅也，匹夫不可夺志也。”</p>
<p>子曰：“衣敝缊袍，与衣狐貉者立而不耻者，其由也与！‘不忮不求，何用不臧？’”子路终身诵之，子曰：“是道也，何足以臧？”</p>
<p>子曰：“岁寒，然后知松柏之后凋也。”</p>
<p>子曰：“知者不惑，仁者不忧，勇者不惧。”</p>
<p>子曰：“可与共学，未可与适道；可与适道，未可与立；可与立，未可与权。”</p>
<p>“唐棣之华，偏其反而。岂不尔思？室是远尔。”子曰：“未之思也，夫何远之有。”</p>
<center><font size="8">乡党</font></center>

<p>孔子于乡党，恂恂如也，似不能言者；其在宗庙朝庭，便便言，唯谨尔。</p>
<p>朝，与下大夫言，侃侃如也；与上大夫言，訚訚如也。君在，踧踖如也，与与如也。</p>
<p>君召使摈，色勃如也，足躩如也。揖所与立，左右手，衣前后襜如也。趋进，翼如也。宾退，必复命曰：“宾不顾矣。”</p>
<p>入公门，鞠躬如也，如不容。立不中门，行不履阈。过位，色勃如也，足躩如也，其言似不足者。摄齐升堂，鞠躬如也，屏气似不息者。出，降一等，逞颜色，怡怡如也；没阶，趋进，翼如也；复其位，踧踖如也。</p>
<p>执圭，鞠躬如也，如不胜。上如揖，下如授。勃如战色，足蹜蹜如有循。享礼，有容色。私觌，愉愉如也。</p>
<p>君子不以绀緅饰，红紫不以为亵服。当暑袗絺绤，必表而出之。缁衣羔裘，素衣麑裘，黄衣狐裘。亵裘长，短右袂。必有寝衣，长一身有半。狐貉之厚以居。去丧，无所不佩。非帷裳，必杀之。羔裘玄冠不以吊。吉月，必朝服而朝。</p>
<p>齐，必有明衣，布。齐必变食，居必迁坐。</p>
<p>食不厌精，脍不厌细。食饐而餲，鱼馁而肉败，不食；色恶，不食；臭恶，不食；失饪，不食；不时，不食；割不正，不食；不得其酱，不食。肉虽多，不使胜食气。唯酒无量，不及乱。沽酒市脯，不食。不撤姜食，不多食。</p>
<p>祭于公，不宿肉。祭肉不出三日，出三日不食之矣。</p>
<p>食不语，寝不言。</p>
<p>虽疏食菜羹，必祭，必齐如也。</p>
<p>席不正，不坐。</p>
<p>乡人饮酒，杖者出，斯出矣。</p>
<p>乡人傩，朝服而立于阼阶。</p>
<p>问人于他邦，再拜而送之。</p>
<p>康子馈药，拜而受之。曰：“丘未达，不敢尝。”</p>
<p>厩焚，子退朝，曰：“伤人乎？”不问马。</p>
<p>君赐食，必正席先尝之；君赐腥，必熟而荐之；君赐生，必畜之。侍食于君，君祭，先饭。</p>
<p>疾，君视之，东首，加朝服，拖绅。</p>
<p>君命召，不俟驾行矣。</p>
<p>入太庙，每事问。</p>
<p>朋友死，无所归，曰：“于我殡。”</p>
<p>朋友之馈，虽车马，非祭肉，不拜。</p>
<p>寝不尸，居不客。</p>
<p>见齐衰者，虽狎，必变。见冕者与瞽者，虽亵，必以貌。凶服者式之，式负版者。<br>有盛馔，必变色而作。迅雷风烈，必变。</p>
<p>升车，必正立，执绥。车中不内顾，不疾言，不亲指。</p>
<p>色斯举矣，翔而后集。曰：“山梁雌雉，时哉时哉！”子路共之，三嗅而作。</p>
<center><font size="8">先进</font></center>

<p>子曰：“先进于礼乐，野人也；后进于礼乐，君子也。如用之，则吾从先进。”</p>
<p>子曰：“从我于陈、蔡者，皆不及门也。”</p>
<p>德行：颜渊，闵子骞，冉伯牛，仲弓。言语：宰我，子贡。政事：冉有，季路。文学：子游，子夏。</p>
<p>子曰：“回也非助我者也，于吾言无所不说。”</p>
<p>子曰：“孝哉闵子骞！人不间于其父母昆弟之言。”</p>
<p>南容三复白圭，孔子以其兄之子妻之。</p>
<p>季康子问：“弟子孰为好学？”孔子对曰：“有颜回者好学，不幸短命死矣，今也则亡。”</p>
<p>颜渊死，颜路请子之车以为之椁。子曰：“才不才，亦各言其子也。鲤也死，有棺而无椁，吾不徒行以为之椁。以吾从大夫之后，不可徒行也。”</p>
<p>颜渊死。子曰：“噫！天丧予！天丧予！”</p>
<p>颜渊死，子哭之恸，从者曰：“子恸矣！”曰：“有恸乎？非夫人之为恸而谁为？”</p>
<p>颜渊死，门人欲厚葬之，子曰：“不可。”门人厚葬之，子曰：“回也视予犹父也，予不得视犹子也。非我也，夫二三子也！”</p>
<p>季路问事鬼神，子曰：“未能事人，焉能事鬼？”,曰：“敢问死。”曰：“未知生，焉知死？”</p>
<p>闵子侍侧，訚訚如也；子路，行行如也；冉有、子贡，侃侃如也。子乐。“若由也，不得其死然。”</p>
<p>鲁人为长府，闵子骞曰：“仍旧贯如之何？何必改作？”子曰：“夫人不言，言必有中。”</p>
<p>子曰：“由之瑟奚为于丘之门？”门人不敬子路，子曰：“由也升堂矣，未入于室也。”</p>
<p>子贡问：“师与商也孰贤？”子曰：“师也过，商也不及。”曰：“然则师愈与？”子曰：“过犹不及。”</p>
<p>季氏富于周公，而求也为之聚敛而附益之。子曰：“非吾徒也，小子鸣鼓而攻之可也。”</p>
<p>柴也愚，参也鲁，师也辟，由也喭。</p>
<p>子曰：“回也其庶乎，屡空。赐不受命而货殖焉，亿则屡中。”</p>
<p>子张问善人之道，子曰：“不践迹，亦不入于室。”</p>
<p>子曰：“论笃是与，君子者乎，色庄者乎？”</p>
<p>子路问：“闻斯行诸？”子曰：“有父兄在，如之何其闻斯行之？”冉有问：“闻斯行诸？”子曰：“闻斯行之。公西华曰：“由也问闻斯行诸，子曰‘有父兄在’；求也问闻斯行诸，子曰‘闻斯行之’。赤也惑，敢问。”子曰：“求也退，故进之；由也兼人，故退之。”</p>
<p>子畏于匡，颜渊后。子曰：“吾以女为死矣！”曰：“子在，回何敢死！”</p>
<p>季子然问：“仲由、冉求可谓大臣与？”子曰：“吾以子为异之问，曾由与求之问。所谓大臣者，以道事君，不可则止。今由与求也，可谓具臣矣。”曰：“然则从之者与？”子曰：“弑父与君，亦不从也。”</p>
<p>子路使子羔为费宰，子曰：“贼夫人之子。”子路曰：“有民人焉，有社稷焉，何必读书然后为学。”子曰：“是故恶夫佞者。”</p>
<p>子路、曾皙、冉有、公西华侍坐，子曰：“以吾一日长乎尔，毋吾以也。居则曰‘不吾知也’如或知尔，则何以哉？”子路率尔而对曰：“千乘之国，摄乎大国之间，加之以师旅，因之以饥馑，由也为之，比及三年，可使有勇，且知方也。”夫子哂之。“求，尔何如？”对曰：“方六七十，如五六十，求也为之，比及三年，可使足民。如其礼乐，以俟君子。”“赤！尔何如？”对曰：“非曰能之，愿学焉。宗庙之事，如会同，端章甫，愿为小相焉。”“点，尔何如？”鼓瑟希，铿尔，舍瑟而作，对曰：“异乎三子者之撰。”子曰：“何伤乎？亦各言其志也。”曰：“暮春者，春服既成，冠者五六人，童子六七人，浴乎沂，风乎舞雩，咏而归。”夫子喟然叹曰：“吾与点也！”三子者出，曾皙后。曾皙曰：“夫三子者之言何如？”子曰：“亦各言其志也已矣。”曰：“夫子何哂由也？”曰：“为国以礼，其言不让，是故哂之。”“唯求则非邦也与？”“安见方六七十、如五六十而非邦也者？”“唯赤则非邦也与？”“宗庙会同，非诸侯而何？赤也为之小，孰能为之大？”</p>
<center><font size="8">颜渊</font></center>

<p>颜渊问仁，子曰：“克己复礼为仁。一日克己复礼，天下归仁焉。为仁由己，而由人乎哉？”颜渊曰：“请问其目？”子曰：“非礼勿视，非礼勿听，非礼勿言，非礼勿动。”颜渊曰：“回虽不敏，请事斯语矣。”</p>
<p>仲弓问仁，子曰：“出门如见大宾，使民如承大祭。己所不欲，勿施于人。在邦无怨，在家无怨。”仲弓曰：“雍虽不敏，请事斯语矣。”</p>
<p>司马牛问仁，子曰：“仁者，其言也讱。”曰：“其言也讱，斯谓之仁已乎？”子曰：“为之难，言之得无讱乎？”</p>
<p>司马牛问君子，子曰：“君子不忧不惧。”曰：“不忧不惧，斯谓之君子已乎？”子曰：“内省不疚，夫何忧何惧？”</p>
<p>司马牛忧曰：“人皆有兄弟，我独亡。”子夏曰：“商闻之矣：死生有命，富贵在天。君子敬而无失，与人恭而有礼，四海之内皆兄弟也。君子何患乎无兄弟也？”</p>
<p>子张问明，子曰：“浸润之谮，肤受之愬，不行焉，可谓明也已矣；浸润之谮、肤受之愬不行焉，可谓远也已矣。”</p>
<p>子贡问政，子曰：“足食，足兵，民信之矣。”子贡曰：“必不得已而去，于斯三者何先？”曰：“去兵。”子贡曰：“必不得已而去，于斯二者何先？”曰：“去食。自古皆有死，民无信不立。”</p>
<p>棘子成曰：“君子质而已矣，何以文为？”子贡曰：“惜乎，夫子之说君子也！驷不及舌。文犹质也，质犹文也。虎豹之鞟犹犬羊之鞟。”</p>
<p>哀公问于有若曰：“年饥，用不足，如之何？”有若对曰：“盍彻乎？”曰：“二，吾犹不足，如之何其彻也？”对曰：“百姓足，君孰与不足？百姓不足，君孰与足？”</p>
<p>子张问崇德辨惑，子曰：“主忠信，徙义，崇德也。爱之欲其生，恶之欲其死；既欲其生又欲其死，是惑也。‘诚不以富，亦只以异。’”</p>
<p>齐景公问政于孔子，孔子对曰：“君君，臣臣，父父，子子。”公曰：“善哉！信如君不君、臣不臣、父不父、子不子，虽有粟，吾得而食诸？”</p>
<p>子曰：“片言可以折狱者，其由也与？”子路无宿诺。</p>
<p>子曰：“听讼，吾犹人也。必也使无讼乎。”</p>
<p>子张问政，子曰：“居之无倦，行之以忠。”</p>
<p>子曰：“博学于文，约之以礼，亦可以弗畔矣夫。”</p>
<p>子曰：“君子成人之美，不成人之恶；小人反是。”</p>
<p>季康子问政于孔子，孔子对曰：“政者，正也。子帅以正，孰敢不正？”</p>
<p>季康子患盗，问于孔子。孔子对曰：“苟子之不欲，虽赏之不窃。”</p>
<p>季康子问政于孔子曰：“如杀无道以就有道，何如？”孔子对曰：“子为政，焉用杀？子欲善而民善矣。君子之德风，小人之德草，草上之风必偃。”</p>
<p>子张问：“士何如斯可谓之达矣？”子曰：“何哉尔所谓达者？”子张对曰：“在邦必闻，在家必闻。”子曰：“是闻也，非达也。夫达也者，质直而好义，察言而观色，虑以下人。在邦必达，在家必达。夫闻也者，色取仁而行违，居之不疑。在邦必闻，在家必闻。”</p>
<p>樊迟从游于舞雩之下，曰：“敢问崇德、修慝、辨惑。”子曰：“善哉问！先事后得，非崇德与？攻其恶，无攻人之恶，非修慝与？一朝之忿，忘其身，以及其亲，非惑与？”</p>
<p>樊迟问仁，子曰：“爱人。”问知，子曰：“知人。”樊迟未达，子曰：“举直错诸枉，能使枉者直。”樊迟退，见子夏，曰：“乡也吾见于夫子而问知，子曰：‘举直错诸枉，能使枉者直’，何谓也？”子夏曰：“富哉言乎！舜有天下，选于众，举皋陶，不仁者远矣。汤有天下，选于众，举伊尹，不仁者远矣。”</p>
<p>子贡问友，子曰：“忠告而善道之，不可则止，毋自辱焉。”</p>
<p>曾子曰：“君子以文会友，以友辅仁。”</p>
<center><font size="8">子路</font></center>

<p>子路问政，子曰：“先之，劳之。”请益，曰：“无倦。”</p>
<p>仲弓为季氏宰，问政，子曰：“先有司，赦小过，举贤才。”曰：“焉知贤才而举之？”曰：“举尔所知。尔所不知，人其舍诸？”</p>
<p>子路曰：“卫君待子而为政，子将奚先？”子曰：“必也正名乎！”子路曰：“有是哉，子之迂也！奚其正？”子曰：“野哉由也！君子于其所不知，盖阙如也。名不正，则言不顺；言不顺，则事不成；事不成，则礼乐不兴；礼乐不兴，则刑罚不中；刑罚不中，则民无所错手足。故君子名之必可言也，言之必可行也。君子于其言，无所苟而已矣。”</p>
<p>樊迟请学稼，子曰：“吾不如老农。”请学为圃，曰：“吾不如老圃。”樊迟出，子曰：“小人哉樊须也！上好礼，则民莫敢不敬；上好义，则民莫敢不服；上好信，则民莫敢不用情。夫如是，则四方之民襁负其子而至矣，焉用稼？”</p>
<p>子曰：“诵《诗》三百，授之以政，不达；使于四方，不能专对；虽多，亦奚以为？”</p>
<p>子曰：“其身正，不令而行；其身不正，虽令不从。”</p>
<p>子曰：“鲁卫之政，兄弟也。”</p>
<p>子谓卫公子荆，“善居室。始有，曰：‘苟合矣。’少有，曰：‘苟完矣。’富有，曰：‘苟美矣。’”</p>
<p>子适卫，冉有仆，子曰：“庶矣哉！”冉有曰：“既庶矣，又何加焉？”曰：“富之。”曰：“既富矣，又何加焉？”曰：“教之。”</p>
<p>子曰：“苟有用我者，期月而已可也，三年有成。”</p>
<p>子曰：“‘善人为邦百年，亦可以胜残去杀矣。’诚哉是言也！”</p>
<p>子曰：“如有王者，必世而后仁。”</p>
<p>子曰：“苟正其身矣，于从政乎何有？不能正其身，如正人何？”</p>
<p>冉子退朝，子曰：“何晏也？”对曰：“有政。”子曰：“其事也。如有政，虽不吾以，吾其与闻之。”</p>
<p>定公问：“一言而可以兴邦，有诸？”孔子对曰：“言不可以若是其几也。人之言曰：‘为君难，为臣不易。’如知为君之难也，不几乎一言而兴邦乎？”曰：“一言而丧邦，有诸？”孔子对曰：“言不可以若是其几也。人之言曰：‘予无乐乎为君，唯其言而莫予违也。’如其善而莫之违也，不亦善乎？如不善而莫之违也，不几乎一言而丧邦乎？”</p>
<p>叶公问政，子曰：“近者说，远者来。”</p>
<p>子夏为莒父宰，问政，子曰：“无欲速，无见小利。欲速则不达，见小利则大事不成。”</p>
<p>叶公语孔子曰：“吾党有直躬者，其父攘羊，而子证之。”孔子曰：“吾党之直者异于是。父为子隐，子为父隐，直在其中矣。”</p>
<p>樊迟问仁，子曰：“居处恭，执事敬，与人忠。虽之夷狄，不可弃也。”</p>
<p>子贡问曰：“何如斯可谓之士矣？”子曰：“行己有耻，使于四方不辱君命，可谓士矣。”曰：“敢问其次。”曰：“宗族称孝焉，乡党称弟焉。”曰：“敢问其次。”曰：“言必信，行必果，踁踁然小人哉！抑亦可以为次矣。”曰：“今之从政者何如？”子曰：“噫！斗筲之人，何足算也！”</p>
<p>子曰：“不得中行而与之，必也狂狷乎！狂者进取，狷者有所不为也。”</p>
<p>子曰：“南人有言曰：‘人而无恒，不可以作巫医。’善夫！”“不恒其德，或承之羞。”子曰：“不占而已矣。”</p>
<p>子曰：“君子和而不同，小人同而不和。”</p>
<p>子贡问曰：“乡人皆好之，何如？”子曰：“未可也。”“乡人皆恶之，何如？”子曰：“未可也。不如乡人之善者好之，其不善者恶之。”</p>
<p>子曰：“君子易事而难说也，说之不以道不说也，及其使人也器之；小人难事而易说也，说之虽不以道说也，及其使人也求备焉。”</p>
<p>子曰：“君子泰而不骄，小人骄而不泰。”</p>
<p>子曰：“刚、毅、木、讷近仁。”</p>
<p>子路问曰：“何如斯可谓之士矣？”子曰：“切切偲偲，怡怡如也，可谓士矣。朋友切切偲偲，兄弟怡怡。”</p>
<p>子曰：“善人教民七年，亦可以即戎矣。”</p>
<p>子曰：“以不教民战，是谓弃之。”</p>
<center><font size="8">宪问</font></center>

<p>宪问耻，子曰：“邦有道，谷；邦无道，谷，耻也。”“克、伐、怨、欲不行焉，可以为仁矣？”子曰：“可以为难矣，仁则吾不知也。”</p>
<p>子曰：“士而怀居，不足以为士矣。”</p>
<p>子曰：“邦有道，危言危行；邦无道，危行言孙。”</p>
<p>子曰：“有德者必有言，有言者不必有德。仁者必有勇，勇者不必有仁。”</p>
<p>南宫适问于孔子曰：“羿善射，奡荡舟，俱不得其死然；禹、稷躬稼而有天下。”夫子不答。南宫适出，子曰：“君子哉若人！尚德哉若人！”</p>
<p>子曰：“君子而不仁者有矣夫，未有小人而仁者也。”</p>
<p>子曰：“爱之，能勿劳乎？忠焉，能勿诲乎？”</p>
<p>子曰：“为命，裨谌草创之，世叔讨论之，行人子羽修饰之，东里子产润色之。”</p>
<p>或问子产，子曰：“惠人也。”问子西，曰：“彼哉，彼哉！”问管仲，曰：“人也。夺伯氏骈邑三百，饭疏食，没齿无怨言。”</p>
<p>子曰：“贫而无怨难，富而无骄易。”</p>
<p>子曰：“孟公绰为赵、魏老则优，不可以为滕、薛大夫。”</p>
<p>子路问成人，子曰：“若臧武仲之知、公绰之不欲、卞庄子之勇、冉求之艺，文之以礼乐，亦可以为成人矣。”曰：“今之成人者何必然？见利思义，见危授命，久要不忘平生之言，亦可以为成人矣。”</p>
<p>子问公叔文子于公明贾曰：“信乎，夫子不言，不笑，不取乎？”公明贾对曰：“以告者过也。夫子时然后言，人不厌其言；乐然后笑，人不厌其笑；义然后取，人不厌其取。”子曰：“其然？岂其然乎？”</p>
<p>子曰：“臧武仲以防求为后于鲁，虽曰不要君，吾不信也。”</p>
<p>子曰：“晋文公谲而不正，齐桓公正而不谲。”</p>
<p>子路曰：“桓公杀公子纠，召忽死之，管仲不死，曰未仁乎？”子曰：“桓公九合诸侯不以兵车，管仲之力也。如其仁，如其仁！”</p>
<p>子贡曰：“管仲非仁者与？桓公杀公子纠，不能死，又相之。”子曰：“管仲相桓公霸诸侯，一匡天下，民到于今受其赐。微管仲，吾其被发左衽矣。岂若匹夫匹妇之为谅也，自经于沟渎而莫之知也。”</p>
<p>公叔文子之臣大夫僎与文子同升诸公，子闻之,曰：“可以为‘文’矣。”</p>
<p>子言卫灵公之无道也，康子曰：“夫如是，奚而不丧？”孔子曰：“仲叔圉治宾客，祝鮀治宗庙，王孙贾治军旅，夫如是，奚其丧？”</p>
<p>子曰：“其言之不怍，则为之也难。”</p>
<p>陈成子弑简公，孔子沐浴而朝，告于哀公曰：“陈恒弑其君，请讨之。”公曰：“告夫三子。”,孔子曰：“以吾从大夫之后，不敢不告也，君曰‘告夫三子’者！”之三子告，不可。孔子曰：“以吾从大夫之后，不敢不告也。”</p>
<p>子路问事君，子曰：“勿欺也，而犯之。”</p>
<p>子曰：“君子上达，小人下达。”</p>
<p>子曰：“古之学者为己，今之学者为人。”</p>
<p>蘧伯玉使人于孔子，孔子与之坐而问焉，曰：“夫子何为？”对曰：“夫子欲寡其过而未能也。”使者出，子曰：“使乎！使乎！”</p>
<p>子曰：“不在其位，不谋其政。”曾子曰：“君子思不出其位。”</p>
<p>子曰：“君子耻其言而过其行。”</p>
<p>子曰：“君子道者三，我无能焉：仁者不忧，知者不惑，勇者不惧。”子贡曰：“夫子自道也。”</p>
<p>子贡方人，子曰：“赐也贤乎哉？夫我则不暇。”</p>
<p>子曰：“不患人之不己知，患其不能也。”</p>
<p>子曰：“不逆诈，不亿不信，抑亦先觉者，是贤乎！”</p>
<p>微生亩谓孔子曰：“丘何为是栖栖者与？无乃为佞乎？”孔子曰：“非敢为佞也，疾固也。”</p>
<p>曰：“骥不称其力，称其德也。”</p>
<p>或曰：“以德报怨，何如？”子曰：“何以报德？以直报怨，以德报德。”</p>
<p>子曰：“莫我知也夫！”子贡曰：“何为其莫知子也？”子曰：“不怨天，不尤人，下学而上达。知我者其天乎！”</p>
<p>公伯寮愬子路于季孙。子服景伯以告，曰：“夫子固有惑志于公伯寮，吾力犹能肆诸市朝。”子曰：“道之将行也与，命也；道之将废也与，命也。公伯寮其如命何？”</p>
<p>子曰：“贤者辟世，其次辟地，其次辟色，其次辟言。”子曰：“作者七人矣。”</p>
<p>子路宿于石门，晨门曰：“奚自？”子路曰：“自孔氏。”曰：“是知其不可而为之者与？”</p>
<p>子击磬于卫，有荷蒉而过孔氏之门者，曰：“有心哉，击磬乎！”既而曰：“鄙哉，硁硁乎！莫己知也，斯己而已矣。深则厉，浅则揭。”子曰：“果哉！末之难矣。”</p>
<p>子张曰：“《书》云，‘高宗谅阴，三年不言。’何谓也？”子曰：“何必高宗，古之人皆然。君薨，百官总己以听于冢宰三年。”</p>
<p>子曰：“上好礼，则民易使也。”</p>
<p>子路问君子，子曰：“修己以敬。”曰：“如斯而已乎？”曰：“修己以安人。”曰：“如斯而已乎？”曰：“修己以安百姓。修己以安百姓，尧、舜其犹病诸！”</p>
<p>原壤夷俟，子曰：“幼而不孙弟，长而无述焉，老而不死，是为贼！”以杖叩其胫。</p>
<p>阙党童子将命，或问之曰：“益者与？”子曰：“吾见其居于位也，见其与先生并行也。非求益者也，欲速成者也。”</p>
<center><font size="8">卫灵公</font></center>

<p>卫灵公问陈于孔子，孔子对曰：“俎豆之事，则尝闻之矣；军旅之事，未之学也。”明日遂行。</p>
<p>在陈绝粮，从者病莫能兴。子路愠见曰：“君子亦有穷乎？”子曰：“君子固穷，小人穷斯滥矣。”</p>
<p>子曰：“赐也，女以予为多学而识之者与？”对曰：“然，非与？”曰：“非也，予一以贯之。”</p>
<p>子曰：“由，知德者鲜矣。”</p>
<p>子曰：“无为而治者其舜也与！夫何为哉？恭己正南面而已矣。”</p>
<p>子张问行，子曰：“言忠信，行笃敬，虽蛮貊之邦行矣；言不忠信，行不笃敬，虽州里行乎哉？立则见其参于前也；在舆则见其倚于衡也，夫然后行。”子张书诸绅。</p>
<p>子曰：“直哉史鱼！邦有道如矢，邦无道如矢。君子哉蘧伯玉！邦有道则仕，邦无道则可卷而怀之。”</p>
<p>子曰：“可与言而不与之言，失人；不可与言而与之言，失言。知者不失人亦不失言。”</p>
<p>子曰：“志士仁人无求生以害仁，有杀身以成仁。”</p>
<p>子贡问为仁，子曰：“工欲善其事，必先利其器。居是邦也，事其大夫之贤者，友其士之仁者。”</p>
<p>颜渊问为邦，子曰：“行夏之时，乘殷之辂，服周之冕，乐则《韶》、《舞》；放郑声，远佞人。郑声淫，佞人殆。”</p>
<p>子曰：“人无远虑，必有近忧。”</p>
<p>子曰：“已矣乎！吾未见好德如好色者也。”</p>
<p>子曰：“臧文仲其窃位者与！知柳下惠之贤而不与立也。”</p>
<p>子曰：“躬自厚而薄责于人，则远怨矣。”</p>
<p>子曰：“不曰‘如之何、如之何’者，吾末如之何也已矣。”</p>
<p>子曰：“群居终日，言不及义，好行小慧，难矣哉！”</p>
<p>子曰：“君子义以为质，礼以行之，孙以出之，信以成之。君子哉！”</p>
<p>子曰：“君子病无能焉，不病人之不己知也。”</p>
<p>子曰：“君子疾没世而名不称焉。”</p>
<p>子曰：“君子求诸己，小人求诸人。”</p>
<p>子曰：“君子矜而不争，群而不党。”</p>
<p>子曰：“君子不以言举人，不以人废言。”</p>
<p>子贡问曰：“有一言而可以终身行之者乎？”子曰：“其恕乎！己所不欲，勿施于人。”</p>
<p>子曰：“吾之于人也，谁毁谁誉？如有所誉者，其有所试矣。斯民也，三代之所以直道而行也。”</p>
<p>子曰：“吾犹及史之阙文也，有马者借人乘之，今亡矣夫！”</p>
<p>子曰：“巧言乱德，小不忍，则乱大谋。”</p>
<p>子曰：“众恶之，必察焉；众好之，必察焉。”</p>
<p>子曰：“人能弘道，非道弘人。”</p>
<p>子曰：“过而不改，是谓过矣。”</p>
<p>子曰：“吾尝终日不食、终夜不寝以思，无益，不如学也。”</p>
<p>子曰：“君子谋道不谋食。耕也馁在其中矣，学也禄在其中矣。君子忧道不忧贫。”</p>
<p>子曰：“知及之，仁不能守之，虽得之，必失之；知及之，仁能守之，不庄以莅之，则民不敬；知及之，仁能守之，庄以莅之，动之不以礼，未善也。”</p>
<p>子曰：“君子不可小知而可大受也，小人不可大受而可小知也。”</p>
<p>子曰：“民之于仁也，甚于水火。水火，吾见蹈而死者矣，未见蹈仁而死者也。”</p>
<p>子曰：“当仁不让于师。”</p>
<p>子曰：“君子贞而不谅。”</p>
<p>子曰：“事君，敬其事而后其食。”</p>
<p>子曰：“有教无类。”</p>
<p>子曰：“道不同，不相为谋。”</p>
<p>子曰：“辞达而已矣。”</p>
<p>师冕见，及阶，子曰：“阶也。”及席，子曰：“席也。”皆坐，子告之曰：“某在斯，某在斯。”师冕出。子张问曰：“与师言之道与？”子曰：“然，固相师之道也。”</p>
<center><font size="8">季氏</font></center>

<p>季氏将伐颛臾，冉有、季路见于孔子，曰：“季氏将有事于颛臾。”孔子曰：“求，无乃尔是过与？夫颛臾，昔者先王以为东蒙主，且在邦域之中矣，是社稷之臣也。何以伐为？”冉有曰：“夫子欲之，吾二臣者皆不欲也。”孔子曰：“求，周任有言曰：‘陈力就列，不能者止。’危而不持，颠而不扶，则将焉用彼相矣？且尔言过矣，虎兕出于柙，龟玉毁于椟中，是谁之过与？”冉有曰：“今夫颛臾固而近于费，今不取，后世必为子孙忧。”孔子曰：“求，君子疾夫舍曰欲之而必为之辞。丘也闻，有国有家者，不患寡而患不均，不患贫而患不安。盖均无贫，和无寡，安无倾。夫如是，故远人不服则修文德以来之，既来之，则安之。今由与求也相夫子，远人不服而不能来也，邦分崩离析而不能守也，而谋动干戈于邦内。吾恐季孙之忧不在颛臾，而在萧墙之内也。”</p>
<p>孔子曰：“天下有道，则礼乐征伐自天子出；天下无道，则礼乐征伐自诸侯出。自诸侯出，盖十世希不失矣；自大夫出，五世希不失矣；陪臣执国命，三世希不失矣。天下有道，则政不在大夫；天下有道，则庶人不议。”</p>
<p>孔子曰：“禄之去公室五世矣，政逮于大夫四世矣，故夫三桓之子孙微矣。”</p>
<p>孔子曰：“益者三友，损者三友。友直、友谅、友多闻，益矣；友便辟、友善柔、友便佞，损矣。”</p>
<p>孔子曰：“益者三乐，损者三乐。乐节礼乐、乐道人之善、乐多贤友，益矣；乐骄乐、乐佚游、乐宴乐，损矣。”</p>
<p>孔子曰：“侍于君子有三愆：言未及之而言谓之躁，言及之而不言谓之隐，未见颜色而言谓之瞽。”</p>
<p>孔子曰：“君子有三戒：少之时，血气未定，戒之在色；及其壮也，血气方刚，戒之在斗；及其老也，血气既衰，戒之在得。”</p>
<p>孔子曰：“君子有三畏：畏天命，畏大人，畏圣人之言。小人不知天命而不畏也，狎大人，侮圣人之言。”</p>
<p>孔子曰：“生而知之者上也，学而知之者次也；困而学之又其次也。困而不学，民斯为下矣。”</p>
<p>孔子曰：“君子有九思：视思明，听思聪，色思温，貌思恭，言思忠，事思敬，疑思问，忿思难，见得思义。”</p>
<p>孔子曰：“见善如不及，见不善如探汤；吾见其人矣。吾闻其语矣。隐居以求其志，行义以达其道；吾闻其语矣，未见其人也。”</p>
<p>齐景公有马千驷，死之日，民无德而称焉；伯夷、叔齐饿于首阳之下，民到于今称之。其斯之谓与？”</p>
<p>陈亢问于伯鱼曰：“子亦有异闻乎？”对曰：“未也。尝独立，鲤趋而过庭，曰：‘学《诗》乎？’对曰：‘未也。’‘不学《诗》，无以言。’鲤退而学《诗》。他日，又独立，鲤趋而过庭，曰：‘学《礼》乎？’对曰：‘未也。’‘不学《礼》，无以立。’鲤退而学《礼》。闻斯二者。”陈亢退而喜曰：“问一得三，闻《诗》，闻《礼》，又闻君子之远其子也。”</p>
<p>邦君之妻，君称之曰夫人，夫人自称曰小童；邦人称之曰君夫人，称诸异邦曰寡小君；异邦人称之亦曰君夫人。</p>
<center><font size="8">阳货</font></center>

<p>阳货欲见孔子，孔子不见，归孔子豚。孔子时其亡也而往拜之，遇诸涂。谓孔子曰：“来，予与尔言。”曰：“怀其宝而迷其邦，可谓仁乎？”曰：“不可。”“好从事而亟失时，可谓知乎？”曰：“不可！”“日月逝矣，岁不我与！”孔子曰：“诺，吾将仕矣。”</p>
<p>子曰：“性相近也，习相远也。”</p>
<p>子曰：“唯上知与下愚不移。”</p>
<p>子之武城，闻弦歌之声。夫子莞尔而笑，曰：“割鸡焉用牛刀？”子游对曰：“昔者偃也闻诸夫子曰：‘君子学道则爱人，小人学道则易使也。’”子曰：“二三子，偃之言是也！前言戏之耳。”</p>
<p>公山弗扰以费畔，召，子欲往。子路不说，曰：“末之也已，何必公山氏之之也？”子曰：“夫召我者而岂徒哉？如有用我者，吾其为东周乎！”</p>
<p>子张问仁于孔子，孔子曰：“能行五者于天下为仁矣。”请问之，曰：“恭、宽、信、敏、惠。恭则不侮，宽则得众，信则人任焉，敏则有功，惠则足以使人。”</p>
<p>佛肸召，子欲往。子路曰：“昔者由也闻诸夫子曰：‘亲于其身为不善者，君子不入也。’佛肸以中牟畔，子之往也，如之何？”子曰：“然，有是言也。不曰坚乎，磨而不磷；不曰白乎，涅而不缁。吾岂匏瓜也哉？焉能系而不食？”</p>
<p>子曰：“由也，女闻六言六蔽矣乎？”对曰：“未也。”“居！吾语女。好仁不好学，其蔽也愚；好知不好学，其蔽也荡；好信不好学，其蔽也贼；好直不好学，其蔽也绞；好勇不好学，其蔽也乱；好刚不好学，其蔽也狂。”</p>
<p>子曰：“小子何莫学夫《诗》？《诗》可以兴，可以观，可以群，可以怨。迩之事父，远之事君，多识于鸟兽草木之名。”</p>
<p>子谓伯鱼曰：“女为《周南》、《召南》矣乎？人而不为《周南》、《召南》，其犹正墙面而立也与！”</p>
<p>子曰：“礼云礼云，玉帛云乎哉？乐云乐云，钟鼓云乎哉？”</p>
<p>子曰：“色厉而内荏，譬诸小人，其犹穿窬之盗也与？”</p>
<p>子曰：“乡愿，德之贼也。”</p>
<p>子曰：“道听而涂说，德之弃也。”</p>
<p>子曰：“鄙夫可与事君也与哉？其未得之也，患得之；既得之，患失之。苟患失之，无所不至矣。”</p>
<p>子曰：“古者民有三疾，今也或是之亡也。古之狂也肆，今之狂也荡；古之矜也廉，今之矜也忿戾；古之愚也直，今之愚也诈而已矣。”</p>
<p>子曰：“巧言令色，鲜矣仁。”</p>
<p>子曰：“恶紫之夺朱也，恶郑声之乱雅乐也，恶利口之覆邦家者。”</p>
<p>子曰：“予欲无言。”子贡曰：“子如不言，则小子何述焉？”子曰：“天何言哉？四时行焉，百物生焉，天何言哉？”</p>
<p>孺悲欲见孔子，孔子辞以疾。将命者出户，取瑟而歌，使之闻之。</p>
<p>宰我问：“三年之丧，期已久矣！君子三年不为礼，礼必坏；三年不为乐，乐必崩。旧谷既没，新谷既升，钻燧改火，期可已矣。”子曰：“食夫稻，衣夫锦，于女安乎？”曰：“安！”“女安则为之！夫君子之居丧，食旨不甘，闻乐不乐，居处不安，故不为也。今女安，则为之！”宰我出，子曰：“予之不仁也！子生三年，然后免于父母之怀。夫三年之丧，天下之通丧也，予也有三年之爱于其父母乎！”</p>
<p>子曰：“饱食终日，无所用心，难矣哉！不有博弈者乎？为之犹贤乎已。”</p>
<p>子路曰：“君子尚勇乎？”子曰：“君子义以为上。君子有勇而无义为乱，小人有勇而无义为盗。”</p>
<p>子贡曰：“君子亦有恶乎？”子曰：“有恶。恶称人之恶者，恶居下流而讪上者，恶勇而无礼者，恶果敢而窒者。”曰：“赐也亦有恶乎？”“恶徼以为知者，恶不孙以为勇者，恶讦以为直者。”</p>
<p>子曰：“唯女子与小人为难养也，近之则不孙，远之则怨。”</p>
<p>子曰：“年四十而见恶焉，其终也已。”</p>
<center><font size="8">微子</font></center>

<p>微子去之，箕子为之奴，比干谏而死。孔子曰：“殷有三仁焉。”</p>
<p>柳下惠为士师，三黜。人曰：“子未可以去乎？”曰：“直道而事人，焉往而不三黜？枉道而事人，何必去父母之邦？”</p>
<p>齐景公待孔子曰：“若季氏，则吾不能。”以季、孟之间待之，曰：“吾老矣，不能用也。”孔子行。</p>
<p>齐人归女乐，季桓子受之，三日不朝，孔子行。”</p>
<p>楚狂接舆歌而过孔子曰：“凤兮凤兮，何德之衰？往者不可谏，来者犹可追。已而已而，今之从政者殆而！”孔子下，欲与之言，趋而辟之，不得与之言。</p>
<p>长沮、桀溺耦而耕，孔子过之，使子路问津焉。长沮曰：“夫执舆者为谁？”子路曰：“为孔丘。”曰：“是鲁孔丘与？”曰：“是也。”曰：“是知津矣。”问于桀溺，桀溺曰：“子为谁？”曰：“为仲由。”曰：“是鲁孔丘之徒与？”对曰：“然。”曰：“滔滔者天下皆是也，而谁以易之？且而与其从辟人之士也，岂若从辟世之士？”耰而不辍。子路行以告，夫子怃然曰：“鸟兽不可与同群，吾非斯人之徒与而谁与？天下有道，丘不与易也。”</p>
<p>子路从而后，遇丈人，以杖荷蓧。子路问曰：“子见夫子乎？”丈人曰：“四体不勤，五谷不分，孰为夫子？”植其杖而芸，子路拱而立。止子路宿，杀鸡为黍而食之，见其二子焉。明日，子路行以告，子曰：“隐者也。”使子路反见之，至则行矣。子路曰：“不仕无义。长幼之节不可废也，君臣之义如之何其废之？欲洁其身而乱大伦。君子之仕也，行其义也，道之不行已知之矣。”</p>
<p>逸民：伯夷、叔齐、虞仲、夷逸、朱张、柳下惠、少连。子曰：“不降其志，不辱其身，伯夷、叔齐与！”谓：“柳下惠、少连降志辱身矣，言中伦，行中虑，其斯而已矣。”谓：“虞仲、夷逸隐居放言，身中清，废中权。我则异于是，无可无不可。”</p>
<p>太师挚适齐，亚饭干适楚，三饭缭适蔡，四饭缺适秦，鼓方叔入于河，播鼗武入于汉，少师阳、击磬襄入于海。</p>
<p>周公谓鲁公曰：“君子不施其亲，不使大臣怨乎不以，故旧无大故则不弃也，无求备于一人。”</p>
<p>周有八士：伯达、伯适、仲突、仲忽、叔夜、叔夏、季随、季騧。</p>
<center><font size="8">子张</font></center>

<p>子张曰：“士见危致命，见得思义，祭思敬，丧思哀，其可已矣。”</p>
<p>子张曰：“执德不弘，信道不笃，焉能为有？焉能为亡？”</p>
<p>子夏之门人问交于子张，子张曰：“子夏云何？”对曰：“子夏曰：‘可者与之，其不可者拒之。’”子张曰：“异乎吾所闻。君子尊贤而容众，嘉善而矜不能。我之大贤与，于人何所不容？我之不贤与，人将拒我，如之何其拒人也？”</p>
<p>子夏曰：“虽小道必有可观者焉，致远恐泥，是以君子不为也。”</p>
<p>子夏曰：“日知其所亡，月无忘其所能，可谓好学也已矣。”</p>
<p>子夏曰：“博学而笃志，切问而近思，仁在其中矣。”</p>
<p>子夏曰：“百工居肆以成其事，君子学以致其道。”</p>
<p>子夏曰：“小人之过也必文。”</p>
<p>子夏曰：“君子有三变：望之俨然，即之也温，听其言也厉。”</p>
<p>子夏曰：“君子信而后劳其民，未信，则以为厉己也；信而后谏，未信，则以为谤己也。”</p>
<p>子夏曰：“大德不逾闲，小德出入可也。”</p>
<p>子游曰：“子夏之门人小子，当洒扫应对进退则可矣。抑末也，本之则无，如之何？”子夏闻之，曰：“噫，言游过矣！君子之道，孰先传焉？孰后倦焉？譬诸草木，区以别矣。君子之道焉可诬也？有始有卒者，其惟圣人乎！”</p>
<p>子夏曰：“仕而优则学，学而优则仕。”</p>
<p>子游曰：“丧致乎哀而止。”</p>
<p>子游曰：“吾友张也为难能也，然而未仁。”</p>
<p>曾子曰：“堂堂乎张也，难与并为仁矣。”</p>
<p>曾子曰：“吾闻诸夫子，人未有自致者也，必也亲丧乎！”</p>
<p>曾子曰：“吾闻诸夫子，孟庄子之孝也，其他可能也；其不改父之臣与父之政，是难能也。”</p>
<p>孟氏使阳肤为士师，问于曾子。曾子曰：“上失其道，民散久矣。如得其情，则哀矜而勿喜！”</p>
<p>子贡曰：“纣之不善，不如是之甚也。是以君子恶居下流，天下之恶皆归焉。”</p>
<p>子贡曰：“君子之过也，如日月之食焉。过也，人皆见之；更也，人皆仰之。”</p>
<p>卫公孙朝问于子贡曰：“仲尼焉学？”子贡曰：“文武之道未坠于地，在人。贤者识其大者，不贤者识其小者，莫不有文武之道焉，夫子焉不学？而亦何常师之有？”</p>
<p>叔孙武叔语大夫于朝曰：“子贡贤于仲尼。”子服景伯以告子贡，子贡曰：“譬之宫墙，赐之墙也及肩，窥见室家之好；夫子之墙数仞，不得其门而入，不见宗庙之美、百官之富。得其门者或寡矣，夫子之云不亦宜乎！”</p>
<p>叔孙武叔毁仲尼，子贡曰：“无以为也，仲尼不可毁也。他人之贤者，丘陵也，犹可逾也；仲尼，日月也，无得而逾焉。人虽欲自绝，其何伤于日月乎？多见其不知量也。”</p>
<p>陈子禽谓子贡曰：“子为恭也，仲尼岂贤于子乎？”子贡曰：“君子一言以为知，一言以为不知，言不可不慎也。夫子之不可及也，犹天之不可阶而升也。夫子之得邦家者，所谓立之斯立，道之斯行，绥之斯来，动之斯和。其生也荣，其死也哀，如之何其可及也？”</p>
<center><font size="8">尧曰</font></center>

<p>尧曰：“咨！尔舜，天之历数在尔躬，允执其中。四海困穷，天禄永终。”舜亦以命禹。曰：“予小子履，敢用玄牡，敢昭告于皇皇后帝：有罪不敢赦，帝臣不蔽，简在帝心。朕躬有罪，无以万方；万方有罪，罪在朕躬。”周有大赉，善人是富。“虽有周亲，不如仁人。百姓有过，在予一人。”谨权量，审法度，修废官，四方之政行焉。兴灭国，继绝世，举逸民，天下之民归心焉。所重：民、食、丧、祭。宽则得众，信则民任焉，敏则有功，公则说。</p>
<p>子张问于孔子曰：“何如斯可以从政矣？”子曰：“尊五美，屏四恶，斯可以从政矣。”子张曰：“何谓五美？”子曰：“君子惠而不费，劳而不怨，欲而不贪，泰而不骄，威而不猛。”子张曰：“何谓惠而不费？”子曰：“因民之所利而利之，斯不亦惠而不费乎？择可劳而劳之，又谁怨？欲仁而得仁，又焉贪？君子无众寡，无小大，无敢慢，斯不亦泰而不骄乎？君子正其衣冠，尊其瞻视，俨然人望而畏之，斯不亦威而不猛乎？”子张曰：“何谓四恶？”子曰：“不教而杀谓之虐；不戒视成谓之暴；慢令致期谓之贼；犹之与人也，出纳之吝谓之有司。”</p>
<p>孔子曰：“不知命，无以为君子也；不知礼，无以立也；不知言，无以知人也。”</p>
]]></content>
      <tags>
        <tag>古典</tag>
      </tags>
  </entry>
  <entry>
    <title>如何阅读一本书</title>
    <url>/2019/11/29/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>这是我在《如何阅读一本书》中得来的一点点收获，记录在这里。</p>
<p>告诉我以后在阅读的时候如何去做。</p>
 <a id="more"></a> 
<h1 id="四个问题"><a href="#四个问题" class="headerlink" title="四个问题"></a>四个问题</h1><p>（1） 整 体 来 说， 这 本 书 到 底 在 谈 些 什 么？ 你 一 定 要 想 办 法 找 出 这 本 书 的 主 题， 作 者 如 何 依 次 发 展 这 个 主 题， 如 何 逐 步 从 核 心 主 题 分 解 出从 属 的 关 键 议 题 来。 </p>
<p>（2） 作 者 细 部 说 了 什 么， 怎 么 说 的？ 你 一 定 要 想 办 法 找 出 主 要 的 想 法、 声 明 与 论 点。 这 些 组 合 成 作 者 想 要 传 达 的 特 殊 讯 息。 </p>
<p>（3） 这 本 书 说 得 有 道 理 吗？ 是 全 部 有 道 理， 还 是 部 分 有 道 理？ 除 非 你 能 回 答 前 两 个 问 题， 否 则 你 没 法 回 答 这 个 问 题。 在 你 判 断 这 本 书 是 否 有 道 理 之 前， 你 必 须 先 了 解 整 本 书 在 说 些 什 么 才 行。 然 而， 等 你 了 解 了 一 本 书， 如 果 你 又 读 得 很 认 真 的 话， 你 会 觉 得 有 责 任 为 这 本 书 做 个 自 己 的 判 断。 光 是 知 道 作 者 的 想 法 是 不 够 的。</p>
<p>（4） 这 本 书 跟 你 有 什 么 关 系？ 如 果 这 本 书 给 了 你 一 些 资 讯， 你 一 定 要 问 问 这 些 资 讯 有 什 么 意 义。 为 什 么 这 位 作 者 会 认 为 知 道 这 件 事 很 重 要？ 你 真 的 有 必 要 去 了 解 吗？ 如 果 这 本 书 不 只 提 供 了 资 讯， 还 启 发 了 你， 就 更 有 必 要 找 出 其 他 相 关 的、 更 深 的 含 意 或 建 议， 以 获 得 更 多 的 启 示。</p>
<h1 id="分析阅读的几点规则"><a href="#分析阅读的几点规则" class="headerlink" title="分析阅读的几点规则"></a>分析阅读的几点规则</h1><p>（1） 依 照 书 的 种 类 与 主 题 来 分 类。 </p>
<p>（2） 使 用 最 简 短 的 文 字 说 明 整 本 书 在 谈 些 什 么。</p>
<p>（3） 将 主 要 部 分 按 顺 序 与 关 联 性 列 举 出 来。 将 全 书 的 大 纲 列 举 出 来， 并 将 各 个 部 分 的 大 纲 也 列 出 来。 </p>
<p>（4） 确 定 作 者 想 要 解 决 的 问 题。</p>
<p>（5） 诠 释 作 者 的 关 键 字， 与 他 达 成 共 识。 </p>
<p>（6） 由 最 重 要 的 句 子 中， 抓 住 作 者 的 重 要 主 旨。 </p>
<p>（7） 知 道 作 者 的 论 述 是 什 么， 从 内 容 中 找 出 相 关 的 句 子， 再 重 新 架 构 出 来。 </p>
<p>（8） 确 定 作 者 已 经 解 决 了 哪 些 问 题， 还 有 哪 些 是 没 解 决 的。 再 判 断 哪 些 是 作 者 知 道 他 没 解 决 的 问 题。</p>
<p>（9） 除 非 你 已 经 完 成 大 纲 架 构， 也 能 诠 释 整 本 书 了， 否 则 不 要 轻 易 批 评。（ 在 你 说 出：“ 我 读 懂 了!” 之 前， 不 要 说 你 同 意、 不 同 意 或 暂 缓 评 论。） </p>
<p>（10） 不 要 争 强 好 胜， 非 辩 到 底 不 可。</p>
<p>（11） 在 说 出 评 论 之 前， 你 要 能 证 明 自 己 区 别 得 出 真 正 的 知 识 与 个 人 观 点 的 不 同。</p>
<p>（12） 证 明 作 者 的 知 识 不 足。 </p>
<p>（13） 证 明 作 者 的 知 识 错 误。</p>
<p>（14） 证 明 作 者 不 合 逻 辑。</p>
<p>（15） 证 明 作 者 的 分 析 与 理 由 是 不 完 整 的。</p>
<h1 id="主动地阅读"><a href="#主动地阅读" class="headerlink" title="主动地阅读"></a>主动地阅读</h1><p>在阅读的时候，不能是昏昏欲睡的，决不能变成那种，我看完了全文，但是我不知道它说了些什么。</p>
<p>要能回答这四个问题，别人问的时候，要能说出自己最真切的体会。</p>
<p>无论如何，要当一个主动的读者，不能当一个僵硬、死记硬背、读完就忘的读者。</p>
]]></content>
      <tags>
        <tag>阅读记录</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第5题</title>
    <url>/2019/11/29/leetcode%E7%AC%AC5%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第5题"><a href="#leetcode第5题" class="headerlink" title="leetcode第5题"></a>leetcode第5题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p> 给定一个字符串 <code>s</code>，找到 <code>s</code> 中最长的回文子串。你可以假设 <code>s</code> 的最大长度为 1000。 </p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;babad&quot;</span><br><span class="line">输出: &quot;bab&quot;</span><br><span class="line">注意: &quot;aba&quot; 也是一个有效答案。</span><br></pre></td></tr></table></figure>
<p>示例2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;cbbd&quot;</span><br><span class="line">输出: &quot;bb&quot;</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>这道题有好几种思路，但是我只能想到暴力破解。。。。</p>
<p>这里就在每种解法下面谈一谈思路吧。</p>
<h1 id="解法1–暴力破解"><a href="#解法1–暴力破解" class="headerlink" title="解法1–暴力破解"></a>解法1–暴力破解</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self,s)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">if</span> s[i]!=s[len(s)-i<span class="number">-1</span>]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        maxLength=<span class="number">-1</span></span><br><span class="line">        res=<span class="string">""</span></span><br><span class="line">        tmp=<span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(j,len(s)):</span><br><span class="line"></span><br><span class="line">                tmp=s[j:k+<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> self.isPalindrome(tmp):</span><br><span class="line">                    <span class="keyword">if</span> len(tmp)&gt;maxLength:</span><br><span class="line">                        maxLength=len(tmp)</span><br><span class="line">                        res=tmp</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<p>暴力破解没啥好聊的，就是三重循环。第一二重选出字符串，在第三重判断是不是回文字符串。</p>
<p>结果就是超时，聊不动。</p>
<h1 id="解法2–最长公共子串"><a href="#解法2–最长公共子串" class="headerlink" title="解法2–最长公共子串"></a>解法2–最长公共子串</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="解法3–动态规划"><a href="#解法3–动态规划" class="headerlink" title="解法3–动态规划"></a>解法3–动态规划</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        <span class="keyword">if</span> len(s) &lt; <span class="number">2</span> <span class="keyword">or</span> s == s[::<span class="number">-1</span>]:  <span class="comment"># 如果长度为0或1，或者本身就是回文，返回s本身</span></span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        </span><br><span class="line">        max_len = <span class="number">1</span></span><br><span class="line">        start = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(s)):   <span class="comment">#将s[i]作为回文子串的最右边字符算</span></span><br><span class="line">            even = s[i - max_len : i + <span class="number">1</span>]   <span class="comment"># 从 i-max_len 到 i ，共 max_len+1 个，初始为2</span></span><br><span class="line">            odd = s[i - max_len - <span class="number">1</span> : i + <span class="number">1</span>]    <span class="comment"># 从 i-max_len-1 到 i ，共 max_len+2 个，初始为3</span></span><br><span class="line">            <span class="keyword">if</span> i - max_len - <span class="number">1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> odd == odd[::<span class="number">-1</span>]:   <span class="comment"># 因为odd = s[i-max_len-1 : i+1]，所以要i-max_len-1非负odd才有意义</span></span><br><span class="line">                start = i - max_len - <span class="number">1</span></span><br><span class="line">                max_len += <span class="number">2</span>    <span class="comment"># 为什么加2，因为odd的长度是max_len+2</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> i - max_len &gt;= <span class="number">0</span> <span class="keyword">and</span> even == even[::<span class="number">-1</span>]: <span class="comment"># 同理需要i-max_len非负even才有意义，</span></span><br><span class="line">                start = i - max_len</span><br><span class="line">                max_len +=  <span class="number">1</span>   <span class="comment"># 同理，even的长度是max_len+1</span></span><br><span class="line">        <span class="keyword">return</span> s[start : start + max_len]</span><br></pre></td></tr></table></figure>
<h1 id="解法4–扩展中心"><a href="#解法4–扩展中心" class="headerlink" title="解法4–扩展中心"></a>解法4–扩展中心</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">expandCenter</span><span class="params">(self,s,i,j)</span>:</span></span><br><span class="line">        L=i</span><br><span class="line">        R=j</span><br><span class="line">        <span class="keyword">while</span> L&gt;=<span class="number">0</span> <span class="keyword">and</span> R&lt;len(s) <span class="keyword">and</span> s[L]==s[R]:</span><br><span class="line">            L=L<span class="number">-1</span></span><br><span class="line">            R=R+<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> R-L<span class="number">-1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        <span class="keyword">if</span> len(s)&lt;<span class="number">1</span> <span class="keyword">or</span> s==<span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>    </span><br><span class="line">        start=<span class="number">0</span></span><br><span class="line">        end=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            len1=self.expandCenter(s,i,i)</span><br><span class="line">            len2=self.expandCenter(s,i,i+<span class="number">1</span>)</span><br><span class="line">            length=max(len1,len2)</span><br><span class="line">            <span class="keyword">if</span> (length&gt;(end-start)):</span><br><span class="line">                start=i-(length<span class="number">-1</span>)//<span class="number">2</span></span><br><span class="line">                end=i+length//<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> s[start:end+<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<p>扩展中心法就是从某个点出发，找这个点符合的最大回文串。</p>
<p>比较全部点的最大回文串，找出最大的那个，就是结果。</p>
<p>这里的长度折腾了我好久，是R-L-1。这里的减1是去除一开始两个数带进来的偏差。</p>
<h1 id="解法5–manacher’s-algorithm"><a href="#解法5–manacher’s-algorithm" class="headerlink" title="解法5–manacher’s algorithm"></a>解法5–manacher’s algorithm</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        s = <span class="string">"!#"</span> + <span class="string">"#"</span>.join(s) + <span class="string">"#?"</span></span><br><span class="line">        center = <span class="number">0</span> <span class="comment">#最长回文子串中心点</span></span><br><span class="line">        max_right = <span class="number">0</span> <span class="comment">#最长回文子串最远位置</span></span><br><span class="line">        max_s = <span class="number">0</span> <span class="comment">#最长回文子串中心点所在地的位置</span></span><br><span class="line"> </span><br><span class="line">        p = [<span class="number">0</span>] * (len(s)<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(s)<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> i &lt; max_right:</span><br><span class="line">                p[i] = min(max_right-i, p[<span class="number">2</span>*center-i])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                p[i] = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">while</span> i-p[i]&gt;<span class="number">0</span> <span class="keyword">and</span> i+p[i]&lt;len(s) <span class="keyword">and</span> s[i-p[i]]==s[i+p[i]]:</span><br><span class="line">                p[i]+=<span class="number">1</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> i+p[i] &gt; max_right:</span><br><span class="line">                max_right = i+p[i]</span><br><span class="line">                center = i</span><br><span class="line">            max_s = max(max_s, p[i])</span><br><span class="line">        </span><br><span class="line">        s=s[p.index(max_s)-(max_s<span class="number">-1</span>): p.index(max_s)+(max_s<span class="number">-1</span>)]</span><br><span class="line">        s=s.replace(<span class="string">'#'</span>,<span class="string">''</span>) </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>阅读记录之批判性思维工具</title>
    <url>/2019/11/28/%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%95%E4%B9%8B%E3%80%8A%E6%89%B9%E5%88%A4%E6%80%A7%E6%80%9D%E7%BB%B4%E5%B7%A5%E5%85%B7%E3%80%8B/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>当初为什么要借这本《批判性思维工具》？</p>
<p>是因为我觉得，我一直是一个不爱动脑子的人。不管面对什么情况，提不出问题，很容易就僵硬在原点。</p>
<p>读这本书，是希望能够给我带来一点点的改变。因为我已经阅读过很多思考的书了，但是脑子都是不太愿意去思考，在很多书看过之后，自然而然地就忘了。</p>
<p>一直处于这种后悔和想要努力的状态中，顺便就找了这本书来看。</p>
<p>现在看来，还是有点收获的。</p>
<p>阅读，还是要思考，要明白一本书到底说的是什么？</p>
<p>这本书也是第一次带给我不一样的感觉：没有一字一句看过去，但是我觉得我应该抓住了精髓。</p>
 <a id="more"></a> 
<h1 id="思维、感受和需求"><a href="#思维、感受和需求" class="headerlink" title="思维、感受和需求"></a>思维、感受和需求</h1><p>我们的大脑是很神奇的东西，它有三个基本功能：思维、感受和需求。</p>
<p>思维是我们感知世界的工具，它帮助我们了解世界，弄明白发生了什么？</p>
<p>而感受告诉我们做的怎么样，决定我们的心情和精神状态，是积极阳光，还是失落沮丧。</p>
<p>需求则给与我们奋斗的力量和追求事物的渴望，也告诉我们哪些东西不知道取追寻，不要自寻烦恼。</p>
<p>思维、感受、需求三者相互联系，思维在这里面扮演了一个关键性的角色，它告诉我们世界怎么样，我们应该朝哪个方向前进。</p>
<p>有一个最简单的例子：两个学生在练习写作。其中一个认为写的好就是天生拥有的，自己肯定不行；另外一个则认为写作是可以慢慢训练的，现在虽然自己很弱，但是一点一滴积累，自己肯定能赶超那些现在很强的人。结果是很明显的，前者会很快放弃，并且再也不去碰写作；后者会持续的学习、练习，坚持不懈地进行，能成为常说的“天生作家”。</p>
<p>显然，不同的思维会带给我们完全不一样的感受，并影响了我们的精神状态。</p>
<p>而成为一个批判性思考者，能改变我们错误、有偏见的认知，带给我们完全不一样的体验。</p>
<h1 id="批判性思维"><a href="#批判性思维" class="headerlink" title="批判性思维"></a>批判性思维</h1><p>首先来介绍什么是批判性思维。</p>
<p>批判性思维是建立在良好判断的基础上，使用恰当的评估标准对事物的真实价值进行判断和思考。</p>
<p>作为一个批判性思考者，最直观的表现就是认识到自己的思维有问题，不断挑战自己的思维，并用更加合理的来替代；也明白这个过程是不断进行的，能够分析自己的思维，合理决策，而不是无意识地跟着走。</p>
<h1 id="如何去做"><a href="#如何去做" class="headerlink" title="如何去做"></a>如何去做</h1><p>在知道怎么做之前，先来了解思维过程和思维标准。他们是贯穿思考过程始终的，就和吃饭要拿起筷子、打篮球得了解基本规则一样。</p>
<p>思维过程：</p>
<ul>
<li>我的基本目的是什么</li>
<li>关于这个问题，我的观点是什么</li>
<li>我推理的假设是什么</li>
<li>我推理带来的意义是什么</li>
<li>回答问题时，我需要哪些信息</li>
<li>我得到的推论和结论是什么</li>
<li>这个问题中最基本的概念是什么</li>
<li>我想要回答的关键问题是什么</li>
</ul>
<p>思维标准：</p>
<ul>
<li>清晰性</li>
<li>准确性</li>
<li>精确性</li>
<li>相关性</li>
<li>深度</li>
<li>广度</li>
<li>逻辑性</li>
<li>重要性</li>
<li>公正性</li>
</ul>
<p>使用思维标准来评估我们的思维过程，这个过程是不可或缺的。我们要意识到评估失败带给我们的负面影响，悲伤、沮丧、压抑的心情，触犯法律的行为等等。</p>
<p>知晓了这两项，可以提出一个思考计划。我们要认识到思考改变不是一个一蹴而就的过程，它需要每天不间断地练习，不断地练习，才会有丰厚的收获。以下是计划：</p>
<ul>
<li>利用“浪费”的时间</li>
<li>每天解决一个问题</li>
<li>将思维标准内化</li>
<li>坚持做思维日记</li>
<li>练习思维策略</li>
<li>关注自己的情绪、重新塑造性格、改变自我</li>
</ul>
<p>这些只是泛泛而谈，接下来要谈的是如何具体进行。</p>
<h1 id="具体进行"><a href="#具体进行" class="headerlink" title="具体进行"></a>具体进行</h1><p>首先要学会提问，做一个苏格拉底式的提问者。</p>
<ul>
<li>尽最大可能去理解所说或所信事物的根本基础。</li>
<li>找出观点间的相互联系，深入思考。</li>
<li>用不断完善的需求对待所有观点</li>
<li>认识到所有的问题都以先前的问题为基础。</li>
</ul>
<p>其次，要明白思维和内容是相互联系的，要明白对应的内容，是要培养相应的思维方式。</p>
<p>接下来是向优秀的思维者学习，要能够掌控自己的学习过程，并且制定学习计划，严格执行计划。在这个过程中，必须知道自己想要回答哪些问题、得到哪些信息、学习哪些概念、掌握哪些观点。这个过程，还得不断地利用特征进行评价，不断地改进自己的表现。</p>
<p>最后，利用这样的思维进行决策和解决问题，避免掉自我中心化和非理性的负面影响，朝着正确的轨道前进。</p>
<h1 id="成为一名高级的思考者"><a href="#成为一名高级的思考者" class="headerlink" title="成为一名高级的思考者"></a>成为一名高级的思考者</h1><p>我们不太可能成为一名完善的思考者，但是成为一位高级批判性思考者是完全有可能的。</p>
<p>我们要追求这样的心理品质：</p>
<p>能意识到自己思维的运作</p>
<ul>
<li>意识到自己的思维和行动模式</li>
<li>深思熟虑地做出改变</li>
<li>赞同自己的内在逻辑</li>
</ul>
<p>高度整合信息</p>
<ul>
<li>灵活地运用不同的知识</li>
<li>洞察基本概念和原则，组织大量信息</li>
</ul>
<p>合乎理性、有逻辑</p>
<ul>
<li>经常分析事物的逻辑</li>
<li>综合分析多个理由和证据</li>
<li>能在多重框架下进行推理</li>
<li>通过思考增加理解和洞察力</li>
</ul>
<p>目光长远</p>
<ul>
<li>采取长远的观点</li>
<li>规划自己的发展</li>
<li>关注最终的价值</li>
</ul>
<p>深刻、能够自我修正的</p>
<ul>
<li>对自己的基本信仰和价值观有深刻的见解</li>
<li>了解思维、感受、行动背后的深刻动机</li>
<li>应用思维标准评价自己的思维、感受和行为</li>
<li>发现批评自己的自我中心和社会中心</li>
<li>能够调整自己的生活模式、习惯和行为</li>
</ul>
<p>要朝着一个高级思考者前进呀！</p>
]]></content>
      <tags>
        <tag>阅读记录</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔之2019-11-28</title>
    <url>/2019/11/28/%E9%9A%8F%E7%AC%94%E4%B9%8B2019-11-28/</url>
    <content><![CDATA[<p> 在写这个之前，我又没有控制住自己去看直播了，好大的讽刺呀！！！</p>
<p>今天晚上，本应该是五点半开始，七点半结束，然后还有时间在科研，但是现在的话，就变成10点钟结束了。</p>
<p>又变回熟悉的味道，明天继续努力！</p>
<p>不过文章还是要写。不管怎么样，把自己订下的目标做完了。</p>
<p>今天还是有那么一点点进步的，做了总比不做要强。</p>
 <a id="more"></a> 
<h1 id="时间不太快"><a href="#时间不太快" class="headerlink" title="时间不太快"></a>时间不太快</h1><p>其实，我一直觉得自己是很奇特的一个人。</p>
<p>思维僵硬，但是做事情又可以靠机械性重复把事情办好。</p>
<p>我认为在我脑海里，思考这东西是不存在的。看书只想着快点把书过一遍，然后宣称自己看过。但是说说自己看了点什么的时候，却发现自己什么也说不出来。在高中的时候，很多知识点不懂，我不是想着花时间去弄懂，习惯把它们堆在一起，最后它们成为了我无解的难题。在生活里面，可以很快的接受别人的观点，认为他们说的对啊，是这个道理呀。</p>
<p>思考是对世界的探索，是对未知的好奇。</p>
<p>我想我对于思考的缺失，源于自己的小时候。我很早就养成了偷懒的习惯，永远在最后一刻做自己的作业，为此不惜熬夜。思考一件事情的时候，感觉太过费脑子，就想着放下了。即使到现在，我还是懒得思考。看书的时候，就没有认认真真的思考过。我看过七八遍《如何阅读一本书》，是因为我从这本书上看到了如何才能算真正的读过书，有所收获。</p>
<p>但是到现在，我发现我还是在原地踏步。书是一本又一本在读，但是留在心里的东西却没有多少。</p>
<p>在现在这个点，经历了很多空虚、寂寞的时间。我明白到，其实是我的心在作祟。我太过于浮躁，太过于求成，巴不得一天看完两本书，第二天就融会贯通。结果就是，书翻完了，人却没有收获。</p>
<p>与此同时，陪伴我这种心态的，还有各种各样的时间被浪费在直播、游戏之中。眼一睁、眼一闭，时间就过去了，然后晚上懊悔地说，今天又浪费了，明天一定好好干。</p>
<p>时间不是过的太快，而是自己的心不对。</p>
<h1 id="控制自己的想法"><a href="#控制自己的想法" class="headerlink" title="控制自己的想法"></a>控制自己的想法</h1><p>以前和一个博士姐姐聊过一个话题，如何看待把时间花费在游戏上，过后又觉得很后悔的行为？</p>
<p>她的回答是：这是一个很正常的事情。在即时快乐和延迟满足里面，选择谁都不是问题，谁都可以接受。</p>
<p>现在有点后悔，当时没有把这个话题进一步深入。当时觉得说的挺有道理的，既然玩了，就要享受玩的快乐，然后就一直在玩。</p>
<p>我又有一点点新的体会。因为我把大把的时间放在玩上，有点把自己玩废了的感觉。以至于现在每天回寝室，都是满怀罪恶感，感觉一天又这么被自己浪费了。</p>
<p>现在为什么会有这样的感觉，因为很多压力摆在面前。要毕业，要工作，要挣钱……但是自己现在却一无所长，有种废物既视感。</p>
<p>但每天确实是控制不住自己，每次工作之后，阶段性休息的时候，总想着直播或者游戏放松一下，但是放松之后，整个人状态都不对了，根本回不去工作状态。我意识到不能去这样放松，但是又始终控制不了自己的想法。</p>
<p>我是被自己那种安逸、偷懒、轻松想法控制住了。</p>
<p>我成为了自己的奴隶。</p>
<p>其实有计划，我是想做这样的人，但现实不是这样，我不应该这样被控制。</p>
<h1 id="行动"><a href="#行动" class="headerlink" title="行动"></a>行动</h1><p>我现在在尝试每天让自己多工作一点。</p>
<p>每天的基本任务是：200分钟编程练习、90分钟的阅读、30分钟的阅读总结、60分钟的写作。</p>
<p>但我发现很多时候，只能做一下200分钟的编程练习。</p>
<p>做完这之后，心态就产生了变化。从我干了这么久，应该休息一会了；到看完这部分，马上去工作；再到再看一集，再去工作；最后变成了今天已经没有时间了，明天再多花时间努力吧。</p>
<p>每天就是在这样的环境下重复，我也觉得很头疼。</p>
<p>现在有个新点子，用forest软件来计时，一旦开始计时，坚决不能把时间投入到有的没的上面。效果还行，但最怕的就是连计时也不想打开。</p>
<p>当然，这里面还有其他的问题，就是每天我九点到实验室，中午11点吃饭，然后吃完饭要午睡一个多小时，午睡完还要挂机划水找找状态，很多时间都是在这样的过程中被浪费了。</p>
<p>今天算是第一天把基本任务做完了，代价有点大。白天猛玩，晚上加班到10点。</p>
<p>其实不应该这一，380分钟，就是6小时工作量，应该白天坚决完成的，晚上得把时间用在科研上。</p>
<p>我觉得我可能应该去接受社会的毒打，在学校里面过的太过于安逸了。</p>
<p>应该采取不一样的行动！</p>
<p>早上6点50的闹钟，7点起床，7点40到实验室工作到11点。</p>
<p>11点–11点半吃饭，工作半小时</p>
<p>12点–13点半睡觉休息。</p>
<p>13点半-17点：工作</p>
<p>17点–18点： 吃饭</p>
<p>18点–22点，努力科研。</p>
<p>其实我超想要这样的状态，但是就是忍不住，写下这个表，监督自己吧。</p>
<p>做一个自己的掌控者。</p>
]]></content>
      <tags>
        <tag>myself</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第4题</title>
    <url>/2019/11/28/leetcode%E7%AC%AC4%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第4题"><a href="#leetcode第4题" class="headerlink" title="leetcode第4题"></a>leetcode第4题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。</p>
<p>请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。</p>
<p>你可以假设 nums1 和 nums2 不会同时为空。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nums1 = [1, 3]</span><br><span class="line">nums2 = [2]</span><br><span class="line"></span><br><span class="line">则中位数是 2.0</span><br></pre></td></tr></table></figure>
<p>示例2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nums1 = [1, 2]</span><br><span class="line">nums2 = [3, 4]</span><br><span class="line"></span><br><span class="line">则中位数是 (2 + 3)/2 = 2.5</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>这道题真的是一点思路都没有啊（虽然我之前做过，说明白做了）。</p>
<p>我直接去找题解了，看题解也看了好一会。</p>
<p>题目要求是求两个有序数组的中位数。</p>
<p>我们分别有长度为m的数组A和长度为n的数组B。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A[0],A[1],...,A[m]</span><br><span class="line">B[0],B[1],...,B[n]</span><br></pre></td></tr></table></figure>
<p>思路在于把两个数组切分成两部分，并保证左边部分的数据小于右边部分的数据，且左右两块大小一致。如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">left_part               |    right_part</span><br><span class="line">A[0],A[1],...,A[i-1]    |    A[i],...,A[m-1]</span><br><span class="line">B[0],B[1],...,B[J-1]    |    B[J],...,B[n-1]</span><br></pre></td></tr></table></figure>
<p>只要我们左边部分和右边部分大小一致，且A[i-1]&lt;B[j],B[j-1]&lt;A[i]，我们就找到了中位数（因为A和B是有序数组，A[i-1]&lt;A[i],B[j-1]&lt;B[j]先天成立）。</p>
<p>要保证上面提出的条件，我们有</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">i+j=(m+n-i-j)或i+j=(m+n+1-i-j)</span><br><span class="line">A[i-1]&lt;B[j]</span><br><span class="line">B[j-1]&lt;A[i]</span><br></pre></td></tr></table></figure>
<p>由此，我们得到了i和j的关系式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">j=(m+n)/2-i或j=(m+n+1)/2-i</span><br></pre></td></tr></table></figure>
<p>再分析i和j的位置(这里先不需要数组越界的情况，即i&gt;0且i&lt;m)：</p>
<p>如果A[i-1]&gt;B[j]，说明i偏大，应该减小i；</p>
<p>如果B[j-1]&gt;A[i]，说明j偏大，应该减小j，由于上面的式子，可以通过增大i，来减小j。</p>
<p>如果A[i-1]&lt;B[j]且B[j-1]&lt;A[i]，说明我们找对了位置，可以结束搜索，考虑输出。</p>
<p>接下来针对的是数组越界的情况，因为当i=0，j=0，i=m，j=n的时候，此时已经满足上述两个条件。由于数组会越界，程序出现错误，因此需要特殊处理。</p>
<p>当i=0时，左边部分只有数组B，左边最大为B[j-1]。</p>
<p>当j=0时，左边部分只有数组A，左边最大为A[i-1]。</p>
<p>如果没有越界，则左边最大为max(A[i-1],B[j-1])。</p>
<p>如果长度之和为奇数，可以直接输出左边最大，它就是我们的结果。</p>
<p>不然，统计右边最小，也分为越界和没有越界。</p>
<p>输出左边最大和右边最小和的二分之一。</p>
<p>至此，这道题就结束了，贴出解法。</p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span><span class="params">(self, nums1: List[int], nums2: List[int])</span> -&gt; float:</span></span><br><span class="line">        m=len(nums1)</span><br><span class="line">        n=len(nums2)</span><br><span class="line">        <span class="keyword">if</span> m&gt;n:</span><br><span class="line">            m,n,nums1,nums2=n,m,nums2,nums1</span><br><span class="line"></span><br><span class="line">        imin=<span class="number">0</span></span><br><span class="line">        imax=m</span><br><span class="line">        <span class="keyword">if</span> (m+n)%<span class="number">2</span>==<span class="number">1</span>:</span><br><span class="line">            halfLen=(m+n+<span class="number">1</span>)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            halfLen=(m+n)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> imin&lt;=imax:</span><br><span class="line">            i=(imin+imax)//<span class="number">2</span></span><br><span class="line">            j=(int)(halfLen-i)</span><br><span class="line">            <span class="keyword">if</span> i&lt;m <span class="keyword">and</span> nums2[j<span class="number">-1</span>]&gt;nums1[i]:</span><br><span class="line">                imin=i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> i&gt;<span class="number">0</span> <span class="keyword">and</span> nums1[i<span class="number">-1</span>]&gt;nums2[j]:</span><br><span class="line">                imax=i<span class="number">-1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> i==<span class="number">0</span>:max_of_left=nums2[j<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">elif</span> j==<span class="number">0</span>:max_of_left=nums1[i<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">else</span>:max_of_left=max(nums1[i<span class="number">-1</span>],nums2[j<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">if</span>(m+n)%<span class="number">2</span>==<span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">return</span> max_of_left</span><br><span class="line">                <span class="keyword">if</span> i==m:min_of_right=nums2[j]</span><br><span class="line">                <span class="keyword">elif</span> j==n:min_of_right=nums1[i]</span><br><span class="line">                <span class="keyword">else</span>:min_of_right=min(nums1[i],nums2[j])</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> (max_of_left+min_of_right)/<span class="number">2</span></span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>中位数的问题，归根到底是一个数学问题，思路清晰了，结果就出来了。</p>
<p>学到了中位数问题，分成左右两部分的思想。</p>
<p>这里还有一个小细节。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (m+n)%2==1:</span><br><span class="line">    halfLen=(m+n+1)//2</span><br><span class="line">else:</span><br><span class="line">    halfLen=(m+n)//2</span><br></pre></td></tr></table></figure>
<p>这是我的取一半，但实际上题解里的取一半是不一样的，如下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">halfLen=(m+n+1)//2</span><br></pre></td></tr></table></figure>
<p>思考了一会，发现确实有道理，如果是奇数，则+1才是真正的一半；如果是偶数，+1也不会影响结果。</p>
<p>还是很弱啊，这道题虽然是个困难题，但其实我做过蛮多遍了，没有复习，结果就等于前面的都白给了。</p>
<p>加油呗！</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第3题</title>
    <url>/2019/11/27/leetcode%E7%AC%AC3%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第3题"><a href="#leetcode第3题" class="headerlink" title="leetcode第3题"></a>leetcode第3题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p> 给定一个字符串，请你找出其中不含有重复字符的 <strong>最长子串</strong> 的长度。 </p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>示例1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;abcabcbb&quot;</span><br><span class="line">输出: 3 </span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span><br></pre></td></tr></table></figure>
<p>示例2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;bbbbb&quot;</span><br><span class="line">输出: 1</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span><br></pre></td></tr></table></figure>
<p>示例3<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;pwwkew&quot;</span><br><span class="line">输出: 3</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span><br><span class="line">     请注意，你的答案必须是子串的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span><br></pre></td></tr></table></figure></p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>一开始做，就只想到双重循环，对每一个点进行一次判断，每个点有几个不重复的字符串。最后给出最大的结果。</p>
<p>结果就是效率好低啊，给出我的解法1。</p>
<p>然后我就去找了提交记录里面最快的一个方法学习了一下。</p>
<p>他的特点在于只用了一次循环，就解决了这个问题，大大地提高了运行效率，解法贴在解法2里面。</p>
<p>关键点在于利用字符串的特性，每次找到重复字符后，从保存的重复字符串中抽取字符，组成新的结果，重新进行比较。</p>
<p>我试着改一改我的解法1。</p>
<p>效率快了很多，但还是没有解法2效率高，我认为差距在于我的列表操作时间比不上字符串操作，low了一点，但也把解法3贴出来吧。</p>
<h1 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        d=[]</span><br><span class="line">        maxcount=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            count=<span class="number">1</span></span><br><span class="line">            d=[]</span><br><span class="line">            d.append(s[i])</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>,len(s)):</span><br><span class="line">                <span class="keyword">if</span> s[j] <span class="keyword">in</span> d:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                count=count+<span class="number">1</span></span><br><span class="line">                d.append(s[j])</span><br><span class="line">            <span class="keyword">if</span> count&gt;maxcount:</span><br><span class="line">                maxcount=count</span><br><span class="line">        <span class="keyword">return</span> maxcount</span><br></pre></td></tr></table></figure>
<h1 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> s:</span><br><span class="line">            res=<span class="string">''</span></span><br><span class="line">            slen=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> meb <span class="keyword">in</span> s:</span><br><span class="line">                <span class="keyword">if</span> meb <span class="keyword">not</span> <span class="keyword">in</span> res:</span><br><span class="line">                    res+=meb</span><br><span class="line">                    <span class="keyword">if</span> len(res)&gt;slen:</span><br><span class="line">                        slen=len(res)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    i=res.find(meb)</span><br><span class="line">                    res=res[i+<span class="number">1</span>:]+meb</span><br><span class="line">            <span class="keyword">return</span> slen</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h1 id="解法3"><a href="#解法3" class="headerlink" title="解法3"></a>解法3</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        d=[]</span><br><span class="line">        maxcount=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> s:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">                <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> d:</span><br><span class="line">                    d.append(i)</span><br><span class="line">                    <span class="keyword">if</span> maxcount&lt;len(d):</span><br><span class="line">                        maxcount=len(d)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    index=d.index(i)</span><br><span class="line">                    d=d[index+<span class="number">1</span>:]</span><br><span class="line">                    d.append(i)</span><br><span class="line">            <span class="keyword">return</span> maxcount</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>学到了思路，对于重复字符比较问题，可以把重复字符暂存起来。</p>
<p>不需要两次循环，只需要在重复的时候，把暂存的字符串更新一下，能给下次使用就可以了。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第2题</title>
    <url>/2019/11/26/leetcode%E7%AC%AC2%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第2题"><a href="#leetcode第2题" class="headerlink" title="leetcode第2题"></a>leetcode第2题</h1> <a id="more"></a> 
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</p>
<p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p>
<p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">输出：7 -&gt; 0 -&gt; 8</span><br><span class="line">原因：342 + 465 = 807</span><br></pre></td></tr></table></figure>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>很早就写过这道题，但是这次写又遇到很多的问题(我真是菜啊)，就写一写思路吧。</p>
<p>首先考虑两个链表是空的情况。单个空，则直接返回另外一个。</p>
<p>然后设置节点，这里有一个问题，就是为什么要有一个头节点，我到现在，还没搞清楚。就是没有头节点，答案就是不正确。</p>
<p>我本来想着是一直加下去处理情况，然后直接把另外的剩下部分挂上去，直接返回结果，但是出了很多问题，就先把记忆里的解法1，先倒腾出来了。</p>
<p>最后要考虑的是，退出循环后，还有一个进位需要处理。</p>
<p>然后，就返回头节点的后面部分，这里也存在一个疑惑。</p>
<p>我试着写一写我的解法2。</p>
<h1 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addTwoNumbers</span><span class="params">(self, l1: ListNode, l2: ListNode)</span> -&gt; ListNode:</span></span><br><span class="line">        <span class="keyword">if</span> l1 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> l2</span><br><span class="line">        <span class="keyword">if</span> l2 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> l1</span><br><span class="line">        carry=<span class="number">0</span></span><br><span class="line">        sum=<span class="number">0</span></span><br><span class="line">        head=ListNode(<span class="number">0</span>)</span><br><span class="line">        result=head</span><br><span class="line">        <span class="keyword">while</span>(l1 <span class="keyword">or</span> l2):</span><br><span class="line">            sum=<span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> l1!=<span class="literal">None</span>:</span><br><span class="line">                sum+=l1.val</span><br><span class="line">                l1=l1.next</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                sum+=<span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> l2!=<span class="literal">None</span>:</span><br><span class="line">                sum+=l2.val</span><br><span class="line">                l2=l2.next</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                sum+=<span class="number">0</span></span><br><span class="line">            sum+=carry</span><br><span class="line">            result.next=ListNode(sum%<span class="number">10</span>)</span><br><span class="line">            result=result.next</span><br><span class="line">            carry=sum//<span class="number">10</span></span><br><span class="line">        <span class="keyword">if</span> carry==<span class="number">1</span>:</span><br><span class="line">            result.next=ListNode(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> head.next</span><br></pre></td></tr></table></figure>
<h1 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addTwoNumbers</span><span class="params">(self, l1: ListNode, l2: ListNode)</span> -&gt; ListNode:</span></span><br><span class="line">        <span class="keyword">if</span> l1 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> l2</span><br><span class="line">        <span class="keyword">if</span> l2 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> l1</span><br><span class="line">        carry=<span class="number">0</span></span><br><span class="line">        sum=<span class="number">0</span></span><br><span class="line">        head=ListNode(<span class="number">0</span>)</span><br><span class="line">        result=head</span><br><span class="line">        <span class="keyword">while</span>(l1 <span class="keyword">or</span> l2):</span><br><span class="line">            sum=l1.val+l2.val+carry</span><br><span class="line">            result.next=ListNode(sum%<span class="number">10</span>)</span><br><span class="line">            result=result.next</span><br><span class="line">            carry=sum//<span class="number">10</span></span><br><span class="line">            l1=l1.next</span><br><span class="line">            l2=l2.next</span><br><span class="line">            <span class="keyword">if</span> l1 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">while</span>(l2):</span><br><span class="line">                    sum=l2.val+carry</span><br><span class="line">                    result.next=ListNode(sum%<span class="number">10</span>)</span><br><span class="line">                    result=result.next</span><br><span class="line">                    carry=sum//<span class="number">10</span></span><br><span class="line">                    l2=l2.next</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> l2 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">while</span>(l1):</span><br><span class="line">                    sum=l1.val+carry</span><br><span class="line">                    result.next=ListNode(sum%<span class="number">10</span>)</span><br><span class="line">                    result=result.next</span><br><span class="line">                    carry=sum//<span class="number">10</span></span><br><span class="line">                    l1=l1.next</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> carry==<span class="number">1</span>:</span><br><span class="line">            result.next=ListNode(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> head.next</span><br></pre></td></tr></table></figure>
<p>解法2和解法1时间复杂度一致，感觉效率一样，提交时间有点看运气呀。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">执行用时 :68 ms, 在所有 python3 提交中击败了99.26%的用户</span><br><span class="line"></span><br><span class="line">内存消耗 :14 MB, 在所有 python3 提交中击败了5.06%的用户</span><br></pre></td></tr></table></figure>
<p>我这个看起来麻烦好多啊，但总归我自己写的，贴上来骄傲一下！</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>发现，温故而知新的重要性。</p>
<p>很多知识当时觉得自己会了，过几天回过头又不会了，真的尴尬啊。</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔之2019-11-25</title>
    <url>/2019/11/25/%E9%9A%8F%E7%AC%94%E4%B9%8B2019-11-25/</url>
    <content><![CDATA[<h1 id="梦想"><a href="#梦想" class="headerlink" title="梦想"></a>梦想</h1><p>一直很崇拜王阳明，也一直想做一个像他这样的人。在我印象里，有一个词语叫做，内圣外王，它可以用来形容这样的人。于我来说，要培养这样的心灵和品德。作为结果，日常生活中不会浪费时间；即使浪费了时间，也应该及时反审自身，重新走上正轨；只要朝着既定目标前进，就不会出现对未来的焦虑和忧愁。</p>
 <a id="more"></a> 
<h1 id="现实"><a href="#现实" class="headerlink" title="现实"></a>现实</h1><p>现实就是很残酷，虽然喜欢王阳明，但是他的传习录一直摆在边上，不太肯花时间来细品，总会找各种有的没的理由。结果就是只听过人生的只言片语，但是却没有跟他真正在心灵上对话过。</p>
<p>生活里，定下了很多目标，结果就是执行了一段时间就放弃了。行百里者半九十，说的是快成功时放弃了；对我来说，刚走出一点点，就不自觉地忘记了当初立下的豪言壮语，就和我放弃了运动、冥想、写文章一样，这样的事情真的太多了。我本来可以有更多收获的。</p>
<p>每天各种各样的时间，都沉迷在小说、直播中。而且一开始，少则两三个小时，多则就是一整天。</p>
<p>现在是晚上九点半，到这个点，心里不自觉的想要放松，可以明天再来抓紧时间，明天重新开始。可是，一日复一日，每天都是这个样子。</p>
<p>今天本来的想法是编程训练四小时、阅读一个半小时、总结半小时、随笔一小时。完成的结果，应当是编程训练四小时、阅读半小时、随笔一小时。为什么会这样，因为在工作之后，不自觉的就想着我可以休息一下，放松一下，结果就是数个小时、悄悄地划走。今天，我本来可以更好。</p>
<h1 id="戾气"><a href="#戾气" class="headerlink" title="戾气"></a>戾气</h1><p>这几天，一直感觉自己戾气很重，不知道我身边的人有没有感受到。</p>
<p>在写这个的时候，问了实验室的其他人，他们说我没有给他们这个感觉。</p>
<p>其实，我感觉自己戾气真的很重，但是因为可能发脾气，会影响到同学之间的关系，又会被人说矫情，就一直藏在心里。</p>
<p>我的实验室玩游戏其实很普遍，大多数人玩游戏，开黑语音啥的，我都可以接受。有个师兄语音说方言，给我的感觉就是很难受，普通话还可以接受，但是方言夹在一起，我就感觉很接受不了，主要是由于说话的语调。其实，我想说，玩游戏就玩游戏，为什么要叫唤呢？人没有13数吗？我玩游戏的时候就不太说话，静静地玩游戏，不好吗？</p>
<p>同一个师兄，最近他成为了预备党员，然后学校的预备党员各种活动，包括他都各种吐槽，嫌这嫌那，说学校的事情真的麻烦。最近预备党员要结业考试了，他想着是回家时间和这个冲突，害的自己回不了家，然后一顿吐槽。然后，他对党的一些看法，认为现在的一些做法就是形式主义。我也接受不了。我想的是，既然这么看不起，当初为什么要入党，做一个围观群众不好吗？</p>
<p>我不知道是不是我自己先入为主，就一直有意见。但是我也不想说，因为说真话是会伤感情的，想着是快毕业了，大家好聚好散，因为别人的想法，我改变不了，我也只能尽量地从自身做起，小心翼翼地维护关系。</p>
<p>不知道这是不是和我自己的小心思、小气魄有关。我觉得这些本来不应该成为问题，毕竟和我自身无关，我要做的是首先做好自己。</p>
<h1 id="有关生性凉薄"><a href="#有关生性凉薄" class="headerlink" title="有关生性凉薄"></a>有关生性凉薄</h1><p>今天突然在知乎看到了这个名词，就觉得这个词语和我自身很贴切。</p>
<p>以下这段话，复制于知乎，我觉得很有道理。</p>
<p>我觉得我就是一个凉薄的人，外热内冷。和别人交往时大大咧咧，也能聊到一起，但事实我内心没有一点波动。有人伤心了，受伤了，我冲上去关心他，但事实上我内心没有一点担忧；我看上去嘘寒问暖，内心其实无感甚至有点不耐烦。我参加同学聚会、宿舍聚会，只是不想显得不合群，其实我一点都不想参加。</p>
<p>我的状态，借用另一个答主的回答：</p>
<p>对各种感情都不会深入，包括亲情都很淡，仅仅维持在不违反社会道德底线之上，基本都是表面上的礼节。</p>
<p>我不是排斥一群人的狂欢，但更享受一个人的孤独。</p>
<p>我一个人吃饭，不用吃前拍照，吃一半又拍照，吃完还拍照，还要P图发朋友圈。我喜欢一个人吃烧烤、火锅，也不在乎其他人异样的眼光。</p>
<p>我一个人上课，下课。我不想明明想坐第一排，却要跟随大流坐后面。</p>
<p>我一个人在图书馆写作业看书，不和舍友一起刷剧、打游戏。</p>
<p>我一个人逛街，喜欢那种无目的地的乱逛，喜欢那种不经意发现喜欢之物的惊喜感。</p>
<p>我一个人看电影，选择自己喜欢的恐怖、惊悚、文艺主题，也不在乎自己一个人处于小情侣、朋友团里。</p>
<p>我从来不觉得我是一个另类、一个怪物，不同的人有不同的选择而已。</p>
<p>我觉得，我的很多状态，都在这段描述里面，很多时候，我只是不想显得太过不合群，我的内心更加的享受一个人的时候。</p>
<p>我只是在生活中不懂得拒绝，不懂得特立独行。</p>
<h1 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h1><p>我特现实，又很不现实。</p>
<p>我特现实，就在于一直想赚钱，想追求财务自由。</p>
<p>我又很不现实，我浪费了很多时间，错过了很多机会，没有努力，错过好几千的奖学金；没有努力，所以到现实，还是在花父母的钱，还在看父母辛苦劳作；没有努力，每天都想着明天会更好。但是不行动，一直在原地打转，却幻想从天而降的馅饼。</p>
<p>我其实超想当个公务员，首先是为自己，其次是为国家。但我又觉得自己考不上，又不太想花时间去准备。明年这个时候，应该不会去报名，因为没有行动。</p>
<p>现在在做的就是，努力当个JAVA开发，在赚钱的路上踏出自己的第一步。</p>
<p>这次应该没有半途放弃的哀嚎，我是认真的。</p>
]]></content>
      <tags>
        <tag>myself</tag>
      </tags>
  </entry>
  <entry>
    <title>敦盛</title>
    <url>/2019/11/25/%E6%95%A6%E7%9B%9B/</url>
    <content><![CDATA[<center><font size="8">敦盛</font></center>

 <a id="more"></a> 
<p>常思人世漂流无常，譬如朝露，水中映月 。</p>
<p>刹那繁华瞬间即逝，风流人物，今非昔比。</p>
<p>人生五十年，莫非熙熙攘攘，浮生幻梦。</p>
<p>名垂青史，功败湮灭，只是宿命因果 。</p>
<p>一念之间，有何可惜，急至京都忧心难忍。</p>
<p>狱门示众，敦盛之首，窃而归家传僧供奉。</p>
<p>叹息如烟，人间无常，人生五十年。</p>
<p>莫非熙熙攘攘，浮生幻梦。</p>
]]></content>
      <tags>
        <tag>古典</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode第1题</title>
    <url>/2019/11/25/leetcode%E7%AC%AC1%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode第1题"><a href="#leetcode第1题" class="headerlink" title="leetcode第1题"></a>leetcode第1题</h1> <a id="more"></a> 
<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>给定 nums = [2, 7, 11, 15], target = 9</p>
<p>因为 nums[0] + nums[1] = 2 + 7 = 9<br>所以返回 [0, 1]</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>很早就写过这道题，就一直有印象，就和单词书的abandon一样，始终是第一页的第一个单词，从开始到放弃，一直在这个地方徘徊。</p>
<p>题目也很简单，最简单的做法就是双重循环暴力破解，但是时间复杂度为O(n^2),结果就是超时了，不太行。</p>
<p>所以要用更加高级的做法，用空间换时间，引出了哈希的概念。</p>
<p>把用过的数据放在hash中，因为查询哈希只需要O(1)的时间,再加一次循环，解答本题的时间复杂度为O(n)，问题就解决了。</p>
<p>在python里面，哈希就是字典，更加简单容易。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在进行的时候，忘记了python遍历索引和值，卡了好一会，在网上搜索到了enumerate函数，解决了这个问题。</p>
<p>我又试着不用enumerate来解决这个问题。</p>
<p>下面给出了我的两个解法。</p>
<h2 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums: List[int], target: int)</span> -&gt; List[int]:</span></span><br><span class="line">        d=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> enumerate(nums):</span><br><span class="line">            <span class="keyword">if</span> target-v <span class="keyword">in</span> d:</span><br><span class="line">                <span class="keyword">return</span> d[target-v],k</span><br><span class="line">            d[v]=k</span><br></pre></td></tr></table></figure>
<h2 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums: List[int], target: int)</span> -&gt; List[int]:</span></span><br><span class="line">        d=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            <span class="keyword">if</span> target-nums[i] <span class="keyword">in</span> d:</span><br><span class="line">                <span class="keyword">return</span> d[target-nums[i]],i</span><br><span class="line">            d[nums[i]]=i</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>就时间上来讲，enumerate的做法比我快很多，不知道差距在哪里？</p>
<p>猜测应该是实现方式的差距，我调用了range，它的效率可能不高。</p>
<p>这个问题留给以后解决吧！</p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>新的开始</title>
    <url>/2019/11/25/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/</url>
    <content><![CDATA[<p> 时隔八个月，我开始写我的个人博客，希望这次不要放弃吧。 </p>
 <a id="more"></a> 
<p>话说，新的开始把以前的东西给删了，结果删的时候又出问题了，我可真是个小白呀。</p>
]]></content>
      <tags>
        <tag>myself</tag>
      </tags>
  </entry>
</search>
